{"version":3,"file":"index.DmIIp8Mh.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../node_modules/zustand/esm/middleware.mjs","../../src/lib/api.ts","../../src/stores/authStore.ts","../../src/stores/themeStore.ts","../../src/lib/preloadRoutes.ts","../../src/lib/serviceWorker.ts","../../node_modules/engine.io-parser/build/esm/commons.js","../../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../../node_modules/engine.io-parser/build/esm/index.js","../../node_modules/@socket.io/component-emitter/lib/esm/index.js","../../node_modules/engine.io-client/build/esm/globals.js","../../node_modules/engine.io-client/build/esm/util.js","../../node_modules/engine.io-client/build/esm/transport.js","../../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../../node_modules/engine.io-client/build/esm/transports/polling.js","../../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../../node_modules/engine.io-client/build/esm/transports/websocket.js","../../node_modules/engine.io-client/build/esm/transports/index.js","../../node_modules/engine.io-client/build/esm/transports/webtransport.js","../../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../../node_modules/engine.io-client/build/esm/socket.js","../../node_modules/socket.io-parser/build/esm/is-binary.js","../../node_modules/socket.io-parser/build/esm/binary.js","../../node_modules/socket.io-parser/build/esm/index.js","../../node_modules/socket.io-client/build/esm/on.js","../../node_modules/socket.io-client/build/esm/socket.js","../../node_modules/socket.io-client/build/esm/contrib/backo2.js","../../node_modules/socket.io-client/build/esm/manager.js","../../node_modules/socket.io-client/build/esm/index.js","../../node_modules/socket.io-client/build/esm/url.js","../../src/lib/socket.ts","../../src/components/master/MasterLogin.tsx","../../src/components/master/SystemStats.tsx","../../src/components/master/MasterDashboard.tsx","../../src/components/client/ClientLogin.tsx","../../src/components/client/AgentDashboard.tsx","../../src/components/client/AdminDashboard.tsx","../../src/components/client/ClientDashboard.tsx","../../src/components/client/WhatsAppConnection.tsx","../../src/components/client/WhatsAppMonitoring.tsx","../../src/components/client/ConversationsModule.tsx","../../src/components/client/TagsManagement.tsx","../../src/components/client/UserManagement.tsx","../../src/components/client/CampaignManagement.tsx","../../src/components/client/QueueManagement.tsx","../../src/components/client/SocialMediaConnection.tsx","../../src/components/client/SocialMediaIntegration.tsx","../../src/components/client/SocialMediaMonitoring.tsx","../../src/components/client/WhatsAppReport.tsx","../../src/components/client/ConversationsReport.tsx","../../src/components/client/UsersReport.tsx","../../src/components/client/ContactsReport.tsx","../../src/components/client/CampaignsReport.tsx","../../src/components/client/TagsReport.tsx","../../src/components/client/QueueReport.tsx","../../src/components/master/ThemeSelector.tsx","../../src/components/master/GlobalSettings.tsx","../../src/components/master/CompanyManagement.tsx","../../src/components/layouts/MasterLayout.tsx","../../src/components/layouts/ClientLayout.tsx","../../src/App.tsx","../../src/lib/imageOptimizer.ts","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { useAuthStore } from '../stores/authStore';\n\nconst API_BASE_URL = import.meta.env.VITE_BACKEND_URL || 'http://localhost:3001';\n\nclass ApiClient {\n  private baseURL: string;\n\n  constructor(baseURL: string) {\n    this.baseURL = baseURL;\n  }\n\n  private async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<T> {\n    // Proteção para desenvolvimento - não fazer chamadas reais de API\n    if (import.meta.env.DEV) {\n      console.log('🚫 API desabilitada em desenvolvimento:', endpoint);\n      return { success: true, data: [] } as T;\n    }\n\n    const { user } = useAuthStore.getState();\n    \n    const url = `${this.baseURL}/api${endpoint}`;\n    \n    const config: RequestInit = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...(user?.token && { Authorization: `Bearer ${user.token}` }),\n        ...(user?.companyId && { 'X-Company-ID': user.companyId }),\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      if (import.meta.env.VITE_DEBUG === 'true') {\n        console.log(`🔄 API Request: ${endpoint}`, { \n          method: options.method || 'GET',\n          hasToken: !!user?.token,\n          hasCompanyId: !!user?.companyId\n        });\n      }\n      \n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        console.error(`❌ API Error [${endpoint}]:`, errorData);\n        throw new Error(errorData.error || `HTTP ${response.status}: ${response.statusText}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error(`❌ API Error [${endpoint}]:`, error);\n      throw error;\n    }\n  }\n\n  // Auth endpoints\n  async login(email: string, password: string, userType: 'master' | 'client') {\n    if (import.meta.env.VITE_DEBUG === 'true') {\n      console.log(`🔑 Tentando login: ${email}, tipo: ${userType}`);\n    }\n    return this.request<{\n      success: boolean;\n      token: string;\n      user: any;\n    }>('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password, userType }),\n    });\n  }\n\n  async register(userData: {\n    name: string;\n    email: string;\n    password: string;\n    companyName: string;\n    companyDomain: string;\n  }) {\n    return this.request<{\n      success: boolean;\n      token: string;\n      user: any;\n    }>('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async verifyToken() {\n    return this.request<{\n      success: boolean;\n      user: any;\n    }>('/auth/verify');\n  }\n\n  // WhatsApp endpoints\n  async getWhatsAppStatus(companyId: string) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/whatsapp/status/${companyId}`);\n  }\n\n  async connectWhatsApp(companyId: string, options?: { connectionType?: string }) {\n    return this.request<{\n      success: boolean;\n      message: string;\n      data: any;\n    }>(`/whatsapp/connect/${companyId}`, {\n      method: 'POST',\n      body: JSON.stringify(options || {}),\n    });\n  }\n\n  async disconnectWhatsApp(companyId: string) {\n    return this.request<{\n      success: boolean;\n      message: string;\n    }>(`/whatsapp/disconnect/${companyId}`, {\n      method: 'POST',\n    });\n  }\n\n  async sendWhatsAppMessage(\n    companyId: string,\n    to: string,\n    message: string,\n    type: string = 'text'\n  ) {\n    return this.request<{\n      success: boolean;\n      message: string;\n      data: any;\n    }>(`/whatsapp/send/${companyId}`, {\n      method: 'POST',\n      body: JSON.stringify({ to, message, type }),\n    });\n  }\n\n  async getWhatsAppQRCode(companyId: string) {\n    return this.request<{\n      success: boolean;\n      data: { qrCode: string };\n    }>(`/whatsapp/qr-code/${companyId}`);\n  }\n  \n  async getWhatsAppSessions(companyId: string) {\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>(`/whatsapp/sessions/${companyId}`);\n  }\n  \n  async getWhatsAppStats(companyId: string, dateRange: any = {}) {\n    const queryParams = new URLSearchParams(dateRange).toString();\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/whatsapp/stats/${companyId}?${queryParams}`);\n  }\n  \n  async getWhatsAppMonitoring(companyId: string, instanceName: string) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/whatsapp/monitoring/${companyId}/${instanceName}`);\n  }\n\n  async getWhatsAppConnectionTypes() {\n    return this.request<{\n      success: boolean;\n      data: { id: string; name: string; description: string }[];\n    }>('/whatsapp/connection-types');\n  }\n  \n  // Social Media endpoints\n  async getSocialMediaStatus(companyId: string, platform: 'instagram' | 'facebook') {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/social-media/${platform}/status/${companyId}`);\n  }\n  \n  async connectSocialMedia(companyId: string, platform: 'instagram' | 'facebook', authData: any) {\n    return this.request<{\n      success: boolean;\n      message: string;\n      data: any;\n    }>(`/social-media/${platform}/connect/${companyId}`, {\n      method: 'POST',\n      body: JSON.stringify(authData),\n    });\n  }\n  \n  async disconnectSocialMedia(companyId: string, platform: 'instagram' | 'facebook') {\n    return this.request<{\n      success: boolean;\n      message: string;\n    }>(`/social-media/${platform}/disconnect/${companyId}`, {\n      method: 'POST',\n    });\n  }\n  \n  async getSocialMediaSessions(companyId: string, platform: 'instagram' | 'facebook') {\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>(`/social-media/${platform}/sessions/${companyId}`);\n  }\n  \n  async getSocialMediaStats(companyId: string, platform: 'instagram' | 'facebook', dateRange: any = {}) {\n    const queryParams = new URLSearchParams(dateRange).toString();\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/social-media/${platform}/stats/${companyId}?${queryParams}`);\n  }\n\n  // Conversations endpoints\n  async getConversations(companyId: string, filters: any = {}) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>(`/conversations/${companyId}?${queryParams}`);\n  }\n  \n  async getConversationsReport(companyId: string, filters: any = {}) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request<{\n      success: boolean;\n      data: any;\n      stats: any;\n    }>(`/conversations/${companyId}/report?${queryParams}`);\n  }\n\n  async getConversation(companyId: string, conversationId: string) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/conversations/${companyId}/${conversationId}`);\n  }\n\n  async updateConversation(\n    companyId: string,\n    conversationId: string,\n    updateData: any\n  ) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/conversations/${companyId}/${conversationId}`, {\n      method: 'PUT',\n      body: JSON.stringify(updateData),\n    });\n  }\n\n  async getMessages(\n    companyId: string,\n    conversationId: string,\n    limit: number = 50,\n    offset: number = 0\n  ) {\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>(`/conversations/${companyId}/${conversationId}/messages?limit=${limit}&offset=${offset}`);\n  }\n\n  async sendMessage(\n    companyId: string,\n    conversationId: string,\n    messageData: any\n  ) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/conversations/${companyId}/${conversationId}/messages`, {\n      method: 'POST',\n      body: JSON.stringify(messageData),\n    });\n  }\n\n  // Users endpoints\n  async getUsers(companyId: string) {\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>(`/users/${companyId}`);\n  }\n  \n  async getUsersReport(companyId: string, filters: any = {}) {\n    const queryParams = new URLSearchParams(filters).toString();\n    return this.request<{\n      success: boolean;\n      data: any[];\n      stats: any;\n    }>(`/users/${companyId}/report?${queryParams}`);\n  }\n\n  async createUser(companyId: string, userData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/users/${companyId}`, {\n      method: 'POST',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async updateUser(companyId: string, userId: string, userData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/users/${companyId}/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(userData),\n    });\n  }\n\n  async deleteUser(companyId: string, userId: string) {\n    return this.request<{\n      success: boolean;\n    }>(`/users/${companyId}/${userId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Tags endpoints\n  async getTags(companyId: string) {\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>(`/tags/${companyId}`);\n  }\n\n  async createTag(companyId: string, tagData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/tags/${companyId}`, {\n      method: 'POST',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async updateTag(companyId: string, tagId: string, tagData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/tags/${companyId}/${tagId}`, {\n      method: 'PUT',\n      body: JSON.stringify(tagData),\n    });\n  }\n\n  async deleteTag(companyId: string, tagId: string) {\n    return this.request<{\n      success: boolean;\n    }>(`/tags/${companyId}/${tagId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Campaigns endpoints\n  async getCampaigns(companyId: string) {\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>(`/campaigns/${companyId}`);\n  }\n\n  async createCampaign(companyId: string, campaignData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/campaigns/${companyId}`, {\n      method: 'POST',\n      body: JSON.stringify(campaignData),\n    });\n  }\n\n  async updateCampaign(companyId: string, campaignId: string, campaignData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/campaigns/${companyId}/${campaignId}`, {\n      method: 'PUT',\n      body: JSON.stringify(campaignData),\n    });\n  }\n\n  async deleteCampaign(companyId: string, campaignId: string) {\n    return this.request<{\n      success: boolean;\n    }>(`/campaigns/${companyId}/${campaignId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  // Analytics endpoints\n  async getAnalytics(companyId: string, dateRange: any = {}) {\n    const queryParams = new URLSearchParams(dateRange).toString();\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/analytics/${companyId}?${queryParams}`);\n  }\n\n  // Upload endpoints\n  async uploadFile(companyId: string, file: File, type: string = 'message') {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', type);\n\n    return this.request<{\n      success: boolean;\n      data: { url: string; path: string };\n    }>(`/uploads/${companyId}`, {\n      method: 'POST',\n      body: formData,\n      headers: {}, // Remove Content-Type para FormData\n    });\n  }\n\n  // Companies endpoints (apenas para master)\n  async getCompanies() {\n    return this.request<{\n      success: boolean;\n      data: any[];\n    }>('/companies');\n  }\n\n  async createCompany(companyData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>('/companies', {\n      method: 'POST',\n      body: JSON.stringify(companyData),\n    });\n  }\n\n  async updateCompany(companyId: string, companyData: any) {\n    return this.request<{\n      success: boolean;\n      data: any;\n    }>(`/companies/${companyId}`, {\n      method: 'PUT',\n      body: JSON.stringify(companyData),\n    });\n  }\n\n  async deleteCompany(companyId: string) {\n    return this.request<{\n      success: boolean;\n    }>(`/companies/${companyId}`, {\n      method: 'DELETE',\n    });\n  }\n}\n\n// Instância singleton da API\nexport const api = new ApiClient(API_BASE_URL);\n\nexport default api;","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport api from '../lib/api';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  companyId?: string;\n  companyName?: string;\n  role: 'admin' | 'supervisor' | 'agent';\n  permissions: string[];\n  department?: string;\n  phone?: string;\n  status: 'active' | 'inactive';\n  lastLogin?: string;\n  token?: string; // Adicionar token JWT\n}\n\ninterface AuthState {\n  user: User | null;\n  userType: 'master' | 'client' | null;\n  isLoading: boolean;\n  login: (email: string, password: string, type: 'master' | 'client') => Promise<boolean>;\n  logout: () => void;\n  hasPermission: (permission: string) => boolean;\n  isAdminOrSupervisor: () => boolean;\n}\n\n// Definir permissões por role\nconst rolePermissions = {\n  admin: [\n    'manage_users',\n    'manage_campaigns',\n    'manage_settings',\n    'view_all_conversations',\n    'manage_integrations',\n    'view_analytics',\n    'manage_automations',\n    'manage_contacts',\n    'export_data',\n    'manage_billing',\n    'view_admin_dashboard'\n  ],\n  supervisor: [\n    'manage_users',\n    'manage_campaigns',\n    'view_all_conversations',\n    'view_analytics',\n    'manage_automations',\n    'manage_contacts',\n    'export_data',\n    'view_admin_dashboard'\n  ],\n  agent: [\n    'view_assigned_conversations',\n    'send_messages',\n    'view_contacts',\n    'basic_analytics',\n    'view_agent_dashboard'\n  ]\n};\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      user: null,\n      userType: null,\n      isLoading: false,\n\n      login: async (email: string, password: string, type: 'master' | 'client') => {\n        set({ isLoading: true });\n        \n        try {\n          // Credenciais para login de demonstração\n          if (type === 'master' && email === 'admin@gybachat.com' && password === 'admin123') {\n            const userData: User = {\n              id: 'master-1',\n              name: 'Administrador Master',\n              email: 'admin@gybachat.com',\n              role: 'admin',\n              permissions: ['all'],\n              status: 'active',\n              token: 'demo-master-token'\n            };\n\n            set({\n              user: userData,\n              userType: 'master',\n              isLoading: false\n            });\n            \n            return true;\n          }\n          \n          // Credenciais para login de cliente de demonstração\n          const demoUsers = {\n            'admin@empresa.com': {\n              id: 'user-1',\n              name: 'João Silva - Admin',\n              companyId: 'company-1',\n              companyName: 'Empresa Demo',\n              role: 'admin',\n              permissions: ['manage_users', 'manage_campaigns', 'manage_settings', 'view_all_conversations'],\n              status: 'active',\n              token: 'demo-client-token'\n            },\n            'supervisor@empresa.com': {\n              id: 'user-2',\n              name: 'Maria Santos - Supervisora',\n              companyId: 'company-1',\n              companyName: 'Empresa Demo',\n              role: 'supervisor',\n              permissions: ['manage_users', 'view_all_conversations', 'view_analytics'],\n              status: 'active',\n              token: 'demo-supervisor-token'\n            },\n            'agente@empresa.com': {\n              id: 'user-3',\n              name: 'Carlos Lima - Agente',\n              companyId: 'company-1',\n              companyName: 'Empresa Demo',\n              role: 'agent',\n              permissions: ['view_assigned_conversations', 'send_messages'],\n              status: 'active',\n              token: 'demo-agent-token'\n            }\n          };\n          \n          if (type === 'client' && demoUsers[email] && password === 'demo123') {\n            set({\n              user: demoUsers[email] as User,\n              userType: 'client',\n              isLoading: false\n            });\n            \n            return true;\n          }\n          \n          // Tentar login real via API\n          try {\n            // Proteção para desenvolvimento - não fazer login via API\n            if (import.meta.env.DEV) {\n              console.log('🚫 Login via API desabilitado em desenvolvimento');\n              set({ isLoading: false });\n              return false;\n            }\n\n            const response = await api.login(email, password, type);\n            \n            if (response.success && response.token && response.user) {\n              // Salvar token no localStorage também (para compatibilidade)\n              localStorage.setItem('token', response.token);\n              \n              // Mapear dados do backend para o formato do frontend\n              const userData: User = {\n                id: response.user.id,\n                name: response.user.name,\n                email: response.user.email,\n                avatar: response.user.avatar_url,\n                companyId: response.user.company_id,\n                companyName: response.user.companyName || 'Empresa',\n                role: response.user.role,\n                permissions: response.user.permissions || rolePermissions[response.user.role] || [],\n                department: response.user.metadata?.department,\n                phone: response.user.metadata?.phone,\n                status: response.user.status || 'active',\n                lastLogin: new Date().toISOString(),\n                token: response.token\n              };\n\n              set({\n                user: userData,\n                userType: type,\n                isLoading: false\n              });\n              \n              return true;\n            }\n          } catch (apiError) {\n            console.error('API login error:', apiError);\n            // Continuar com o fluxo para retornar false\n          }\n          \n          set({ isLoading: false });\n          return false;\n          \n        } catch (error) {\n          console.error('Login error:', error);\n          set({ isLoading: false });\n          return false;\n        }\n      },\n\n      logout: () => {\n        // Limpar token do localStorage\n        localStorage.removeItem('token');\n        \n        // Desconectar socket se estiver conectado\n        if (window.socket) {\n          try {\n            window.socket.disconnect();\n          } catch (e) {\n            console.error('Erro ao desconectar socket:', e);\n          }\n        }\n        \n        // Limpar estado de autenticação\n        set({ user: null, userType: null });\n        \n        // Redirecionar para a página de login\n        if (window.location.pathname.includes('/master')) {\n          window.location.href = '/master/login';\n        } else {\n          window.location.href = '/client/login';\n        }\n      },\n\n      hasPermission: (permission: string) => {\n        const { user } = get();\n        if (!user) return false;\n        if (user.permissions.includes('all')) return true;\n        return user.permissions?.includes(permission) || false;\n      },\n\n      isAdminOrSupervisor: () => {\n        const { user } = get();\n        return user?.role === 'admin' || user?.role === 'supervisor';\n      }\n    }),\n    {\n      name: 'gybachat-auth'\n    }\n  )\n);","import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\nexport interface Theme {\n  name: string;\n  displayName: string;\n  colors: {\n    primary: {\n      50: string;\n      100: string;\n      200: string;\n      300: string;\n      400: string;\n      500: string;\n      600: string;\n      700: string;\n      800: string;\n      900: string;\n    };\n  };\n}\n\nexport const themes: Record<string, Theme> = {\n  blue: {\n    name: 'blue',\n    displayName: 'Azul Corporativo',\n    colors: {\n      primary: {\n        50: '#eff6ff',\n        100: '#dbeafe',\n        200: '#bfdbfe',\n        300: '#93c5fd',\n        400: '#60a5fa',\n        500: '#3b82f6',\n        600: '#2563eb',\n        700: '#1d4ed8',\n        800: '#1e40af',\n        900: '#1e3a8a'\n      }\n    }\n  },\n  green: {\n    name: 'green',\n    displayName: 'Verde Natureza',\n    colors: {\n      primary: {\n        50: '#f0fdf4',\n        100: '#dcfce7',\n        200: '#bbf7d0',\n        300: '#86efac',\n        400: '#4ade80',\n        500: '#22c55e',\n        600: '#16a34a',\n        700: '#15803d',\n        800: '#166534',\n        900: '#14532d'\n      }\n    }\n  },\n  purple: {\n    name: 'purple',\n    displayName: 'Roxo Elegante',\n    colors: {\n      primary: {\n        50: '#faf5ff',\n        100: '#f3e8ff',\n        200: '#e9d5ff',\n        300: '#d8b4fe',\n        400: '#c084fc',\n        500: '#a855f7',\n        600: '#9333ea',\n        700: '#7c3aed',\n        800: '#6b21a8',\n        900: '#581c87'\n      }\n    }\n  },\n  orange: {\n    name: 'orange',\n    displayName: 'Laranja Vibrante',\n    colors: {\n      primary: {\n        50: '#fff7ed',\n        100: '#ffedd5',\n        200: '#fed7aa',\n        300: '#fdba74',\n        400: '#fb923c',\n        500: '#f97316',\n        600: '#ea580c',\n        700: '#c2410c',\n        800: '#9a3412',\n        900: '#7c2d12'\n      }\n    }\n  },\n  red: {\n    name: 'red',\n    displayName: 'Vermelho Dinâmico',\n    colors: {\n      primary: {\n        50: '#fef2f2',\n        100: '#fee2e2',\n        200: '#fecaca',\n        300: '#fca5a5',\n        400: '#f87171',\n        500: '#ef4444',\n        600: '#dc2626',\n        700: '#b91c1c',\n        800: '#991b1b',\n        900: '#7f1d1d'\n      }\n    }\n  },\n  teal: {\n    name: 'teal',\n    displayName: 'Azul Turquesa',\n    colors: {\n      primary: {\n        50: '#f0fdfa',\n        100: '#ccfbf1',\n        200: '#99f6e4',\n        300: '#5eead4',\n        400: '#2dd4bf',\n        500: '#14b8a6',\n        600: '#0d9488',\n        700: '#0f766e',\n        800: '#115e59',\n        900: '#134e4a'\n      }\n    }\n  }\n};\n\ninterface GlobalSettings {\n  // Configurações Gerais\n  platformName: string;\n  companyName: string;\n  supportEmail: string;\n  supportPhone: string;\n  defaultTimezone: string;\n  defaultLanguage: string;\n  defaultCurrency: string;\n  maintenanceMode: boolean;\n  allowNewRegistrations: boolean;\n\n  // Configurações de Segurança\n  sessionTimeout: number;\n  maxLoginAttempts: number;\n  lockoutDuration: number;\n  passwordStrength: string;\n  require2FA: boolean;\n  enableAuditLogs: boolean;\n  enableEncryption: boolean;\n\n  // Limites e Quotas\n  maxUsersPerCompany: number;\n  maxChatsPerUser: number;\n  basicPlanMessageLimit: number;\n  proPlanMessageLimit: number;\n  enterprisePlanMessageLimit: number;\n  maxFileSize: number;\n  dataRetentionDays: number;\n  apiRateLimit: number;\n\n  // Integrações\n  enableWhatsApp: boolean;\n  enableTelegram: boolean;\n  enableInstagram: boolean;\n  enableFacebook: boolean;\n  enableWebChat: boolean;\n  enableEmail: boolean;\n\n  // Notificações\n  enableEmailNotifications: boolean;\n  enableSMSNotifications: boolean;\n  enablePushNotifications: boolean;\n  enableSlackIntegration: boolean;\n  enableDiscordIntegration: boolean;\n\n  // Faturamento\n  enableBilling: boolean;\n  defaultPaymentMethod: string;\n  invoicePrefix: string;\n  taxRate: number;\n  trialPeriodDays: number;\n  gracePeriodDays: number;\n\n  // Automação\n  enableChatbots: boolean;\n  enableAutoResponders: boolean;\n  enableWorkflowAutomation: boolean;\n  enableScheduledMessages: boolean;\n\n  // Monitoramento\n  enableSystemMonitoring: boolean;\n  enablePerformanceTracking: boolean;\n  enableErrorTracking: boolean;\n  enableUptime: boolean;\n\n  // Backup e Logs\n  enableAutoBackup: boolean;\n  backupFrequency: string;\n  backupRetention: number;\n  logLevel: string;\n  enableLogRotation: boolean;\n\n  // API e Webhooks\n  enablePublicAPI: boolean;\n  enableWebhooks: boolean;\n  webhookRetryAttempts: number;\n  apiVersioning: boolean;\n\n  // Sistema\n  enableCDN: boolean;\n  enableCaching: boolean;\n  cacheTimeout: number;\n  enableCompression: boolean;\n  enableSSL: boolean;\n}\n\ninterface ThemeState {\n  currentTheme: Theme;\n  availableThemes: Theme[];\n  globalSettings: GlobalSettings;\n  setTheme: (themeName: string) => void;\n  updateGlobalSettings: (settings: Partial<GlobalSettings>) => void;\n  applyThemeGlobally: () => void;\n}\n\nconst defaultGlobalSettings: GlobalSettings = {\n  // Configurações Gerais\n  platformName: 'Gybachat',\n  companyName: 'Gybachat',\n  supportEmail: 'suporte@gybachat.com',\n  supportPhone: '+55 11 99999-9999',\n  defaultTimezone: 'America/Sao_Paulo',\n  defaultLanguage: 'pt-BR',\n  defaultCurrency: 'BRL',\n  maintenanceMode: false,\n  allowNewRegistrations: true,\n\n  // Configurações de Segurança\n  sessionTimeout: 60,\n  maxLoginAttempts: 5,\n  lockoutDuration: 15,\n  passwordStrength: 'medium',\n  require2FA: false,\n  enableAuditLogs: true,\n  enableEncryption: true,\n\n  // Limites e Quotas\n  maxUsersPerCompany: 50,\n  maxChatsPerUser: 100,\n  basicPlanMessageLimit: 2000,\n  proPlanMessageLimit: 10000,\n  enterprisePlanMessageLimit: 100000,\n  maxFileSize: 16,\n  dataRetentionDays: 365,\n  apiRateLimit: 100,\n\n  // Integrações\n  enableWhatsApp: true,\n  enableTelegram: true,\n  enableInstagram: false,\n  enableFacebook: false,\n  enableWebChat: true,\n  enableEmail: true,\n\n  // Notificações\n  enableEmailNotifications: true,\n  enableSMSNotifications: false,\n  enablePushNotifications: true,\n  enableSlackIntegration: false,\n  enableDiscordIntegration: false,\n\n  // Faturamento\n  enableBilling: true,\n  defaultPaymentMethod: 'credit_card',\n  invoicePrefix: 'GYB',\n  taxRate: 0,\n  trialPeriodDays: 14,\n  gracePeriodDays: 7,\n\n  // Automação\n  enableChatbots: true,\n  enableAutoResponders: true,\n  enableWorkflowAutomation: true,\n  enableScheduledMessages: true,\n\n  // Monitoramento\n  enableSystemMonitoring: true,\n  enablePerformanceTracking: true,\n  enableErrorTracking: true,\n  enableUptime: true,\n\n  // Backup e Logs\n  enableAutoBackup: true,\n  backupFrequency: 'daily',\n  backupRetention: 30,\n  logLevel: 'info',\n  enableLogRotation: true,\n\n  // API e Webhooks\n  enablePublicAPI: true,\n  enableWebhooks: true,\n  webhookRetryAttempts: 3,\n  apiVersioning: true,\n\n  // Sistema\n  enableCDN: true,\n  enableCaching: true,\n  cacheTimeout: 3600,\n  enableCompression: true,\n  enableSSL: true,\n};\n\nexport const useThemeStore = create<ThemeState>()(\n  persist(\n    (set, get) => ({\n      currentTheme: themes.blue,\n      availableThemes: Object.values(themes),\n      globalSettings: defaultGlobalSettings,\n\n      setTheme: (themeName: string) => {\n        const theme = themes[themeName];\n        if (theme) {\n          set({ currentTheme: theme });\n          // Aplicar tema globalmente\n          get().applyThemeGlobally();\n        }\n      },\n\n      updateGlobalSettings: (newSettings: Partial<GlobalSettings>) => {\n        set((state) => ({\n          globalSettings: { ...state.globalSettings, ...newSettings }\n        }));\n      },\n\n      applyThemeGlobally: () => {\n        const { currentTheme } = get();\n        const root = document.documentElement;\n        \n        // Remove existing theme classes\n        Object.keys(themes).forEach(themeName => {\n          root.classList.remove(`theme-${themeName}`);\n        });\n        \n        // Add current theme class\n        root.classList.add(`theme-${currentTheme.name}`);\n        \n        // Set CSS custom properties for global use\n        Object.entries(currentTheme.colors.primary).forEach(([shade, color]) => {\n          root.style.setProperty(`--primary-${shade}`, color);\n        });\n\n        // Set additional CSS variables for common use cases\n        root.style.setProperty('--color-primary', currentTheme.colors.primary[600]);\n        root.style.setProperty('--color-primary-hover', currentTheme.colors.primary[700]);\n        root.style.setProperty('--color-primary-light', currentTheme.colors.primary[100]);\n        root.style.setProperty('--color-primary-dark', currentTheme.colors.primary[800]);\n\n        // Broadcast theme change to all components\n        window.dispatchEvent(new CustomEvent('themeChanged', { \n          detail: { theme: currentTheme } \n        }));\n      }\n    }),\n    {\n      name: 'gybachat-theme',\n      onRehydrate: (state) => {\n        // Apply theme immediately when store is rehydrated\n        if (state) {\n          setTimeout(() => state.applyThemeGlobally(), 0);\n        }\n      }\n    }\n  )\n);","/**\n * Utilitário para preload de rotas e recursos\n * Melhora a performance de navegação prefetchando rotas prováveis\n */\n\n// Mapeamento de rotas para recursos críticos\nconst routeResources: Record<string, string[]> = {\n  '/client/dashboard': [\n    '/assets/dashboard-icons.svg',\n    '/assets/client-dashboard-bg.webp'\n  ],\n  '/client/conversations': [\n    '/assets/chat-icons.svg'\n  ],\n  '/master/dashboard': [\n    '/assets/master-dashboard-bg.webp'\n  ]\n};\n\n/**\n * Prefetch de recursos para uma rota específica\n */\nexport function prefetchRouteResources(route: string): void {\n  if (typeof document === 'undefined') return;\n  \n  const resources = routeResources[route] || [];\n  \n  resources.forEach(resource => {\n    // Prefetch de imagens\n    if (resource.match(/\\.(png|jpg|jpeg|gif|webp|svg)$/)) {\n      const img = new Image();\n      img.src = resource;\n    }\n    // Prefetch de outros recursos\n    else {\n      const link = document.createElement('link');\n      link.rel = 'prefetch';\n      link.href = resource;\n      document.head.appendChild(link);\n    }\n  });\n}\n\n/**\n * Prefetch de rotas prováveis baseado na rota atual\n */\nexport function prefetchLikelyRoutes(currentRoute: string): void {\n  if (typeof document === 'undefined') return;\n  \n  // Mapeamento de rotas prováveis\n  const likelyRoutes: Record<string, string[]> = {\n    '/client/dashboard': [\n      '/client/conversations',\n      '/client/whatsapp',\n      '/client/tags'\n    ],\n    '/client/conversations': [\n      '/client/dashboard',\n      '/client/tags',\n      '/client/queue'\n    ],\n    '/master/dashboard': [\n      '/master/companies',\n      '/master/themes',\n      '/master/settings'\n    ]\n  };\n  \n  const routesToPrefetch = likelyRoutes[currentRoute] || [];\n  \n  routesToPrefetch.forEach(route => {\n    // Prefetch de recursos da rota\n    prefetchRouteResources(route);\n    \n    // Prefetch da rota em si (para frameworks que suportam)\n    const link = document.createElement('link');\n    link.rel = 'prefetch';\n    link.href = route;\n    document.head.appendChild(link);\n  });\n}\n\nexport default {\n  prefetchRouteResources,\n  prefetchLikelyRoutes\n};","/**\n * Service Worker para cache offline e melhor performance\n * Implementa estratégia de cache para diferentes tipos de recursos\n */\n\n// Nome do cache\nconst CACHE_NAME = 'gybachat-cache-v1';\n\n// Recursos a serem cacheados na instalação\nconst PRECACHE_RESOURCES = [\n  '/',\n  '/index.html',\n  '/manifest.json',\n  '/favicon.ico',\n  '/assets/logo.svg'\n];\n\n// Estratégias de cache por tipo de recurso\nconst CACHE_STRATEGIES = {\n  // Assets estáticos: cache primeiro, depois rede\n  assets: {\n    match: /\\.(js|css|svg|woff2?)$/,\n    strategy: 'cache-first'\n  },\n  // Imagens: stale-while-revalidate\n  images: {\n    match: /\\.(png|jpe?g|gif|webp)$/,\n    strategy: 'stale-while-revalidate'\n  },\n  // API: rede primeiro, fallback para cache\n  api: {\n    match: /\\/api\\//,\n    strategy: 'network-first'\n  },\n  // HTML: network-first para sempre ter a versão mais recente\n  html: {\n    match: /\\.(html)$/,\n    strategy: 'network-first'\n  }\n};\n\n// Código do Service Worker\nconst serviceWorkerCode = `\n// Instalação do Service Worker\nself.addEventListener('install', (event) => {\n  event.waitUntil(\n    caches.open('${CACHE_NAME}').then((cache) => {\n      return cache.addAll([\n        ${PRECACHE_RESOURCES.map(r => `'${r}'`).join(',\\n        ')}\n      ]);\n    })\n  );\n});\n\n// Ativação e limpeza de caches antigos\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((cacheNames) => {\n      return Promise.all(\n        cacheNames.map((cacheName) => {\n          if (cacheName !== '${CACHE_NAME}') {\n            return caches.delete(cacheName);\n          }\n        })\n      );\n    })\n  );\n});\n\n// Interceptação de requisições\nself.addEventListener('fetch', (event) => {\n  // Ignorar requisições de socket\n  if (event.request.url.includes('/socket.io/')) {\n    return;\n  }\n\n  const url = new URL(event.request.url);\n  \n  // Estratégia para assets estáticos\n  if (${CACHE_STRATEGIES.assets.match}.test(url.pathname)) {\n    event.respondWith(cacheFirst(event.request));\n  }\n  // Estratégia para imagens\n  else if (${CACHE_STRATEGIES.images.match}.test(url.pathname)) {\n    event.respondWith(staleWhileRevalidate(event.request));\n  }\n  // Estratégia para API\n  else if (${CACHE_STRATEGIES.api.match}.test(url.pathname)) {\n    event.respondWith(networkFirst(event.request));\n  }\n  // Estratégia para HTML\n  else if (${CACHE_STRATEGIES.html.match}.test(url.pathname) || url.pathname === '/') {\n    event.respondWith(networkFirst(event.request));\n  }\n  // Estratégia padrão\n  else {\n    event.respondWith(networkFirst(event.request));\n  }\n});\n\n// Estratégia: Cache First, fallback para rede\nasync function cacheFirst(request) {\n  const cachedResponse = await caches.match(request);\n  if (cachedResponse) {\n    return cachedResponse;\n  }\n  return fetch(request).then((response) => {\n    if (response.ok) {\n      const clonedResponse = response.clone();\n      caches.open('${CACHE_NAME}').then((cache) => {\n        cache.put(request, clonedResponse);\n      });\n    }\n    return response;\n  });\n}\n\n// Estratégia: Stale While Revalidate\nasync function staleWhileRevalidate(request) {\n  const cachedResponse = await caches.match(request);\n  \n  const fetchPromise = fetch(request).then((response) => {\n    if (response.ok) {\n      const clonedResponse = response.clone();\n      caches.open('${CACHE_NAME}').then((cache) => {\n        cache.put(request, clonedResponse);\n      });\n    }\n    return response;\n  }).catch(() => {\n    // Se a rede falhar e não tivermos cache, retornar uma resposta de fallback para imagens\n    if (request.url.match(${CACHE_STRATEGIES.images.match})) {\n      return caches.match('/assets/image-placeholder.svg');\n    }\n    throw new Error('Network and cache both failed');\n  });\n  \n  return cachedResponse || fetchPromise;\n}\n\n// Estratégia: Network First, fallback para cache\nasync function networkFirst(request) {\n  try {\n    const response = await fetch(request);\n    if (response.ok) {\n      const clonedResponse = response.clone();\n      caches.open('${CACHE_NAME}').then((cache) => {\n        cache.put(request, clonedResponse);\n      });\n    }\n    return response;\n  } catch (error) {\n    const cachedResponse = await caches.match(request);\n    if (cachedResponse) {\n      return cachedResponse;\n    }\n    \n    // Para HTML, retornar página offline\n    if (request.url.match(${CACHE_STRATEGIES.html.match}) || request.url.endsWith('/')) {\n      return caches.match('/offline.html');\n    }\n    \n    throw error;\n  }\n}\n\n// Sincronização em background\nself.addEventListener('sync', (event) => {\n  if (event.tag === 'sync-messages') {\n    event.waitUntil(syncMessages());\n  }\n});\n\n// Função para sincronizar mensagens pendentes\nasync function syncMessages() {\n  // Implementação de sincronização de mensagens pendentes\n  console.log('Syncing pending messages...');\n}\n`;\n\n/**\n * Registra o Service Worker\n */\nexport function registerServiceWorker(): void {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      // Criar um blob com o código do Service Worker\n      const blob = new Blob([serviceWorkerCode], { type: 'text/javascript' });\n      const serviceWorkerUrl = URL.createObjectURL(blob);\n      \n      navigator.serviceWorker.register(serviceWorkerUrl)\n        .then(registration => {\n          console.log('ServiceWorker registration successful with scope: ', registration.scope);\n        })\n        .catch(err => {\n          console.log('ServiceWorker registration failed: ', err);\n        });\n    });\n  }\n}\n\n/**\n * Verifica se o app está sendo executado em modo offline\n */\nexport function isOffline(): boolean {\n  return !navigator.onLine;\n}\n\n/**\n * Limpa o cache do Service Worker\n */\nexport function clearCache(): Promise<boolean> {\n  if ('caches' in window) {\n    return caches.delete(CACHE_NAME)\n      .then(() => true)\n      .catch(() => false);\n  }\n  return Promise.resolve(false);\n}\n\nexport default {\n  registerServiceWorker,\n  isOffline,\n  clearCache\n};","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { io, Socket } from 'socket.io-client';\nimport { useAuthStore } from '../stores/authStore';\n\n// Declaração global para acessar o socket de qualquer lugar\ndeclare global {\n  interface Window {\n    socket: Socket | null;\n  }\n}\n\nclass SocketManager {\n  private socket: Socket | null = null;\n  private isConnected = false;\n  private reconnectAttempts = 0;\n  private maxReconnectAttempts = 5;\n  private reconnectDelay = 1000;\n\n  connect(token: string, companyId: string, userId: string, role: string) {\n    // Proteção para desenvolvimento - não conectar socket\n    if (import.meta.env.DEV) {\n      console.log('🚫 Socket desabilitado em desenvolvimento');\n      return null;\n    }\n\n    if (this.socket?.connected) {\n      return this.socket;\n    }\n\n    const serverUrl = import.meta.env.VITE_BACKEND_URL || 'http://localhost:3001';\n    \n    console.log('🔌 Conectando ao Socket.IO:', serverUrl);\n    console.log('🔑 Dados de autenticação:', { companyId, userId, role });\n    \n    this.socket = io(serverUrl, {\n      auth: {\n        token,\n        companyId,\n        userId,\n        role\n      },\n      transports: ['websocket', 'polling'],\n      timeout: parseInt(import.meta.env.VITE_SOCKET_TIMEOUT || '20000'),\n      forceNew: true,\n      reconnectionAttempts: parseInt(import.meta.env.VITE_SOCKET_RECONNECT_ATTEMPTS || '5')\n    });\n\n    // Disponibilizar o socket globalmente\n    window.socket = this.socket;\n\n    this.setupEventListeners();\n    return this.socket;\n  }\n\n  private setupEventListeners() {\n    if (!this.socket) return;\n\n    this.socket.on('connect', () => {\n      console.log('✅ Socket conectado:', this.socket?.id);\n      this.isConnected = true;\n      this.reconnectAttempts = 0;\n      \n      // Autenticar socket\n      this.socket?.emit('authenticate', {\n        userId: this.socket.auth.userId,\n        companyId: this.socket.auth.companyId,\n        role: this.socket.auth.role,\n        token: this.socket.auth.token\n      });\n    });\n\n    this.socket.on('authenticated', (data) => {\n      console.log('✅ Socket autenticado:', data);\n      \n      // Entrar na sala da empresa\n      this.socket?.emit('join-company', this.socket.auth.companyId);\n    });\n\n    this.socket.on('authentication-error', (error) => {\n      console.error('❌ Erro na autenticação do socket:', error);\n    });\n\n    this.socket.on('disconnect', (reason) => {\n      console.log('🔌 Socket desconectado:', reason);\n      this.isConnected = false;\n      \n      if (reason === 'io server disconnect') {\n        // Reconectar se o servidor desconectou\n        this.reconnect();\n      }\n    });\n\n    this.socket.on('connect_error', (error) => {\n      console.error('❌ Erro de conexão do socket:', error);\n      this.reconnect();\n    });\n\n    // Eventos específicos da aplicação\n    this.socket.on('whatsapp:qr-code', (data) => {\n      console.log('📱 QR Code recebido:', data);\n      window.dispatchEvent(new CustomEvent('whatsapp:qr-code', { detail: data }));\n    });\n\n    this.socket.on('whatsapp:connected', (data) => {\n      console.log('✅ WhatsApp conectado:', data);\n      window.dispatchEvent(new CustomEvent('whatsapp:connected', { detail: data }));\n    });\n\n    this.socket.on('whatsapp:disconnected', (data) => {\n      console.log('🔌 WhatsApp desconectado:', data);\n      window.dispatchEvent(new CustomEvent('whatsapp:disconnected', { detail: data }));\n    });\n\n    this.socket.on('conversation:new-message', (data) => {\n      console.log('💬 Nova mensagem:', data);\n      window.dispatchEvent(new CustomEvent('conversation:new-message', { detail: data }));\n    });\n\n    this.socket.on('conversation:typing', (data) => {\n      window.dispatchEvent(new CustomEvent('conversation:typing', { detail: data }));\n    });\n\n    this.socket.on('message:status-update', (data) => {\n      window.dispatchEvent(new CustomEvent('message:status-update', { detail: data }));\n    });\n\n    this.socket.on('presence:update', (data) => {\n      window.dispatchEvent(new CustomEvent('presence:update', { detail: data }));\n    });\n\n    this.socket.on('user:joined', (data) => {\n      console.log('👤 Usuário entrou:', data);\n      window.dispatchEvent(new CustomEvent('user:joined', { detail: data }));\n    });\n\n    this.socket.on('user:left', (data) => {\n      console.log('👤 Usuário saiu:', data);\n      window.dispatchEvent(new CustomEvent('user:left', { detail: data }));\n    });\n\n    this.socket.on('system:alert', (data) => {\n      console.log('🚨 Alerta do sistema:', data);\n      window.dispatchEvent(new CustomEvent('system:alert', { detail: data }));\n    });\n\n    this.socket.on('server:shutdown', (data) => {\n      console.log('🛑 Servidor será reiniciado:', data);\n      window.dispatchEvent(new CustomEvent('server:shutdown', { detail: data }));\n    });\n  }\n\n  private reconnect() {\n    if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n      console.error('❌ Máximo de tentativas de reconexão atingido');\n      return;\n    }\n\n    this.reconnectAttempts++;\n    const delay = this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1);\n    \n    console.log(`🔄 Tentativa de reconexão ${this.reconnectAttempts}/${this.maxReconnectAttempts} em ${delay}ms`);\n    \n    setTimeout(() => {\n      this.socket?.connect();\n    }, delay);\n  }\n\n  // Métodos para emitir eventos\n  joinConversation(conversationId: string) {\n    this.socket?.emit('conversation:join', conversationId);\n  }\n\n  leaveConversation(conversationId: string) {\n    this.socket?.emit('conversation:leave', conversationId);\n  }\n\n  sendTyping(conversationId: string, isTyping: boolean, userName: string) {\n    this.socket?.emit('conversation:typing', {\n      conversationId,\n      isTyping,\n      userName\n    });\n  }\n\n  updatePresence(status: 'online' | 'away' | 'busy' | 'offline') {\n    this.socket?.emit('presence:update', status);\n  }\n\n  // Getters\n  get connected() {\n    return this.isConnected && this.socket?.connected;\n  }\n\n  get socketId() {\n    return this.socket?.id;\n  }\n\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      window.socket = null;\n      this.isConnected = false;\n      this.reconnectAttempts = 0;\n    }\n  }\n}\n\n// Instância singleton\nexport const socketManager = new SocketManager();\n\n// Inicializar socket quando o usuário fizer login\nexport const initializeSocket = () => {\n  // Proteção para desenvolvimento\n  if (import.meta.env.DEV) {\n    console.log('🚫 Inicialização do Socket desabilitada em desenvolvimento');\n    return;\n  }\n\n  const { user } = useAuthStore.getState();\n  \n  if (user && user.token) {\n    console.log('🔌 Inicializando Socket.IO após login');\n    socketManager.connect(\n      user.token,\n      user.companyId || 'master',\n      user.id,\n      user.role\n    );\n  }\n};\n\n// Hook para usar o socket em componentes React\nexport const useSocket = () => {\n  return socketManager;\n};\n\nexport default socketManager;","import React, { useState } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { Shield, Eye, EyeOff, Loader2 } from 'lucide-react';\n\nconst MasterLogin: React.FC = () => {\n  const [email, setEmail] = useState('admin@gybachat.com');\n  const [password, setPassword] = useState('admin123');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  \n  const { login, isLoading } = useAuthStore();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    \n    try {\n      const success = await login(email, password, 'master');\n      if (!success) {\n        setError('Credenciais inválidas. Tente novamente.');\n      } else {\n        // Redirecionar para o dashboard após login bem-sucedido\n        window.location.href = '/master';\n      }\n    } catch (err) {\n      setError('Ocorreu um erro durante o login. Tente novamente.');\n      console.error('Erro de login:', err);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"max-w-md w-full space-y-8 p-8\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-16 w-16 bg-blue-600 rounded-full flex items-center justify-center\">\n            <Shield className=\"h-8 w-8 text-white\" />\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">Gestão de Contas</h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Acesse o painel administrativo do Gybachat\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"bg-white rounded-lg shadow-lg p-6 space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Digite seu email\"\n                autoComplete=\"off\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Senha\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                  placeholder=\"Digite sua senha\"\n                  autoComplete=\"off\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"text-red-600 text-sm text-center bg-red-50 p-2 rounded\">\n                {error}\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                'Entrar no Painel de Gestão'\n              )}\n            </button>\n          </div>\n        </form>\n\n        <div className=\"text-center\">\n          <a \n            href=\"/client/login\" \n            className=\"text-sm text-blue-600 hover:text-blue-500 mt-2 inline-block\"\n          >\n            Acessar Painel do Cliente →\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MasterLogin;","import React from 'react';\nimport { \n  Users, \n  Building2, \n  MessageCircle, \n  TrendingUp, \n  Server, \n  AlertTriangle,\n  CheckCircle,\n  Clock,\n  DollarSign,\n  Activity\n} from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, PieChart, Pie, Cell } from 'recharts';\n\nconst SystemStats: React.FC = () => {\n  // Dados mockados para demonstração\n  const monthlyData = [\n    { month: 'Jan', empresas: 45, mensagens: 125000, receita: 85000 },\n    { month: 'Fev', empresas: 52, mensagens: 145000, receita: 98000 },\n    { month: 'Mar', empresas: 61, mensagens: 165000, receita: 112000 },\n    { month: 'Abr', empresas: 68, mensagens: 185000, receita: 125000 },\n    { month: 'Mai', empresas: 75, mensagens: 205000, receita: 138000 },\n    { month: 'Jun', empresas: 82, mensagens: 225000, receita: 152000 },\n  ];\n\n  const planDistribution = [\n    { name: 'Básico', value: 45, color: '#3B82F6' },\n    { name: 'Profissional', value: 28, color: '#10B981' },\n    { name: 'Enterprise', value: 9, color: '#8B5CF6' },\n  ];\n\n  const serverMetrics = [\n    { name: 'CPU', usage: 65, status: 'normal' },\n    { name: 'Memória', usage: 78, status: 'warning' },\n    { name: 'Disco', usage: 45, status: 'normal' },\n    { name: 'Rede', usage: 32, status: 'normal' },\n  ];\n\n  const recentAlerts = [\n    { id: 1, type: 'warning', message: 'Empresa \"TechCorp\" atingiu 90% do limite de mensagens', time: '5 min atrás' },\n    { id: 2, type: 'error', message: 'Falha na conexão WhatsApp - Empresa \"StartupXYZ\"', time: '12 min atrás' },\n    { id: 3, type: 'info', message: 'Nova empresa cadastrada: \"InovaCorp\"', time: '1 hora atrás' },\n    { id: 4, type: 'success', message: 'Backup automático concluído com sucesso', time: '2 horas atrás' },\n  ];\n\n  const getAlertIcon = (type: string) => {\n    switch (type) {\n      case 'error':\n        return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n      case 'success':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n      default:\n        return <Activity className=\"h-4 w-4 text-blue-500\" />;\n    }\n  };\n\n  const getUsageColor = (usage: number, status: string) => {\n    if (status === 'warning' || usage > 80) return 'bg-red-500';\n    if (usage > 60) return 'bg-yellow-500';\n    return 'bg-green-500';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Métricas Principais */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total de Empresas</p>\n              <p className=\"text-2xl font-bold text-gray-900\">82</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <TrendingUp className=\"h-3 w-3 mr-1\" />\n                +9.3% este mês\n              </p>\n            </div>\n            <Building2 className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Mensagens/Mês</p>\n              <p className=\"text-2xl font-bold text-gray-900\">225K</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <TrendingUp className=\"h-3 w-3 mr-1\" />\n                +21.5% este mês\n              </p>\n            </div>\n            <MessageCircle className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Receita Mensal</p>\n              <p className=\"text-2xl font-bold text-gray-900\">R$ 152K</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <TrendingUp className=\"h-3 w-3 mr-1\" />\n                +10.1% este mês\n              </p>\n            </div>\n            <DollarSign className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Uptime Sistema</p>\n              <p className=\"text-2xl font-bold text-gray-900\">99.9%</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <CheckCircle className=\"h-3 w-3 mr-1\" />\n                Excelente\n              </p>\n            </div>\n            <Server className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Gráficos */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Crescimento Mensal */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Crescimento Mensal</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={monthlyData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"month\" />\n              <YAxis />\n              <Tooltip />\n              <Line \n                type=\"monotone\" \n                dataKey=\"empresas\" \n                stroke=\"#3B82F6\" \n                strokeWidth={2}\n                name=\"Empresas\"\n              />\n              <Line \n                type=\"monotone\" \n                dataKey=\"mensagens\" \n                stroke=\"#10B981\" \n                strokeWidth={2}\n                name=\"Mensagens (K)\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Distribuição de Planos */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição de Planos</h3>\n          <div className=\"flex items-center justify-center\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={planDistribution}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={100}\n                  paddingAngle={5}\n                  dataKey=\"value\"\n                >\n                  {planDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"flex justify-center space-x-6 mt-4\">\n            {planDistribution.map((plan) => (\n              <div key={plan.name} className=\"flex items-center space-x-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full\"\n                  style={{ backgroundColor: plan.color }}\n                />\n                <span className=\"text-sm text-gray-600\">\n                  {plan.name} ({plan.value})\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Métricas do Servidor e Alertas */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Métricas do Servidor */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Métricas do Servidor</h3>\n          <div className=\"space-y-4\">\n            {serverMetrics.map((metric) => (\n              <div key={metric.name}>\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-700\">{metric.name}</span>\n                  <span className=\"text-sm text-gray-500\">{metric.usage}%</span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div\n                    className={`h-2 rounded-full ${getUsageColor(metric.usage, metric.status)}`}\n                    style={{ width: `${metric.usage}%` }}\n                  />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Alertas Recentes */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Alertas Recentes</h3>\n          <div className=\"space-y-3\">\n            {recentAlerts.map((alert) => (\n              <div key={alert.id} className=\"flex items-start space-x-3 p-3 rounded-lg bg-gray-50\">\n                {getAlertIcon(alert.type)}\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm text-gray-900\">{alert.message}</p>\n                  <p className=\"text-xs text-gray-500 mt-1 flex items-center\">\n                    <Clock className=\"h-3 w-3 mr-1\" />\n                    {alert.time}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"mt-4 text-center\">\n            <button className=\"text-sm text-blue-600 hover:text-blue-700\">\n              Ver todos os alertas\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Receita por Mês */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Receita Mensal (R$)</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={monthlyData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"month\" />\n            <YAxis />\n            <Tooltip formatter={(value) => [`R$ ${value.toLocaleString()}`, 'Receita']} />\n            <Bar dataKey=\"receita\" fill=\"#8B5CF6\" radius={[4, 4, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default SystemStats;","import React from 'react';\nimport SystemStats from './SystemStats';\n\nconst MasterDashboard: React.FC = () => {\n  return (\n    <div>\n      <SystemStats />\n    </div>\n  );\n};\n\nexport default MasterDashboard;","import React, { useState } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { MessageCircle, Eye, EyeOff, Loader2 } from 'lucide-react';\n\nconst ClientLogin: React.FC = () => {\n  const [email, setEmail] = useState('admin@empresa.com');\n  const [password, setPassword] = useState('demo123');\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState('');\n  \n  const { login, isLoading } = useAuthStore();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    \n    try {\n      const success = await login(email, password, 'client');\n      if (!success) {\n        setError('Credenciais inválidas. Tente novamente.');\n      } else {\n        // Redirecionar para o dashboard após login bem-sucedido\n        window.location.href = '/client';\n      }\n    } catch (err) {\n      setError('Ocorreu um erro durante o login. Tente novamente.');\n      console.error('Erro de login:', err);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-green-50 to-blue-100\">\n      <div className=\"max-w-md w-full space-y-8 p-8\">\n        <div className=\"text-center\">\n          <div className=\"mx-auto h-16 w-16 bg-green-600 rounded-full flex items-center justify-center\">\n            <MessageCircle className=\"h-8 w-8 text-white\" />\n          </div>\n          <h2 className=\"mt-6 text-3xl font-bold text-gray-900\">Gybachat</h2>\n          <p className=\"mt-2 text-sm text-gray-600\">\n            Faça login na sua conta empresarial\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"bg-white rounded-lg shadow-lg p-6 space-y-4\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email\n              </label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                placeholder=\"Digite seu email\"\n                autoComplete=\"off\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Senha\n              </label>\n              <div className=\"mt-1 relative\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-green-500 focus:border-green-500\"\n                  placeholder=\"Digite sua senha\"\n                  autoComplete=\"off\"\n                />\n                <button\n                  type=\"button\"\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? (\n                    <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                  ) : (\n                    <Eye className=\"h-4 w-4 text-gray-400\" />\n                  )}\n                </button>\n              </div>\n            </div>\n\n            {error && (\n              <div className=\"text-red-600 text-sm text-center bg-red-50 p-2 rounded\">\n                {error}\n              </div>\n            )}\n\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? (\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\n              ) : (\n                'Entrar'\n              )}\n            </button>\n          </div>\n        </form>\n\n        <div className=\"text-center\">\n          <a \n            href=\"/master/login\" \n            className=\"text-sm text-green-600 hover:text-green-500 mt-2 inline-block\"\n          >\n            ← Voltar ao Painel Master\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientLogin;","import React from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  MessageCircle, \n  Clock, \n  CheckCircle, \n  TrendingUp, \n  Target,\n  Award,\n  Users,\n  BarChart3,\n  Calendar,\n  Star,\n  Zap,\n  Timer,\n  ThumbsUp,\n  Activity,\n  AlertCircle,\n  Trophy\n} from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, PieChart, Pie, Cell, RadialBarChart, RadialBar } from 'recharts';\n\nconst AgentDashboard: React.FC = () => {\n  const { user } = useAuthStore();\n\n  // Dados mockados para o agente específico\n  const agentStats = {\n    today: {\n      conversations: 23,\n      avgResponseTime: '1m 45s',\n      resolutionRate: 92,\n      satisfaction: 4.7,\n      messagesHandled: 156,\n      activeTime: '7h 23m'\n    },\n    thisWeek: {\n      conversations: 127,\n      avgResponseTime: '2m 12s',\n      resolutionRate: 89,\n      satisfaction: 4.6,\n      messagesHandled: 892,\n      activeTime: '38h 15m'\n    },\n    thisMonth: {\n      conversations: 542,\n      avgResponseTime: '2m 34s',\n      resolutionRate: 91,\n      satisfaction: 4.5,\n      messagesHandled: 3847,\n      activeTime: '162h 45m'\n    }\n  };\n\n  // Dados de performance ao longo do tempo\n  const performanceData = [\n    { day: 'Seg', conversations: 18, satisfaction: 4.2, responseTime: 145 },\n    { day: 'Ter', conversations: 25, satisfaction: 4.5, responseTime: 132 },\n    { day: 'Qua', conversations: 22, satisfaction: 4.8, responseTime: 98 },\n    { day: 'Qui', conversations: 28, satisfaction: 4.6, responseTime: 115 },\n    { day: 'Sex', conversations: 31, satisfaction: 4.9, responseTime: 87 },\n    { day: 'Sáb', conversations: 15, satisfaction: 4.3, responseTime: 156 },\n    { day: 'Dom', conversations: 8, satisfaction: 4.7, responseTime: 134 }\n  ];\n\n  // Distribuição de tipos de atendimento\n  const conversationTypes = [\n    { name: 'Suporte Técnico', value: 45, color: '#3B82F6' },\n    { name: 'Vendas', value: 30, color: '#10B981' },\n    { name: 'Dúvidas Gerais', value: 15, color: '#F59E0B' },\n    { name: 'Reclamações', value: 10, color: '#EF4444' }\n  ];\n\n  // Horários de maior atividade\n  const hourlyActivity = [\n    { hour: '08h', activity: 12 },\n    { hour: '09h', activity: 28 },\n    { hour: '10h', activity: 35 },\n    { hour: '11h', activity: 42 },\n    { hour: '12h', activity: 25 },\n    { hour: '13h', activity: 18 },\n    { hour: '14h', activity: 38 },\n    { hour: '15h', activity: 45 },\n    { hour: '16h', activity: 52 },\n    { hour: '17h', activity: 38 },\n    { hour: '18h', activity: 22 }\n  ];\n\n  // Metas e objetivos\n  const goals = [\n    { name: 'Conversas/Dia', current: 23, target: 25, percentage: 92 },\n    { name: 'Tempo Resposta', current: 105, target: 120, percentage: 112 }, // Invertido - menor é melhor\n    { name: 'Satisfação', current: 4.7, target: 4.5, percentage: 104 },\n    { name: 'Taxa Resolução', current: 92, target: 90, percentage: 102 }\n  ];\n\n  const getGoalColor = (percentage: number) => {\n    if (percentage >= 100) return 'text-green-600';\n    if (percentage >= 80) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getGoalBgColor = (percentage: number) => {\n    if (percentage >= 100) return 'bg-green-500';\n    if (percentage >= 80) return 'bg-yellow-500';\n    return 'bg-red-500';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Personalizado */}\n      <div className=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg text-white p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold\">Olá, {user?.name?.split(' ')[0]}! 👋</h1>\n            <p className=\"text-blue-100 mt-1\">\n              Aqui está seu desempenho de hoje - Continue assim!\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-3xl font-bold\">{agentStats.today.conversations}</div>\n            <div className=\"text-blue-100 text-sm\">conversas hoje</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Métricas Principais do Dia */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Tempo Médio Resposta</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{agentStats.today.avgResponseTime}</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <TrendingUp className=\"h-3 w-3 mr-1\" />\n                15% melhor que ontem\n              </p>\n            </div>\n            <Timer className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Taxa de Resolução</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{agentStats.today.resolutionRate}%</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <CheckCircle className=\"h-3 w-3 mr-1\" />\n                Acima da meta\n              </p>\n            </div>\n            <Target className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Satisfação Média</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{agentStats.today.satisfaction}</p>\n              <div className=\"flex items-center mt-1\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <Star \n                    key={star} \n                    className={`h-3 w-3 ${star <= Math.floor(agentStats.today.satisfaction) ? 'text-yellow-400 fill-current' : 'text-gray-300'}`} \n                  />\n                ))}\n              </div>\n            </div>\n            <ThumbsUp className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Tempo Ativo</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{agentStats.today.activeTime}</p>\n              <p className=\"text-xs text-blue-600 flex items-center mt-1\">\n                <Activity className=\"h-3 w-3 mr-1\" />\n                Online agora\n              </p>\n            </div>\n            <Clock className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Metas e Objetivos */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Trophy className=\"h-5 w-5 mr-2 text-yellow-500\" />\n          Suas Metas Hoje\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {goals.map((goal) => (\n            <div key={goal.name} className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"text-sm font-medium text-gray-700\">{goal.name}</span>\n                <span className={`text-sm font-bold ${getGoalColor(goal.percentage)}`}>\n                  {goal.percentage}%\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  className={`h-2 rounded-full ${getGoalBgColor(goal.percentage)}`}\n                  style={{ width: `${Math.min(goal.percentage, 100)}%` }}\n                />\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                {goal.current} / {goal.target} {goal.name === 'Tempo Resposta' ? 'segundos' : ''}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Gráficos de Performance */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Performance Semanal */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Performance da Semana</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={performanceData}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"day\" />\n              <YAxis />\n              <Tooltip />\n              <Line \n                type=\"monotone\" \n                dataKey=\"conversations\" \n                stroke=\"#3B82F6\" \n                strokeWidth={2}\n                name=\"Conversas\"\n              />\n              <Line \n                type=\"monotone\" \n                dataKey=\"satisfaction\" \n                stroke=\"#10B981\" \n                strokeWidth={2}\n                name=\"Satisfação\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Tipos de Atendimento */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tipos de Atendimento</h3>\n          <div className=\"flex items-center justify-center\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={conversationTypes}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={100}\n                  paddingAngle={5}\n                  dataKey=\"value\"\n                >\n                  {conversationTypes.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"grid grid-cols-2 gap-2 mt-4\">\n            {conversationTypes.map((type) => (\n              <div key={type.name} className=\"flex items-center space-x-2\">\n                <div \n                  className=\"w-3 h-3 rounded-full\"\n                  style={{ backgroundColor: type.color }}\n                />\n                <span className=\"text-sm text-gray-600\">\n                  {type.name} ({type.value}%)\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Atividade por Horário */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Sua Atividade por Horário</h3>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={hourlyActivity}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"hour\" />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey=\"activity\" fill=\"#8B5CF6\" radius={[4, 4, 0, 0]} />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Resumo Comparativo */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h4 className=\"text-sm font-semibold text-gray-900 mb-4\">Hoje</h4>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Conversas</span>\n              <span className=\"text-sm font-medium\">{agentStats.today.conversations}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Mensagens</span>\n              <span className=\"text-sm font-medium\">{agentStats.today.messagesHandled}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Tempo Ativo</span>\n              <span className=\"text-sm font-medium\">{agentStats.today.activeTime}</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h4 className=\"text-sm font-semibold text-gray-900 mb-4\">Esta Semana</h4>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Conversas</span>\n              <span className=\"text-sm font-medium\">{agentStats.thisWeek.conversations}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Mensagens</span>\n              <span className=\"text-sm font-medium\">{agentStats.thisWeek.messagesHandled}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Tempo Ativo</span>\n              <span className=\"text-sm font-medium\">{agentStats.thisWeek.activeTime}</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h4 className=\"text-sm font-semibold text-gray-900 mb-4\">Este Mês</h4>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Conversas</span>\n              <span className=\"text-sm font-medium\">{agentStats.thisMonth.conversations}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Mensagens</span>\n              <span className=\"text-sm font-medium\">{agentStats.thisMonth.messagesHandled}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Tempo Ativo</span>\n              <span className=\"text-sm font-medium\">{agentStats.thisMonth.activeTime}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Dicas de Melhoria */}\n      <div className=\"bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-lg p-6\">\n        <div className=\"flex items-start space-x-3\">\n          <Zap className=\"h-5 w-5 text-green-600 mt-0.5\" />\n          <div>\n            <h3 className=\"text-sm font-semibold text-green-900 mb-2\">\n              💡 Dicas para Melhorar seu Desempenho\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-green-800\">\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>Mantenha respostas rápidas nos horários de pico</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>Use templates para dúvidas frequentes</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>Peça feedback ao finalizar atendimentos</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                <span>Mantenha-se atualizado com produtos/serviços</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AgentDashboard;","import React from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Users, \n  MessageCircle, \n  TrendingUp, \n  Clock, \n  CheckCircle, \n  AlertTriangle,\n  BarChart3,\n  Activity,\n  Target,\n  Award,\n  Zap,\n  Timer,\n  ThumbsUp,\n  UserCheck,\n  UserX,\n  Calendar,\n  DollarSign,\n  Smartphone,\n  Globe,\n  Star,\n  ArrowUp,\n  ArrowDown,\n  Minus\n} from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, BarChart, Bar, PieChart, Pie, Cell, AreaChart, Area } from 'recharts';\n\nconst AdminDashboard: React.FC = () => {\n  const { user } = useAuthStore();\n\n  // Dados gerais da empresa\n  const companyStats = {\n    today: {\n      totalConversations: 127,\n      activeAgents: 8,\n      avgResponseTime: '2m 34s',\n      resolutionRate: 94.2,\n      satisfaction: 4.6,\n      messagesHandled: 1247,\n      peakHour: '15:00',\n      conversionRate: 12.5\n    },\n    thisWeek: {\n      totalConversations: 892,\n      avgResponseTime: '2m 45s',\n      resolutionRate: 91.8,\n      satisfaction: 4.5,\n      messagesHandled: 8934,\n      newCustomers: 156,\n      revenue: 45600\n    },\n    thisMonth: {\n      totalConversations: 3847,\n      avgResponseTime: '3m 12s',\n      resolutionRate: 89.5,\n      satisfaction: 4.4,\n      messagesHandled: 38472,\n      newCustomers: 678,\n      revenue: 198500\n    }\n  };\n\n  // Performance dos agentes\n  const agentsPerformance = [\n    { name: 'Carlos Lima', conversations: 156, satisfaction: 4.8, responseTime: 95, efficiency: 96 },\n    { name: 'Maria Santos', conversations: 142, satisfaction: 4.7, responseTime: 105, efficiency: 94 },\n    { name: 'João Silva', conversations: 138, satisfaction: 4.6, responseTime: 120, efficiency: 92 },\n    { name: 'Ana Costa', conversations: 134, satisfaction: 4.5, responseTime: 135, efficiency: 89 },\n    { name: 'Pedro Oliveira', conversations: 128, satisfaction: 4.4, responseTime: 145, efficiency: 87 },\n    { name: 'Lucia Ferreira', conversations: 125, satisfaction: 4.3, responseTime: 155, efficiency: 85 }\n  ];\n\n  // Dados de performance ao longo do tempo\n  const performanceData = [\n    { day: 'Seg', conversations: 118, satisfaction: 4.2, responseTime: 145, agents: 7 },\n    { day: 'Ter', conversations: 125, satisfaction: 4.5, responseTime: 132, agents: 8 },\n    { day: 'Qua', conversations: 142, satisfaction: 4.8, responseTime: 98, agents: 8 },\n    { day: 'Qui', conversations: 138, satisfaction: 4.6, responseTime: 115, agents: 9 },\n    { day: 'Sex', conversations: 151, satisfaction: 4.9, responseTime: 87, agents: 9 },\n    { day: 'Sáb', conversations: 95, satisfaction: 4.3, responseTime: 156, agents: 6 },\n    { day: 'Dom', conversations: 78, satisfaction: 4.7, responseTime: 134, agents: 5 }\n  ];\n\n  // Distribuição de canais\n  const channelDistribution = [\n    { name: 'WhatsApp', value: 65, color: '#25D366', conversations: 2498 },\n    { name: 'Web Chat', value: 20, color: '#3B82F6', conversations: 769 },\n    { name: 'Telegram', value: 10, color: '#0088CC', conversations: 385 },\n    { name: 'Instagram', value: 5, color: '#E4405F', conversations: 192 }\n  ];\n\n  // Horários de pico\n  const hourlyVolume = [\n    { hour: '08h', volume: 45, agents: 3 },\n    { hour: '09h', volume: 78, agents: 5 },\n    { hour: '10h', volume: 95, agents: 6 },\n    { hour: '11h', volume: 112, agents: 7 },\n    { hour: '12h', volume: 85, agents: 5 },\n    { hour: '13h', volume: 68, agents: 4 },\n    { hour: '14h', volume: 125, agents: 8 },\n    { hour: '15h', volume: 145, agents: 9 },\n    { hour: '16h', volume: 138, agents: 8 },\n    { hour: '17h', volume: 95, agents: 6 },\n    { hour: '18h', volume: 72, agents: 4 }\n  ];\n\n  // Métricas de qualidade\n  const qualityMetrics = [\n    { metric: 'Tempo Primeira Resposta', current: '45s', target: '60s', status: 'good', trend: 'up' },\n    { metric: 'Taxa de Resolução', current: '94.2%', target: '90%', status: 'excellent', trend: 'up' },\n    { metric: 'Satisfação do Cliente', current: '4.6/5', target: '4.5/5', status: 'good', trend: 'stable' },\n    { metric: 'Taxa de Abandono', current: '3.2%', target: '5%', status: 'excellent', trend: 'down' },\n    { metric: 'Retrabalho', current: '8.5%', target: '10%', status: 'good', trend: 'down' },\n    { metric: 'Escalação', current: '12%', target: '15%', status: 'good', trend: 'stable' }\n  ];\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'excellent': return 'text-green-600 bg-green-100';\n      case 'good': return 'text-blue-600 bg-blue-100';\n      case 'warning': return 'text-yellow-600 bg-yellow-100';\n      case 'poor': return 'text-red-600 bg-red-100';\n      default: return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getTrendIcon = (trend: string) => {\n    switch (trend) {\n      case 'up': return <ArrowUp className=\"h-3 w-3 text-green-600\" />;\n      case 'down': return <ArrowDown className=\"h-3 w-3 text-red-600\" />;\n      case 'stable': return <Minus className=\"h-3 w-3 text-gray-600\" />;\n      default: return null;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header Executivo */}\n      <div className=\"bg-gradient-to-r from-purple-600 to-blue-600 rounded-lg text-white p-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-2xl font-bold\">Dashboard Executivo</h1>\n            <p className=\"text-purple-100 mt-1\">\n              Visão geral da operação - {user?.companyName}\n            </p>\n          </div>\n          <div className=\"text-right\">\n            <div className=\"text-3xl font-bold\">{companyStats.today.totalConversations}</div>\n            <div className=\"text-purple-100 text-sm\">conversas hoje</div>\n          </div>\n        </div>\n      </div>\n\n      {/* KPIs Principais */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Agentes Online</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{companyStats.today.activeAgents}/12</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <UserCheck className=\"h-3 w-3 mr-1\" />\n                67% da equipe\n              </p>\n            </div>\n            <Users className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Tempo Médio Resposta</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{companyStats.today.avgResponseTime}</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <TrendingUp className=\"h-3 w-3 mr-1\" />\n                8% melhor que ontem\n              </p>\n            </div>\n            <Timer className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Taxa de Resolução</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{companyStats.today.resolutionRate}%</p>\n              <p className=\"text-xs text-green-600 flex items-center mt-1\">\n                <CheckCircle className=\"h-3 w-3 mr-1\" />\n                Meta: 90%\n              </p>\n            </div>\n            <Target className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Satisfação Geral</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{companyStats.today.satisfaction}</p>\n              <div className=\"flex items-center mt-1\">\n                {[1, 2, 3, 4, 5].map((star) => (\n                  <Star \n                    key={star} \n                    className={`h-3 w-3 ${star <= Math.floor(companyStats.today.satisfaction) ? 'text-yellow-400 fill-current' : 'text-gray-300'}`} \n                  />\n                ))}\n              </div>\n            </div>\n            <ThumbsUp className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Métricas de Qualidade */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Award className=\"h-5 w-5 mr-2 text-yellow-500\" />\n          Métricas de Qualidade\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {qualityMetrics.map((metric) => (\n            <div key={metric.metric} className=\"border border-gray-200 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className=\"text-sm font-medium text-gray-700\">{metric.metric}</span>\n                {getTrendIcon(metric.trend)}\n              </div>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-lg font-bold text-gray-900\">{metric.current}</span>\n                <span className={`text-xs px-2 py-1 rounded-full ${getStatusColor(metric.status)}`}>\n                  Meta: {metric.target}\n                </span>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Performance dos Agentes */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Ranking de Performance dos Agentes</h3>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr className=\"border-b border-gray-200\">\n                <th className=\"text-left py-3 px-4 font-medium text-gray-700\">Agente</th>\n                <th className=\"text-center py-3 px-4 font-medium text-gray-700\">Conversas</th>\n                <th className=\"text-center py-3 px-4 font-medium text-gray-700\">Satisfação</th>\n                <th className=\"text-center py-3 px-4 font-medium text-gray-700\">Tempo Resposta</th>\n                <th className=\"text-center py-3 px-4 font-medium text-gray-700\">Eficiência</th>\n              </tr>\n            </thead>\n            <tbody>\n              {agentsPerformance.map((agent, index) => (\n                <tr key={agent.name} className=\"border-b border-gray-100 hover:bg-gray-50\">\n                  <td className=\"py-3 px-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                        index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : index === 2 ? 'bg-orange-500' : 'bg-blue-500'\n                      }`}>\n                        {index + 1}\n                      </div>\n                      <span className=\"font-medium text-gray-900\">{agent.name}</span>\n                    </div>\n                  </td>\n                  <td className=\"text-center py-3 px-4 text-gray-900\">{agent.conversations}</td>\n                  <td className=\"text-center py-3 px-4\">\n                    <div className=\"flex items-center justify-center space-x-1\">\n                      <span className=\"text-gray-900\">{agent.satisfaction}</span>\n                      <Star className=\"h-3 w-3 text-yellow-400 fill-current\" />\n                    </div>\n                  </td>\n                  <td className=\"text-center py-3 px-4 text-gray-900\">{agent.responseTime}s</td>\n                  <td className=\"text-center py-3 px-4\">\n                    <div className=\"flex items-center justify-center\">\n                      <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\n                        <div\n                          className=\"bg-green-500 h-2 rounded-full\"\n                          style={{ width: `${agent.efficiency}%` }}\n                        />\n                      </div>\n                      <span className=\"text-sm text-gray-900\">{agent.efficiency}%</span>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Gráficos de Análise */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Volume por Horário */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Volume de Atendimento por Horário</h3>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <AreaChart data={hourlyVolume}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"hour\" />\n              <YAxis />\n              <Tooltip />\n              <Area \n                type=\"monotone\" \n                dataKey=\"volume\" \n                stroke=\"#8B5CF6\" \n                fill=\"#8B5CF6\" \n                fillOpacity={0.3}\n                name=\"Volume de Conversas\"\n              />\n              <Area \n                type=\"monotone\" \n                dataKey=\"agents\" \n                stroke=\"#10B981\" \n                fill=\"#10B981\" \n                fillOpacity={0.3}\n                name=\"Agentes Online\"\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        </div>\n\n        {/* Distribuição por Canal */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Canal</h3>\n          <div className=\"flex items-center justify-center\">\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart>\n                <Pie\n                  data={channelDistribution}\n                  cx=\"50%\"\n                  cy=\"50%\"\n                  innerRadius={60}\n                  outerRadius={100}\n                  paddingAngle={5}\n                  dataKey=\"value\"\n                >\n                  {channelDistribution.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={entry.color} />\n                  ))}\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </ResponsiveContainer>\n          </div>\n          <div className=\"grid grid-cols-2 gap-2 mt-4\">\n            {channelDistribution.map((channel) => (\n              <div key={channel.name} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                <div className=\"flex items-center space-x-2\">\n                  <div \n                    className=\"w-3 h-3 rounded-full\"\n                    style={{ backgroundColor: channel.color }}\n                  />\n                  <span className=\"text-sm text-gray-600\">{channel.name}</span>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-sm font-medium text-gray-900\">{channel.value}%</div>\n                  <div className=\"text-xs text-gray-500\">{channel.conversations}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Performance Semanal */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tendência de Performance Semanal</h3>\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <LineChart data={performanceData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"day\" />\n            <YAxis />\n            <Tooltip />\n            <Line \n              type=\"monotone\" \n              dataKey=\"conversations\" \n              stroke=\"#3B82F6\" \n              strokeWidth={3}\n              name=\"Conversas\"\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"satisfaction\" \n              stroke=\"#10B981\" \n              strokeWidth={3}\n              name=\"Satisfação\"\n            />\n            <Line \n              type=\"monotone\" \n              dataKey=\"agents\" \n              stroke=\"#F59E0B\" \n              strokeWidth={3}\n              name=\"Agentes Online\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n\n      {/* Resumo Executivo */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h4 className=\"text-sm font-semibold text-gray-900 mb-4 flex items-center\">\n            <Calendar className=\"h-4 w-4 mr-2\" />\n            Hoje\n          </h4>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Conversas</span>\n              <span className=\"text-sm font-medium\">{companyStats.today.totalConversations}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Mensagens</span>\n              <span className=\"text-sm font-medium\">{companyStats.today.messagesHandled}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Horário Pico</span>\n              <span className=\"text-sm font-medium\">{companyStats.today.peakHour}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Conversão</span>\n              <span className=\"text-sm font-medium\">{companyStats.today.conversionRate}%</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h4 className=\"text-sm font-semibold text-gray-900 mb-4\">Esta Semana</h4>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Conversas</span>\n              <span className=\"text-sm font-medium\">{companyStats.thisWeek.totalConversations}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Novos Clientes</span>\n              <span className=\"text-sm font-medium\">{companyStats.thisWeek.newCustomers}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Receita</span>\n              <span className=\"text-sm font-medium\">R$ {companyStats.thisWeek.revenue.toLocaleString()}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Satisfação</span>\n              <span className=\"text-sm font-medium\">{companyStats.thisWeek.satisfaction}/5</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h4 className=\"text-sm font-semibold text-gray-900 mb-4\">Este Mês</h4>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Conversas</span>\n              <span className=\"text-sm font-medium\">{companyStats.thisMonth.totalConversations}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Novos Clientes</span>\n              <span className=\"text-sm font-medium\">{companyStats.thisMonth.newCustomers}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Receita</span>\n              <span className=\"text-sm font-medium\">R$ {companyStats.thisMonth.revenue.toLocaleString()}</span>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-sm text-gray-600\">Crescimento</span>\n              <span className=\"text-sm font-medium text-green-600\">+23.5%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Alertas e Recomendações */}\n      <div className=\"bg-gradient-to-r from-orange-50 to-red-50 border border-orange-200 rounded-lg p-6\">\n        <div className=\"flex items-start space-x-3\">\n          <AlertTriangle className=\"h-5 w-5 text-orange-600 mt-0.5\" />\n          <div>\n            <h3 className=\"text-sm font-semibold text-orange-900 mb-2\">\n              🚨 Alertas e Recomendações Inteligentes\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 text-sm text-orange-800\">\n              <div className=\"flex items-center space-x-2\">\n                <Zap className=\"h-4 w-4 text-orange-600\" />\n                <span>Pico de volume às 15h - considere escalar mais agentes</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Users className=\"h-4 w-4 text-orange-600\" />\n                <span>3 agentes com tempo resposta acima da meta</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <MessageCircle className=\"h-4 w-4 text-orange-600\" />\n                <span>WhatsApp representa 65% do volume - otimizar templates</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <TrendingUp className=\"h-4 w-4 text-orange-600\" />\n                <span>Satisfação em alta - momento ideal para campanhas</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport AgentDashboard from './AgentDashboard';\nimport AdminDashboard from './AdminDashboard';\n\nconst ClientDashboard: React.FC = () => {\n  const { isAdminOrSupervisor } = useAuthStore();\n\n  const renderDashboard = () => {\n    // Renderizar dashboard específico baseado no role do usuário\n    if (isAdminOrSupervisor()) {\n      return <AdminDashboard />;\n    } else {\n      return <AgentDashboard />;\n    }\n  };\n\n  return (\n    <div>\n      {renderDashboard()}\n    </div>\n  );\n};\n\nexport default ClientDashboard;","import React, { useState, useEffect } from 'react';\nimport { QrCode, Smartphone, CheckCircle, AlertCircle, RefreshCw, Loader2, Zap, Activity, BarChart3, Radio } from 'lucide-react';\nimport { useAuthStore } from '../../stores/authStore';\nimport api from '../../lib/api';\nimport { Link } from 'react-router-dom';\n\ninterface WhatsAppConnectionProps {\n  companyId: string;\n}\n\nconst WhatsAppConnection: React.FC<WhatsAppConnectionProps> = ({ companyId }) => {\n  const { user } = useAuthStore();\n  const [connectionStatus, setConnectionStatus] = useState<'disconnected' | 'connecting' | 'connected' | 'error'>('disconnected');\n  const [qrCode, setQrCode] = useState<string>('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [phoneNumber, setPhoneNumber] = useState<string | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const [showMonitoring, setShowMonitoring] = useState(false);\n  const [connectionStats, setConnectionStats] = useState<{\n    uptime?: number;\n    connectedSince?: Date;\n    reconnectCount?: number;\n    messagesSent?: number;\n    messagesReceived?: number;\n  }>({});\n  const [availableConnectionTypes, setAvailableConnectionTypes] = useState<{id: string, name: string, description: string}[]>([]);\n  const [selectedConnectionType, setSelectedConnectionType] = useState<string>('evolution');\n\n  // Carregar tipos de conexão disponíveis\n  useEffect(() => {\n    const loadConnectionTypes = async () => {\n      try {\n        // Em produção, buscar da API\n        // const response = await api.getWhatsAppConnectionTypes();\n        // if (response.success) {\n        //   setAvailableConnectionTypes(response.data);\n        // }\n\n        // Dados mockados para demonstração\n        setAvailableConnectionTypes([\n          {\n            id: 'evolution',\n            name: 'Evolution API',\n            description: 'Conexão via QR Code usando Evolution API (recomendado)'\n          },\n          {\n            id: 'official',\n            name: 'API Oficial',\n            description: 'Conexão via API Oficial do WhatsApp Business'\n          }\n        ]);\n      } catch (err) {\n        console.error('Erro ao carregar tipos de conexão:', err);\n      }\n    };\n\n    loadConnectionTypes();\n  }, []);\n\n  // Verificar status inicial ao carregar o componente\n  useEffect(() => {\n    checkConnectionStatus();\n    \n    // Configurar listeners para eventos de WebSocket\n    window.addEventListener('whatsapp:qr-code', handleQrCodeEvent);\n    window.addEventListener('whatsapp:connected', handleConnectedEvent);\n    window.addEventListener('whatsapp:disconnected', handleDisconnectedEvent);\n    \n    return () => {\n      // Limpar listeners ao desmontar\n      window.removeEventListener('whatsapp:qr-code', handleQrCodeEvent);\n      window.removeEventListener('whatsapp:connected', handleConnectedEvent);\n      window.removeEventListener('whatsapp:disconnected', handleDisconnectedEvent);\n    };\n  }, [companyId]);\n\n  // Verificar status da conexão\n  const checkConnectionStatus = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Verificação de status WhatsApp desabilitada em desenvolvimento');\n      setConnectionStatus('disconnected');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getWhatsAppStatus(companyId);\n      \n      if (response.success) {\n        setConnectionStatus(response.data.connected ? 'connected' : 'disconnected');\n        setPhoneNumber(response.data.phoneNumber || null);\n        \n        if (response.data.qrCode) {\n          setQrCode(response.data.qrCode);\n          setConnectionStatus('connecting');\n        }\n        \n        // Definir o tipo de conexão atual\n        if (response.data.connectionType) {\n          setSelectedConnectionType(response.data.connectionType);\n        }\n        \n        // Simular estatísticas de conexão para demonstração\n        if (response.data.connected) {\n          setConnectionStats({\n            uptime: Math.floor(Math.random() * 86400), // Até 24 horas em segundos\n            connectedSince: new Date(Date.now() - Math.random() * 86400000), // Até 24 horas atrás\n            reconnectCount: Math.floor(Math.random() * 5),\n            messagesSent: Math.floor(Math.random() * 500),\n            messagesReceived: Math.floor(Math.random() * 800)\n          });\n        }\n      }\n    } catch (err) {\n      console.error('Erro ao verificar status do WhatsApp:', err);\n      setError('Não foi possível verificar o status da conexão');\n      setConnectionStatus('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handlers para eventos de WebSocket\n  const handleQrCodeEvent = (event: Event) => {\n    const customEvent = event as CustomEvent;\n    if (customEvent.detail && customEvent.detail.companyId === companyId) {\n      setQrCode(customEvent.detail.qrCode);\n      setConnectionStatus('connecting');\n      setError(null);\n    }\n  };\n\n  const handleConnectedEvent = (event: Event) => {\n    const customEvent = event as CustomEvent;\n    if (customEvent.detail && customEvent.detail.companyId === companyId) {\n      setConnectionStatus('connected');\n      setPhoneNumber(customEvent.detail.phoneNumber || null);\n      setQrCode('');\n      setError(null);\n      setRetryCount(0);\n      \n      // Simular estatísticas de conexão para demonstração\n      setConnectionStats({\n        uptime: 0, // Acabou de conectar\n        connectedSince: new Date(),\n        reconnectCount: 0,\n        messagesSent: 0,\n        messagesReceived: 0\n      });\n    }\n  };\n\n  const handleDisconnectedEvent = (event: Event) => {\n    const customEvent = event as CustomEvent;\n    if (customEvent.detail && customEvent.detail.companyId === companyId) {\n      setConnectionStatus('disconnected');\n      setPhoneNumber(null);\n      setQrCode('');\n      setConnectionStats({});\n    }\n  };\n\n  // Iniciar conexão\n  const handleConnect = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Conexão WhatsApp desabilitada em desenvolvimento');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.connectWhatsApp(companyId, { connectionType: selectedConnectionType });\n      \n      if (response.success) {\n        setConnectionStatus('connecting');\n        if (response.data && response.data.qrCode) {\n          setQrCode(response.data.qrCode);\n        } else {\n          // Se não recebeu QR code, tentar novamente após um breve delay\n          setTimeout(() => refreshQrCode(), 2000);\n        }\n      } else {\n        setError('Não foi possível iniciar a conexão');\n      }\n    } catch (err) {\n      console.error('Erro ao conectar WhatsApp:', err);\n      setError('Erro ao iniciar conexão com WhatsApp');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Desconectar\n  const handleDisconnect = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Desconexão WhatsApp desabilitada em desenvolvimento');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.disconnectWhatsApp(companyId);\n      \n      if (response.success) {\n        setConnectionStatus('disconnected');\n        setQrCode('');\n        setPhoneNumber(null);\n        setConnectionStats({});\n      } else {\n        setError('Não foi possível desconectar');\n      }\n    } catch (err) {\n      console.error('Erro ao desconectar WhatsApp:', err);\n      setError('Erro ao desconectar WhatsApp');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Atualizar QR Code\n  const refreshQrCode = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Atualização de QR Code desabilitada em desenvolvimento');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getWhatsAppQRCode(companyId);\n      \n      if (response.success && response.data.qrCode) {\n        setQrCode(response.data.qrCode);\n        setConnectionStatus('connecting');\n        setRetryCount(0);\n      } else {\n        // Se não conseguiu obter QR code e ainda não tentou muitas vezes\n        if (retryCount < 3) {\n          setRetryCount(prev => prev + 1);\n          setTimeout(() => refreshQrCode(), 3000);\n        } else {\n          setError('Não foi possível obter novo QR Code após várias tentativas. Tente reiniciar o processo.');\n        }\n      }\n    } catch (err) {\n      console.error('Erro ao obter QR Code:', err);\n      setError('Erro ao atualizar QR Code');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getStatusIcon = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n      case 'connecting':\n        return <RefreshCw className=\"h-5 w-5 text-yellow-500 animate-spin\" />;\n      case 'error':\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\n      default:\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\n    }\n  };\n\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'WhatsApp Conectado';\n      case 'connecting':\n        return 'Conectando...';\n      case 'error':\n        return 'Erro na Conexão';\n      default:\n        return 'WhatsApp Desconectado';\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'bg-green-50 border-green-200';\n      case 'connecting':\n        return 'bg-yellow-50 border-yellow-200';\n      case 'error':\n        return 'bg-red-50 border-red-200';\n      default:\n        return 'bg-red-50 border-red-200';\n    }\n  };\n\n  const getStatusDescription = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return `Seu WhatsApp está conectado ao número ${phoneNumber || 'desconhecido'}`;\n      case 'connecting':\n        return selectedConnectionType === 'evolution' \n          ? 'Escaneie o QR Code com seu WhatsApp para conectar' \n          : 'Conectando via API Oficial...';\n      case 'error':\n        return 'Ocorreu um erro ao conectar com o WhatsApp';\n      default:\n        return 'Conecte seu WhatsApp para começar a receber mensagens';\n    }\n  };\n\n  const formatUptime = (seconds?: number) => {\n    if (!seconds) return 'N/A';\n    \n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    \n    if (days > 0) {\n      return `${days}d ${hours}h ${minutes}m`;\n    } else if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  const getConnectionTypeDescription = (typeId: string) => {\n    const type = availableConnectionTypes.find(t => t.id === typeId);\n    return type?.description || '';\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      {/* Status Card */}\n      <div className={`rounded-lg border-2 p-6 mb-6 ${getStatusColor()}`}>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            {getStatusIcon()}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">{getStatusText()}</h3>\n              <p className=\"text-sm text-gray-600\">\n                {getStatusDescription()}\n              </p>\n              {error && (\n                <p className=\"text-sm text-red-600 mt-1\">{error}</p>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {connectionStatus === 'connected' ? (\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={() => setShowMonitoring(!showMonitoring)}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 flex items-center space-x-2\"\n                >\n                  <Activity className=\"h-4 w-4\" />\n                  <span>Monitoramento</span>\n                </button>\n                <button\n                  onClick={handleDisconnect}\n                  disabled={isLoading}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50\"\n                >\n                  {isLoading ? (\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                  ) : (\n                    'Desconectar'\n                  )}\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={handleConnect}\n                disabled={isLoading}\n                className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 disabled:opacity-50\"\n              >\n                {isLoading ? (\n                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                ) : (\n                  'Conectar WhatsApp'\n                )}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Seletor de Tipo de Conexão */}\n      {connectionStatus === 'disconnected' && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6 mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Escolha o Tipo de Conexão</h3>\n          \n          <div className=\"space-y-4\">\n            {availableConnectionTypes.map((type) => (\n              <div \n                key={type.id}\n                className={`flex items-start space-x-3 p-4 rounded-lg border-2 cursor-pointer transition-all ${\n                  selectedConnectionType === type.id \n                    ? 'border-blue-500 bg-blue-50' \n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n                onClick={() => setSelectedConnectionType(type.id)}\n              >\n                <div className=\"flex items-center h-5 mt-1\">\n                  <input\n                    type=\"radio\"\n                    checked={selectedConnectionType === type.id}\n                    onChange={() => setSelectedConnectionType(type.id)}\n                    className=\"h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500\"\n                  />\n                </div>\n                <div className=\"flex-1\">\n                  <label className=\"text-sm font-medium text-gray-900 cursor-pointer\">\n                    {type.name}\n                  </label>\n                  <p className=\"text-sm text-gray-600 mt-1\">\n                    {type.description}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"mt-4 text-sm text-gray-600\">\n            <p className=\"flex items-center\">\n              <Radio className=\"h-4 w-4 mr-2 text-blue-600\" />\n              <span>\n                Você pode mudar o tipo de conexão a qualquer momento, mas precisará reconectar o WhatsApp.\n              </span>\n            </p>\n          </div>\n        </div>\n      )}\n\n      {/* QR Code Section */}\n      {connectionStatus === 'connecting' && selectedConnectionType === 'evolution' && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-8 text-center\">\n          <div className=\"mb-6\">\n            <QrCode className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Escaneie o QR Code\n            </h3>\n            <p className=\"text-gray-600\">\n              Abra o WhatsApp no seu celular e escaneie o código abaixo\n            </p>\n          </div>\n\n          {/* QR Code Display */}\n          <div className=\"bg-gray-50 rounded-lg p-8 mb-6 inline-block\">\n            {qrCode ? (\n              <div className=\"w-64 h-64 bg-white rounded-lg flex items-center justify-center border-2 border-gray-300\">\n                <img \n                  src={qrCode} \n                  alt=\"QR Code para conexão do WhatsApp\" \n                  className=\"w-full h-full object-contain\"\n                />\n              </div>\n            ) : (\n              <div className=\"w-64 h-64 bg-gray-100 rounded-lg animate-pulse flex items-center justify-center\">\n                <p className=\"text-sm text-gray-500\">Carregando QR Code...</p>\n              </div>\n            )}\n          </div>\n\n          {/* Refresh Button */}\n          <button\n            onClick={refreshQrCode}\n            disabled={isLoading}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 mb-6\"\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <div className=\"flex items-center space-x-2\">\n                <RefreshCw className=\"h-4 w-4\" />\n                <span>Atualizar QR Code</span>\n              </div>\n            )}\n          </button>\n\n          {/* Instructions */}\n          <div className=\"bg-blue-50 rounded-lg p-4\">\n            <div className=\"flex items-start space-x-3\">\n              <Smartphone className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n              <div className=\"text-left\">\n                <h4 className=\"text-sm font-semibold text-blue-900 mb-2\">\n                  Como conectar:\n                </h4>\n                <ol className=\"text-sm text-blue-800 space-y-1\">\n                  <li>1. Abra o WhatsApp no seu celular</li>\n                  <li>2. Toque em \"Mais opções\" (⋮) e depois em \"Aparelhos conectados\"</li>\n                  <li>3. Toque em \"Conectar um aparelho\"</li>\n                  <li>4. Aponte a câmera para este QR code</li>\n                </ol>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* API Oficial Connection Section */}\n      {connectionStatus === 'connecting' && selectedConnectionType === 'official' && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-8 text-center\">\n          <div className=\"mb-6\">\n            <Smartphone className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              Conectando via API Oficial\n            </h3>\n            <p className=\"text-gray-600\">\n              Aguarde enquanto configuramos sua conexão com a API Oficial do WhatsApp\n            </p>\n          </div>\n\n          {/* Loading Indicator */}\n          <div className=\"bg-gray-50 rounded-lg p-8 mb-6 inline-block\">\n            <div className=\"w-64 h-64 flex flex-col items-center justify-center\">\n              <Loader2 className=\"h-16 w-16 text-blue-500 animate-spin mb-4\" />\n              <p className=\"text-sm text-gray-700\">Estabelecendo conexão...</p>\n              <p className=\"text-xs text-gray-500 mt-2\">Isso pode levar alguns minutos</p>\n            </div>\n          </div>\n\n          {/* Instructions */}\n          <div className=\"bg-blue-50 rounded-lg p-4\">\n            <div className=\"flex items-start space-x-3\">\n              <AlertCircle className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n              <div className=\"text-left\">\n                <h4 className=\"text-sm font-semibold text-blue-900 mb-2\">\n                  Informações sobre a API Oficial:\n                </h4>\n                <ul className=\"text-sm text-blue-800 space-y-1\">\n                  <li>• A API Oficial requer verificação e aprovação da Meta</li>\n                  <li>• Não é necessário escanear QR Code</li>\n                  <li>• Oferece maior estabilidade e suporte oficial</li>\n                  <li>• Requer um plano de assinatura da API do WhatsApp Business</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Connected State */}\n      {connectionStatus === 'connected' && !showMonitoring && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"text-center\">\n            <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              WhatsApp Conectado com Sucesso!\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              Agora você pode receber e enviar mensagens através da plataforma\n            </p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n              <div className=\"bg-green-50 rounded-lg p-4\">\n                <div className=\"font-semibold text-green-900\">Status</div>\n                <div className=\"text-green-700\">Online</div>\n              </div>\n              <div className=\"bg-blue-50 rounded-lg p-4\">\n                <div className=\"font-semibold text-blue-900\">Número</div>\n                <div className=\"text-blue-700\">{phoneNumber || 'Não disponível'}</div>\n              </div>\n              <div className=\"bg-purple-50 rounded-lg p-4\">\n                <div className=\"font-semibold text-purple-900\">Tipo de Conexão</div>\n                <div className=\"text-purple-700\">\n                  {selectedConnectionType === 'evolution' ? 'Evolution API' : 'API Oficial'}\n                </div>\n              </div>\n            </div>\n            \n            {connectionStats.uptime !== undefined && (\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"font-semibold text-gray-900\">Tempo Conectado</div>\n                  <div className=\"text-gray-700\">{formatUptime(connectionStats.uptime)}</div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"font-semibold text-gray-900\">Mensagens Enviadas</div>\n                  <div className=\"text-gray-700\">{connectionStats.messagesSent}</div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"font-semibold text-gray-900\">Mensagens Recebidas</div>\n                  <div className=\"text-gray-700\">{connectionStats.messagesReceived}</div>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"mt-6\">\n              <Link \n                to=\"/client/whatsapp-monitoring\" \n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 inline-flex items-center space-x-2\"\n              >\n                <BarChart3 className=\"h-4 w-4\" />\n                <span>Acessar Monitoramento Avançado</span>\n              </Link>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Monitoring View */}\n      {connectionStatus === 'connected' && showMonitoring && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Monitoramento do WhatsApp</h3>\n            <button\n              onClick={() => setShowMonitoring(false)}\n              className=\"text-sm text-gray-500 hover:text-gray-700\"\n            >\n              Voltar\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n            <div className=\"bg-blue-50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-xs font-medium text-blue-600\">Tempo Conectado</p>\n                  <p className=\"text-xl font-bold text-blue-800\">{formatUptime(connectionStats.uptime)}</p>\n                </div>\n                <Clock className=\"h-8 w-8 text-blue-500\" />\n              </div>\n            </div>\n            \n            <div className=\"bg-green-50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-xs font-medium text-green-600\">Mensagens Enviadas</p>\n                  <p className=\"text-xl font-bold text-green-800\">{connectionStats.messagesSent}</p>\n                </div>\n                <Send className=\"h-8 w-8 text-green-500\" />\n              </div>\n            </div>\n            \n            <div className=\"bg-purple-50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-xs font-medium text-purple-600\">Mensagens Recebidas</p>\n                  <p className=\"text-xl font-bold text-purple-800\">{connectionStats.messagesReceived}</p>\n                </div>\n                <MessageCircle className=\"h-8 w-8 text-purple-500\" />\n              </div>\n            </div>\n            \n            <div className=\"bg-yellow-50 rounded-lg p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-xs font-medium text-yellow-600\">Reconexões</p>\n                  <p className=\"text-xl font-bold text-yellow-800\">{connectionStats.reconnectCount || 0}</p>\n                </div>\n                <RefreshCw className=\"h-8 w-8 text-yellow-500\" />\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"bg-gray-50 rounded-lg p-4 mb-6\">\n            <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Status da Conexão</h4>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '95%' }}></div>\n              </div>\n              <span className=\"text-sm font-medium text-green-600\">Excelente</span>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n              <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Informações do Dispositivo</h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Plataforma:</span>\n                  <span className=\"text-sm font-medium\">Android</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Modelo:</span>\n                  <span className=\"text-sm font-medium\">Samsung Galaxy S21</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Versão do WhatsApp:</span>\n                  <span className=\"text-sm font-medium\">2.22.24.78</span>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <span className=\"text-sm text-gray-600\">Bateria:</span>\n                  <div className=\"flex items-center\">\n                    <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\n                      <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '85%' }}></div>\n                    </div>\n                    <span className=\"text-sm font-medium\">85%</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n              <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Estatísticas de Mensagens</h4>\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Taxa de Entrega:</span>\n                  <span className=\"text-sm font-medium text-green-600\">98.5%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Taxa de Leitura:</span>\n                  <span className=\"text-sm font-medium text-green-600\">87.2%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Taxa de Resposta:</span>\n                  <span className=\"text-sm font-medium text-yellow-600\">76.4%</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-gray-600\">Tempo Médio de Resposta:</span>\n                  <span className=\"text-sm font-medium\">2m 34s</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"mt-6\">\n            <Link \n              to=\"/client/whatsapp-monitoring\" \n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 inline-flex items-center space-x-2\"\n            >\n              <BarChart3 className=\"h-4 w-4\" />\n              <span>Acessar Monitoramento Avançado</span>\n            </Link>\n          </div>\n        </div>\n      )}\n\n      {/* Tips Section */}\n      <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-6\">\n        <div className=\"flex items-start space-x-3\">\n          <Zap className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n          <div>\n            <h4 className=\"text-sm font-semibold text-blue-900 mb-2\">\n              Dicas para uma conexão estável\n            </h4>\n            <ul className=\"text-sm text-blue-800 space-y-1\">\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Mantenha o celular conectado à energia e Wi-Fi estável</span>\n              </li>\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Não desconecte o WhatsApp Web em outros dispositivos</span>\n              </li>\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Mantenha o aplicativo do WhatsApp aberto no celular</span>\n              </li>\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Evite trocar de rede Wi-Fi ou 4G durante a conexão</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatsAppConnection;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Smartphone, \n  BarChart3, \n  MessageCircle, \n  Clock, \n  CheckCircle, \n  XCircle,\n  RefreshCw,\n  Calendar,\n  Activity,\n  AlertTriangle,\n  Zap,\n  Users,\n  Eye,\n  Send,\n  Download,\n  Loader2,\n  Gauge,\n  Signal,\n  BarChart2,\n  ArrowUpRight,\n  ArrowDownRight,\n  Wifi,\n  WifiOff,\n  Phone,\n  ArrowLeft,\n  Link\n} from 'lucide-react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport api from '../../lib/api';\n\ninterface WhatsAppSession {\n  id: string;\n  company_id: string;\n  session_name: string;\n  status: 'connected' | 'disconnected' | 'connecting' | 'error';\n  phone_number?: string;\n  last_seen?: string;\n  created_at: string;\n  updated_at: string;\n  device_info?: {\n    platform?: string;\n    phone_version?: string;\n    device_manufacturer?: string;\n    device_model?: string;\n    os_version?: string;\n    wa_version?: string;\n    battery?: number;\n  };\n  connection_stats?: {\n    uptime: number;\n    connected_since: string;\n    reconnect_count: number;\n    last_reconnect?: string;\n  };\n  message_stats?: {\n    sent_today: number;\n    received_today: number;\n    sent_total: number;\n    received_total: number;\n    delivery_rate: number;\n    read_rate: number;\n    response_rate: number;\n  };\n  health_status?: {\n    status: 'healthy' | 'warning' | 'critical';\n    issues: string[];\n    last_check: string;\n  };\n}\n\ninterface InstanceMonitoring {\n  instance_name: string;\n  status: string;\n  phone: string;\n  battery: {\n    level: number;\n    charging: boolean;\n  };\n  connection: {\n    type: string;\n    strength: number;\n  };\n  memory_usage: {\n    used: number;\n    total: number;\n  };\n  cpu_usage: number;\n  messages: {\n    sent_today: number;\n    received_today: number;\n    sent_total: number;\n    received_total: number;\n    delivery_rate: number;\n    read_rate: number;\n  };\n  uptime: number;\n  version: string;\n  last_activity: string;\n  health_score: number;\n  issues: string[];\n}\n\nconst WhatsAppMonitoring: React.FC = () => {\n  const { user } = useAuthStore();\n  const [sessions, setSessions] = useState<WhatsAppSession[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [refreshInterval, setRefreshInterval] = useState<number>(30); // seconds\n  const [autoRefresh, setAutoRefresh] = useState<boolean>(true);\n  const [lastRefreshed, setLastRefreshed] = useState<Date>(new Date());\n  const [selectedSession, setSelectedSession] = useState<string | null>(null);\n  const [showDetailedStats, setShowDetailedStats] = useState<boolean>(false);\n  const [instanceMonitoring, setInstanceMonitoring] = useState<InstanceMonitoring | null>(null);\n  const [isLoadingMonitoring, setIsLoadingMonitoring] = useState<boolean>(false);\n\n  // Load sessions on component mount\n  useEffect(() => {\n    if (user?.companyId) {\n      loadSessions();\n    }\n  }, [user?.companyId]);\n\n  // Auto-refresh timer\n  useEffect(() => {\n    if (!autoRefresh) return;\n\n    const timer = setInterval(() => {\n      loadSessions();\n      if (selectedSession && sessions.length > 0) {\n        const session = sessions.find(s => s.id === selectedSession);\n        if (session) {\n          loadInstanceMonitoring(session.session_name);\n        }\n      }\n      setLastRefreshed(new Date());\n    }, refreshInterval * 1000);\n\n    return () => clearInterval(timer);\n  }, [autoRefresh, refreshInterval, selectedSession, sessions]);\n\n  // Load instance monitoring when a session is selected\n  useEffect(() => {\n    if (selectedSession && sessions.length > 0) {\n      const session = sessions.find(s => s.id === selectedSession);\n      if (session) {\n        loadInstanceMonitoring(session.session_name);\n      }\n    }\n  }, [selectedSession, sessions]);\n\n  const loadSessions = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de sessões WhatsApp desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // In production, fetch from backend\n      // const response = await api.getWhatsAppSessions(user.companyId);\n      \n      // Mock data for demonstration\n      const mockSessions: WhatsAppSession[] = [\n        {\n          id: '1',\n          company_id: user.companyId,\n          session_name: 'instance_' + user.companyId,\n          status: 'connected',\n          phone_number: '+5511999991234',\n          last_seen: new Date().toISOString(),\n          created_at: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date().toISOString(),\n          device_info: {\n            platform: 'android',\n            phone_version: 'Android 12',\n            device_manufacturer: 'Samsung',\n            device_model: 'Galaxy S21',\n            os_version: '12.0',\n            wa_version: '2.22.24.78',\n            battery: 85\n          },\n          connection_stats: {\n            uptime: 86400, // 24 hours in seconds\n            connected_since: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n            reconnect_count: 2,\n            last_reconnect: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString()\n          },\n          message_stats: {\n            sent_today: 156,\n            received_today: 243,\n            sent_total: 3456,\n            received_total: 4567,\n            delivery_rate: 98.5,\n            read_rate: 87.2,\n            response_rate: 76.4\n          },\n          health_status: {\n            status: 'healthy',\n            issues: [],\n            last_check: new Date().toISOString()\n          }\n        }\n      ];\n      \n      setSessions(mockSessions);\n      \n      // If there's only one session, select it automatically\n      if (mockSessions.length === 1 && !selectedSession) {\n        setSelectedSession(mockSessions[0].id);\n      }\n      \n      setIsLoading(false);\n    } catch (err) {\n      console.error('Error loading WhatsApp sessions:', err);\n      setError('Failed to load WhatsApp sessions. Please try again later.');\n      setIsLoading(false);\n    }\n  };\n\n  const loadInstanceMonitoring = async (instanceName: string) => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Monitoramento de instância desabilitado em desenvolvimento');\n      setIsLoadingMonitoring(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoadingMonitoring(true);\n      \n      // In production, fetch from backend\n      // const response = await api.getWhatsAppMonitoring(user.companyId, instanceName);\n      \n      // Mock data for demonstration\n      const mockMonitoring: InstanceMonitoring = {\n        instance_name: instanceName,\n        status: 'connected',\n        phone: '+5511999991234',\n        battery: {\n          level: 85,\n          charging: true\n        },\n        connection: {\n          type: 'wifi',\n          strength: 90\n        },\n        memory_usage: {\n          used: 1.2,\n          total: 4\n        },\n        cpu_usage: 15,\n        messages: {\n          sent_today: 156,\n          received_today: 243,\n          sent_total: 3456,\n          received_total: 4567,\n          delivery_rate: 98.5,\n          read_rate: 87.2\n        },\n        uptime: 86400, // 24 hours in seconds\n        version: '2.22.24.78',\n        last_activity: new Date().toISOString(),\n        health_score: 95,\n        issues: []\n      };\n      \n      setInstanceMonitoring(mockMonitoring);\n      setIsLoadingMonitoring(false);\n    } catch (err) {\n      console.error('Error loading instance monitoring:', err);\n      setIsLoadingMonitoring(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    loadSessions();\n    if (selectedSession && sessions.length > 0) {\n      const session = sessions.find(s => s.id === selectedSession);\n      if (session) {\n        loadInstanceMonitoring(session.session_name);\n      }\n    }\n    setLastRefreshed(new Date());\n  };\n\n  const formatUptime = (seconds: number) => {\n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    \n    if (days > 0) {\n      return `${days}d ${hours}h ${minutes}m`;\n    } else if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            Conectado\n          </span>\n        );\n      case 'connecting':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n            <RefreshCw className=\"h-3 w-3 mr-1 animate-spin\" />\n            Conectando\n          </span>\n        );\n      case 'disconnected':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n            <XCircle className=\"h-3 w-3 mr-1\" />\n            Desconectado\n          </span>\n        );\n      default:\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n            <AlertTriangle className=\"h-3 w-3 mr-1\" />\n            Erro\n          </span>\n        );\n    }\n  };\n\n  const getHealthStatusBadge = (status: string) => {\n    switch (status) {\n      case 'healthy':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            Saudável\n          </span>\n        );\n      case 'warning':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n            <AlertTriangle className=\"h-3 w-3 mr-1\" />\n            Atenção\n          </span>\n        );\n      case 'critical':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n            <AlertTriangle className=\"h-3 w-3 mr-1\" />\n            Crítico\n          </span>\n        );\n      default:\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n            <Eye className=\"h-3 w-3 mr-1\" />\n            Desconhecido\n          </span>\n        );\n    }\n  };\n\n  const getMessageTrend = (session: WhatsAppSession) => {\n    if (!session.message_stats) return null;\n    \n    const stats = session.message_stats;\n    const sentRate = stats.sent_today > 0 ? Math.round((stats.sent_today / stats.sent_total) * 100) : 0;\n    const receivedRate = stats.received_today > 0 ? Math.round((stats.received_today / stats.received_total) * 100) : 0;\n    \n    const isHighSent = sentRate > 20; // If today's messages are more than 20% of total\n    const isHighReceived = receivedRate > 20;\n    \n    return (\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex items-center\">\n          <Send className=\"h-4 w-4 text-blue-500 mr-1\" />\n          <span className=\"text-sm text-gray-700\">{stats.sent_today}</span>\n          {isHighSent ? (\n            <ArrowUpRight className=\"h-3 w-3 text-green-500 ml-1\" />\n          ) : (\n            <ArrowDownRight className=\"h-3 w-3 text-red-500 ml-1\" />\n          )}\n        </div>\n        <div className=\"flex items-center\">\n          <MessageCircle className=\"h-4 w-4 text-purple-500 mr-1\" />\n          <span className=\"text-sm text-gray-700\">{stats.received_today}</span>\n          {isHighReceived ? (\n            <ArrowUpRight className=\"h-3 w-3 text-green-500 ml-1\" />\n          ) : (\n            <ArrowDownRight className=\"h-3 w-3 text-red-500 ml-1\" />\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const selectedSessionData = selectedSession \n    ? sessions.find(s => s.id === selectedSession) \n    : null;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Smartphone className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Monitoramento de WhatsApp</h2>\n            <p className=\"text-sm text-gray-600\">\n              {sessions.length} {sessions.length === 1 ? 'sessão' : 'sessões'} encontradas\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <RouterLink \n            to=\"/client/whatsapp\" \n            className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Voltar para Conexão</span>\n          </RouterLink>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-500\">Auto-refresh:</span>\n            <select \n              value={refreshInterval}\n              onChange={(e) => setRefreshInterval(Number(e.target.value))}\n              className=\"text-sm border border-gray-300 rounded-md p-1\"\n              disabled={!autoRefresh}\n            >\n              <option value=\"10\">10s</option>\n              <option value=\"30\">30s</option>\n              <option value=\"60\">1m</option>\n              <option value=\"300\">5m</option>\n            </select>\n            <label className=\"inline-flex items-center cursor-pointer\">\n              <input \n                type=\"checkbox\" \n                checked={autoRefresh} \n                onChange={() => setAutoRefresh(!autoRefresh)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n          \n          <button\n            onClick={handleRefresh}\n            disabled={isLoading}\n            className=\"p-2 text-gray-600 hover:text-gray-900 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            title=\"Atualizar\"\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-5 w-5\" />\n            )}\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Last refreshed info */}\n      <div className=\"text-xs text-gray-500 text-right\">\n        Última atualização: {lastRefreshed.toLocaleTimeString()}\n      </div>\n\n      {/* Sessions Overview */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Visão Geral das Sessões</h3>\n        \n        {isLoading && sessions.length === 0 ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : sessions.length === 0 ? (\n          <div className=\"text-center py-12\">\n            <Smartphone className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma sessão encontrada</h3>\n            <p className=\"text-gray-500\">\n              Conecte seu WhatsApp para começar a monitorar\n            </p>\n            <RouterLink \n              to=\"/client/whatsapp\" \n              className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              Conectar WhatsApp\n            </RouterLink>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {sessions.map((session) => (\n              <div \n                key={session.id} \n                className={`bg-white rounded-lg border-2 p-4 cursor-pointer transition-all hover:shadow-md ${\n                  selectedSession === session.id ? 'border-blue-500 shadow-md' : 'border-gray-200'\n                }`}\n                onClick={() => setSelectedSession(session.id)}\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Smartphone className=\"h-5 w-5 text-gray-600\" />\n                    <h4 className=\"text-md font-medium text-gray-900\">{session.session_name}</h4>\n                  </div>\n                  {getStatusBadge(session.status)}\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <Phone className=\"h-4 w-4 text-gray-400\" />\n                    <span className=\"text-gray-700\">{session.phone_number || 'Não conectado'}</span>\n                  </div>\n                  \n                  {session.connection_stats && (\n                    <div className=\"flex items-center space-x-2 text-sm\">\n                      <Clock className=\"h-4 w-4 text-gray-400\" />\n                      <span className=\"text-gray-700\">\n                        Uptime: {formatUptime(session.connection_stats.uptime)}\n                      </span>\n                    </div>\n                  )}\n                  \n                  {session.message_stats && getMessageTrend(session)}\n                  \n                  {session.health_status && (\n                    <div className=\"flex items-center space-x-2 text-sm mt-2\">\n                      {getHealthStatusBadge(session.health_status.status)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Detailed Session Stats */}\n      {selectedSessionData && (\n        <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50 flex justify-between items-center\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Detalhes da Sessão: {selectedSessionData.session_name}\n            </h3>\n            <button\n              onClick={() => setShowDetailedStats(!showDetailedStats)}\n              className=\"text-sm text-blue-600 hover:text-blue-800\"\n            >\n              {showDetailedStats ? 'Mostrar Menos' : 'Mostrar Mais'}\n            </button>\n          </div>\n          \n          <div className=\"p-6\">\n            {/* Basic Info */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Informações Básicas</h4>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Status:</span>\n                    <span className=\"text-sm font-medium\">{getStatusBadge(selectedSessionData.status)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Número:</span>\n                    <span className=\"text-sm font-medium\">{selectedSessionData.phone_number || 'N/A'}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Criado em:</span>\n                    <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.created_at)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Última atividade:</span>\n                    <span className=\"text-sm font-medium\">{selectedSessionData.last_seen ? formatDate(selectedSessionData.last_seen) : 'N/A'}</span>\n                  </div>\n                </div>\n              </div>\n              \n              {selectedSessionData.connection_stats && (\n                <div className=\"bg-blue-50 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-semibold text-blue-700 mb-3\">Estatísticas de Conexão</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-blue-600\">Uptime:</span>\n                      <span className=\"text-sm font-medium\">{formatUptime(selectedSessionData.connection_stats.uptime)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-blue-600\">Conectado desde:</span>\n                      <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.connection_stats.connected_since)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-blue-600\">Reconexões:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.connection_stats.reconnect_count}</span>\n                    </div>\n                    {selectedSessionData.connection_stats.last_reconnect && (\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-blue-600\">Última reconexão:</span>\n                        <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.connection_stats.last_reconnect)}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n              \n              {selectedSessionData.message_stats && (\n                <div className=\"bg-green-50 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-semibold text-green-700 mb-3\">Estatísticas de Mensagens</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Enviadas hoje:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.sent_today}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Recebidas hoje:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.received_today}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Taxa de entrega:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.delivery_rate}%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Taxa de leitura:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.read_rate}%</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* Detailed Stats (expandable) */}\n            {showDetailedStats && (\n              <div className=\"mt-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  {/* Device Info */}\n                  {selectedSessionData.device_info && (\n                    <div className=\"bg-gray-50 rounded-lg p-4\">\n                      <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Informações do Dispositivo</h4>\n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm text-gray-600\">Plataforma:</span>\n                          <span className=\"text-sm font-medium\">{selectedSessionData.device_info.platform || 'N/A'}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm text-gray-600\">Fabricante:</span>\n                          <span className=\"text-sm font-medium\">{selectedSessionData.device_info.device_manufacturer || 'N/A'}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm text-gray-600\">Modelo:</span>\n                          <span className=\"text-sm font-medium\">{selectedSessionData.device_info.device_model || 'N/A'}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm text-gray-600\">Versão do OS:</span>\n                          <span className=\"text-sm font-medium\">{selectedSessionData.device_info.os_version || 'N/A'}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm text-gray-600\">Versão do WhatsApp:</span>\n                          <span className=\"text-sm font-medium\">{selectedSessionData.device_info.wa_version || 'N/A'}</span>\n                        </div>\n                        {selectedSessionData.device_info.battery && (\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm text-gray-600\">Bateria:</span>\n                            <div className=\"flex items-center\">\n                              <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\n                                <div \n                                  className={`h-2 rounded-full ${\n                                    selectedSessionData.device_info.battery > 50 ? 'bg-green-500' :\n                                    selectedSessionData.device_info.battery > 20 ? 'bg-yellow-500' : 'bg-red-500'\n                                  }`}\n                                  style={{ width: `${selectedSessionData.device_info.battery}%` }}\n                                ></div>\n                              </div>\n                              <span className=\"text-sm font-medium\">{selectedSessionData.device_info.battery}%</span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                  \n                  {/* Health Status */}\n                  {selectedSessionData.health_status && (\n                    <div className={`rounded-lg p-4 ${\n                      selectedSessionData.health_status.status === 'healthy' ? 'bg-green-50' :\n                      selectedSessionData.health_status.status === 'warning' ? 'bg-yellow-50' : 'bg-red-50'\n                    }`}>\n                      <h4 className={`text-sm font-semibold mb-3 ${\n                        selectedSessionData.health_status.status === 'healthy' ? 'text-green-700' :\n                        selectedSessionData.health_status.status === 'warning' ? 'text-yellow-700' : 'text-red-700'\n                      }`}>Status de Saúde</h4>\n                      \n                      <div className=\"space-y-2\">\n                        <div className=\"flex justify-between\">\n                          <span className={`text-sm ${\n                            selectedSessionData.health_status.status === 'healthy' ? 'text-green-600' :\n                            selectedSessionData.health_status.status === 'warning' ? 'text-yellow-600' : 'text-red-600'\n                          }`}>Status:</span>\n                          <span className=\"text-sm font-medium\">{getHealthStatusBadge(selectedSessionData.health_status.status)}</span>\n                        </div>\n                        \n                        <div className=\"flex justify-between\">\n                          <span className={`text-sm ${\n                            selectedSessionData.health_status.status === 'healthy' ? 'text-green-600' :\n                            selectedSessionData.health_status.status === 'warning' ? 'text-yellow-600' : 'text-red-600'\n                          }`}>Última verificação:</span>\n                          <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.health_status.last_check)}</span>\n                        </div>\n                        \n                        {selectedSessionData.health_status.issues.length > 0 && (\n                          <div className=\"mt-2\">\n                            <span className={`text-sm ${\n                              selectedSessionData.health_status.status === 'warning' ? 'text-yellow-600' : 'text-red-600'\n                            }`}>Problemas detectados:</span>\n                            <ul className=\"mt-1 space-y-1\">\n                              {selectedSessionData.health_status.issues.map((issue, index) => (\n                                <li key={index} className=\"text-sm flex items-start\">\n                                  <AlertTriangle className=\"h-4 w-4 mr-1 mt-0.5 text-red-500\" />\n                                  <span>{issue}</span>\n                                </li>\n                              ))}\n                            </ul>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Message Stats Detailed */}\n                {selectedSessionData.message_stats && (\n                  <div className=\"mt-6 bg-white rounded-lg border border-gray-200 p-4\">\n                    <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Estatísticas Detalhadas de Mensagens</h4>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      <div className=\"bg-blue-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-blue-600\">Total Enviadas</p>\n                            <p className=\"text-xl font-bold text-blue-800\">{selectedSessionData.message_stats.sent_total.toLocaleString()}</p>\n                          </div>\n                          <Send className=\"h-8 w-8 text-blue-500\" />\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-purple-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-purple-600\">Total Recebidas</p>\n                            <p className=\"text-xl font-bold text-purple-800\">{selectedSessionData.message_stats.received_total.toLocaleString()}</p>\n                          </div>\n                          <MessageCircle className=\"h-8 w-8 text-purple-500\" />\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-green-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-green-600\">Taxa de Entrega</p>\n                            <p className=\"text-xl font-bold text-green-800\">{selectedSessionData.message_stats.delivery_rate}%</p>\n                          </div>\n                          <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-orange-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-orange-600\">Taxa de Resposta</p>\n                            <p className=\"text-xl font-bold text-orange-800\">{selectedSessionData.message_stats.response_rate}%</p>\n                          </div>\n                          <BarChart2 className=\"h-8 w-8 text-orange-500\" />\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Connection Quality Indicators */}\n                    <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div className=\"bg-gray-50 rounded-lg p-3\">\n                        <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Qualidade da Conexão</h5>\n                        <div className=\"flex items-center space-x-2\">\n                          <Signal className=\"h-5 w-5 text-green-500\" />\n                          <div className=\"flex-1\">\n                            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                              <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '90%' }}></div>\n                            </div>\n                          </div>\n                          <span className=\"text-sm font-medium\">Excelente</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 rounded-lg p-3\">\n                        <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Status da Rede</h5>\n                        <div className=\"flex items-center space-x-2\">\n                          <Wifi className=\"h-5 w-5 text-green-500\" />\n                          <span className=\"text-sm font-medium\">Conectado</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 rounded-lg p-3\">\n                        <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Saúde da Sessão</h5>\n                        <div className=\"flex items-center space-x-2\">\n                          <Gauge className=\"h-5 w-5 text-green-500\" />\n                          <span className=\"text-sm font-medium\">Ótima</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Advanced Monitoring */}\n                {instanceMonitoring && (\n                  <div className=\"mt-6 bg-white rounded-lg border border-gray-200 p-4\">\n                    <h4 className=\"text-sm font-semibold text-gray-700 mb-3 flex items-center\">\n                      <Activity className=\"h-4 w-4 mr-2 text-blue-600\" />\n                      Monitoramento Avançado\n                    </h4>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div className=\"space-y-4\">\n                        <div>\n                          <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Uso de Recursos</h5>\n                          <div className=\"space-y-3\">\n                            <div>\n                              <div className=\"flex justify-between items-center mb-1\">\n                                <span className=\"text-xs text-gray-600\">CPU</span>\n                                <span className=\"text-xs text-gray-600\">{instanceMonitoring.cpu_usage}%</span>\n                              </div>\n                              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                                <div \n                                  className={`h-2 rounded-full ${\n                                    instanceMonitoring.cpu_usage > 80 ? 'bg-red-500' :\n                                    instanceMonitoring.cpu_usage > 50 ? 'bg-yellow-500' : 'bg-green-500'\n                                  }`}\n                                  style={{ width: `${instanceMonitoring.cpu_usage}%` }}\n                                ></div>\n                              </div>\n                            </div>\n                            \n                            <div>\n                              <div className=\"flex justify-between items-center mb-1\">\n                                <span className=\"text-xs text-gray-600\">Memória</span>\n                                <span className=\"text-xs text-gray-600\">\n                                  {instanceMonitoring.memory_usage.used.toFixed(1)} / {instanceMonitoring.memory_usage.total} GB\n                                </span>\n                              </div>\n                              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                                <div \n                                  className={`h-2 rounded-full ${\n                                    (instanceMonitoring.memory_usage.used / instanceMonitoring.memory_usage.total) > 0.8 ? 'bg-red-500' :\n                                    (instanceMonitoring.memory_usage.used / instanceMonitoring.memory_usage.total) > 0.5 ? 'bg-yellow-500' : 'bg-green-500'\n                                  }`}\n                                  style={{ width: `${(instanceMonitoring.memory_usage.used / instanceMonitoring.memory_usage.total) * 100}%` }}\n                                ></div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div>\n                          <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Conexão</h5>\n                          <div className=\"flex items-center space-x-2\">\n                            {instanceMonitoring.connection.type === 'wifi' ? (\n                              <Wifi className=\"h-4 w-4 text-green-500\" />\n                            ) : (\n                              <Signal className=\"h-4 w-4 text-blue-500\" />\n                            )}\n                            <span className=\"text-sm text-gray-700\">\n                              {instanceMonitoring.connection.type.toUpperCase()} - {instanceMonitoring.connection.strength}% de sinal\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-4\">\n                        <div>\n                          <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Saúde do Sistema</h5>\n                          <div className=\"flex items-center space-x-2 mb-2\">\n                            <Gauge className=\"h-5 w-5 text-green-500\" />\n                            <span className=\"text-sm font-medium\">Score de Saúde: {instanceMonitoring.health_score}/100</span>\n                          </div>\n                          \n                          {instanceMonitoring.issues.length > 0 ? (\n                            <div className=\"bg-yellow-50 p-3 rounded-lg\">\n                              <h6 className=\"text-xs font-medium text-yellow-800 mb-1\">Problemas Detectados:</h6>\n                              <ul className=\"space-y-1\">\n                                {instanceMonitoring.issues.map((issue, index) => (\n                                  <li key={index} className=\"text-xs text-yellow-700 flex items-start\">\n                                    <AlertTriangle className=\"h-3 w-3 mr-1 mt-0.5 text-yellow-500\" />\n                                    <span>{issue}</span>\n                                  </li>\n                                ))}\n                              </ul>\n                            </div>\n                          ) : (\n                            <div className=\"bg-green-50 p-3 rounded-lg\">\n                              <div className=\"flex items-center\">\n                                <CheckCircle className=\"h-4 w-4 mr-1 text-green-500\" />\n                                <span className=\"text-xs text-green-700\">Nenhum problema detectado</span>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                        \n                        <div>\n                          <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Atividade</h5>\n                          <div className=\"text-sm text-gray-700\">\n                            Última atividade: {formatDate(instanceMonitoring.last_activity)}\n                          </div>\n                          <div className=\"text-sm text-gray-700\">\n                            Versão: {instanceMonitoring.version}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Actions */}\n                <div className=\"mt-6 flex flex-wrap gap-4\">\n                  <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center space-x-2\">\n                    <RefreshCw className=\"h-4 w-4\" />\n                    <span>Reconectar</span>\n                  </button>\n                  \n                  <button className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center space-x-2\">\n                    <Download className=\"h-4 w-4\" />\n                    <span>Backup da Sessão</span>\n                  </button>\n                  \n                  <button className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex items-center space-x-2\">\n                    <Activity className=\"h-4 w-4\" />\n                    <span>Diagnóstico Completo</span>\n                  </button>\n                  \n                  <button className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center space-x-2\">\n                    <XCircle className=\"h-4 w-4\" />\n                    <span>Desconectar</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Tips and Best Practices */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n        <div className=\"flex items-start space-x-3\">\n          <Zap className=\"h-6 w-6 text-blue-600 mt-0.5\" />\n          <div>\n            <h3 className=\"text-md font-semibold text-blue-900 mb-2\">\n              Dicas para Manter seu WhatsApp Saudável\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-800\">\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Mantenha o celular conectado à energia e Wi-Fi estável</span>\n              </div>\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Evite enviar mais de 20 mensagens por minuto</span>\n              </div>\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Mantenha o WhatsApp do celular atualizado</span>\n              </div>\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Faça backup regular da sessão para evitar perda de conexão</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WhatsAppMonitoring;","import React, { useState, useEffect, useRef } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  MessageCircle, \n  Send, \n  Paperclip, \n  Smile, \n  Search, \n  Filter,\n  MoreVertical,\n  Phone,\n  Video,\n  Info,\n  Archive,\n  Star,\n  Clock,\n  CheckCircle2,\n  Check,\n  User,\n  Bot,\n  AlertTriangle,\n  Zap,\n  Users,\n  ArrowLeft,\n  Image,\n  File,\n  Mic,\n  X,\n  Download,\n  Eye,\n  Tag,\n  Plus,\n  Hash,\n  Edit,\n  Trash2,\n  Save,\n  Palette,\n  Flame,\n  TrendingUp,\n  TrendingDown,\n  Target,\n  Crown,\n  Shield,\n  Brain,\n  Sparkles,\n  Radar,\n  Activity,\n  RefreshCw,\n  ScanLine,\n  Crosshair,\n  MousePointer2,\n  Lightbulb,\n  Gauge,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface Message {\n  id: string;\n  conversation_id: string;\n  company_id: string;\n  content: string;\n  timestamp: Date;\n  sender: 'customer' | 'agent' | 'bot';\n  sender_name: string;\n  sender_id?: string;\n  status: 'sent' | 'delivered' | 'read';\n  message_type: 'text' | 'image' | 'file' | 'audio' | 'video';\n  file_url?: string;\n  file_name?: string;\n  file_size?: number;\n  thumbnail_url?: string;\n  metadata?: Record<string, any>;\n}\n\ninterface Conversation {\n  id: string;\n  company_id: string;\n  customer_name: string;\n  customer_phone: string;\n  customer_email?: string;\n  customer_avatar_url?: string;\n  last_message: string;\n  last_message_time: Date;\n  unread_count: number;\n  status: 'active' | 'waiting' | 'closed' | 'transferred' | 'bot';\n  assigned_agent_id?: string;\n  assigned_agent_name?: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  tags: string[];\n  source: 'whatsapp' | 'telegram' | 'webchat' | 'instagram' | 'facebook';\n  created_at: Date;\n  updated_at: Date;\n  customer_metadata?: Record<string, any>;\n  internal_notes?: string;\n  aiInsights?: {\n    sentiment: 'positive' | 'neutral' | 'negative';\n    urgency: number;\n    customerValue: 'bronze' | 'silver' | 'gold' | 'platinum';\n    predictedResolution: number;\n    riskScore: number;\n    intent: string;\n    keywords: string[];\n  };\n}\n\ninterface SmartFilter {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  count: number;\n  color: string;\n  description: string;\n  condition: (conv: Conversation) => boolean;\n  priority: number;\n}\n\ninterface TagTemplate {\n  id: string;\n  name: string;\n  color: string;\n  category: 'status' | 'priority' | 'department' | 'custom';\n  description?: string;\n  isDefault: boolean;\n}\n\nconst ConversationsModule: React.FC = () => {\n  const { user } = useAuthStore();\n  const [selectedConversation, setSelectedConversation] = useState<string | null>(null);\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [messageInput, setMessageInput] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFilters, setSelectedFilters] = useState<string[]>([]);\n  const [showConversationInfo, setShowConversationInfo] = useState(false);\n  const [showTagManager, setShowTagManager] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [editingTags, setEditingTags] = useState(false);\n  const [newTag, setNewTag] = useState('');\n  const [selectedTagColor, setSelectedTagColor] = useState('#3B82F6');\n  const [realTimeMode, setRealTimeMode] = useState(true);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [tagTemplates, setTagTemplates] = useState<TagTemplate[]>([]);\n  const [isLoadingConversations, setIsLoadingConversations] = useState(false);\n  const [isLoadingMessages, setIsLoadingMessages] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Cores disponíveis para tags\n  const tagColors = [\n    '#EF4444', '#F97316', '#F59E0B', '#EAB308', '#84CC16', '#22C55E',\n    '#10B981', '#14B8A6', '#06B6D4', '#0EA5E9', '#3B82F6', '#6366F1',\n    '#8B5CF6', '#A855F7', '#C084FC', '#E879F9', '#F472B6', '#FB7185'\n  ];\n\n  // Carregar conversas ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadConversations();\n      loadTags();\n    }\n  }, [user?.companyId]);\n\n  // Carregar mensagens quando uma conversa é selecionada\n  useEffect(() => {\n    if (selectedConversation) {\n      loadMessages(selectedConversation);\n    }\n  }, [selectedConversation]);\n\n  // Rolar para o final das mensagens\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Auto-refresh em tempo real\n  useEffect(() => {\n    if (!autoRefresh || !realTimeMode) return;\n\n    const interval = setInterval(() => {\n      if (user?.companyId) {\n        loadConversations();\n        if (selectedConversation) {\n          loadMessages(selectedConversation);\n        }\n      }\n    }, 10000);\n\n    return () => clearInterval(interval);\n  }, [autoRefresh, realTimeMode, user?.companyId, selectedConversation]);\n\n  // Carregar conversas da API\n  const loadConversations = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de conversas desabilitado em desenvolvimento');\n      setIsLoadingConversations(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoadingConversations(true);\n      setError(null);\n      \n      const response = await api.getConversations(user.companyId);\n      \n      if (response.success && response.data) {\n        // Converter datas de string para Date\n        const formattedConversations = response.data.map((conv: any) => ({\n          ...conv,\n          last_message_time: new Date(conv.last_message_time),\n          created_at: new Date(conv.created_at),\n          updated_at: new Date(conv.updated_at)\n        }));\n        \n        setConversations(formattedConversations);\n      }\n    } catch (err) {\n      console.error('Erro ao carregar conversas:', err);\n      setError('Não foi possível carregar as conversas. Tente novamente mais tarde.');\n    } finally {\n      setIsLoadingConversations(false);\n    }\n  };\n\n  // Carregar mensagens da API\n  const loadMessages = async (conversationId: string) => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de mensagens desabilitado em desenvolvimento');\n      setIsLoadingMessages(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoadingMessages(true);\n      \n      const response = await api.getMessages(user.companyId, conversationId);\n      \n      if (response.success && response.data) {\n        // Converter datas de string para Date\n        const formattedMessages = response.data.map((msg: any) => ({\n          ...msg,\n          timestamp: new Date(msg.timestamp)\n        }));\n        \n        setMessages(formattedMessages);\n        \n        // Marcar conversa como lida\n        await api.updateConversation(user.companyId, conversationId, {\n          unread_count: 0\n        });\n        \n        // Atualizar lista de conversas para refletir a mudança\n        loadConversations();\n      }\n    } catch (err) {\n      console.error('Erro ao carregar mensagens:', err);\n    } finally {\n      setIsLoadingMessages(false);\n    }\n  };\n\n  // Carregar tags da API\n  const loadTags = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de tags desabilitado em desenvolvimento');\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      const response = await api.getTags(user.companyId);\n      \n      if (response.success && response.data) {\n        setTagTemplates(response.data.map((tag: any) => ({\n          id: tag.id,\n          name: tag.name,\n          color: tag.color,\n          category: tag.category,\n          description: tag.description,\n          isDefault: tag.is_default\n        })));\n      }\n    } catch (err) {\n      console.error('Erro ao carregar tags:', err);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  // Enviar mensagem\n  const sendMessage = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Envio de mensagem desabilitado em desenvolvimento');\n      setMessageInput('');\n      return;\n    }\n\n    if (!messageInput.trim() || !selectedConversation || !user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      \n      const messageData = {\n        content: messageInput,\n        message_type: 'text',\n        sender_name: user.name\n      };\n      \n      const response = await api.sendMessage(user.companyId, selectedConversation, messageData);\n      \n      if (response.success) {\n        setMessageInput('');\n        loadMessages(selectedConversation);\n      }\n    } catch (err) {\n      console.error('Erro ao enviar mensagem:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Função para toggle de filtros\n  const toggleFilter = (filterId: string) => {\n    setSelectedFilters(prev => \n      prev.includes(filterId) \n        ? prev.filter(id => id !== filterId)\n        : [...prev, filterId]\n    );\n  };\n\n  // Função para limpar filtros\n  const clearAllFilters = () => {\n    setSelectedFilters([]);\n    setSearchTerm('');\n  };\n\n  // Função para adicionar tag a uma conversa\n  const addTagToConversation = async (conversationId: string, tagName: string) => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Adição de tag desabilitada em desenvolvimento');\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      const conversation = conversations.find(c => c.id === conversationId);\n      if (!conversation) return;\n      \n      const updatedTags = [...conversation.tags];\n      if (!updatedTags.includes(tagName)) {\n        updatedTags.push(tagName);\n      }\n      \n      await api.updateConversation(user.companyId, conversationId, {\n        tags: updatedTags\n      });\n      \n      // Atualizar lista de conversas\n      loadConversations();\n    } catch (err) {\n      console.error('Erro ao adicionar tag:', err);\n    }\n  };\n\n  // Função para remover tag de uma conversa\n  const removeTagFromConversation = async (conversationId: string, tagName: string) => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Remoção de tag desabilitada em desenvolvimento');\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      const conversation = conversations.find(c => c.id === conversationId);\n      if (!conversation) return;\n      \n      const updatedTags = conversation.tags.filter(tag => tag !== tagName);\n      \n      await api.updateConversation(user.companyId, conversationId, {\n        tags: updatedTags\n      });\n      \n      // Atualizar lista de conversas\n      loadConversations();\n    } catch (err) {\n      console.error('Erro ao remover tag:', err);\n    }\n  };\n\n  // Função para criar nova tag\n  const createNewTag = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Criação de tag desabilitada em desenvolvimento');\n      setNewTag('');\n      setSelectedTagColor('#3B82F6');\n      return;\n    }\n\n    if (!newTag.trim() || !user?.companyId) return;\n    \n    try {\n      const tagData = {\n        name: newTag.toLowerCase().replace(/\\s+/g, '-'),\n        color: selectedTagColor,\n        category: 'custom',\n        description: `Tag personalizada: ${newTag}`,\n        is_default: false,\n        keywords: newTag.split(' ').filter(word => word.length > 2)\n      };\n      \n      const response = await api.createTag(user.companyId, tagData);\n      \n      if (response.success) {\n        setNewTag('');\n        setSelectedTagColor('#3B82F6');\n        loadTags();\n      }\n    } catch (err) {\n      console.error('Erro ao criar tag:', err);\n    }\n  };\n\n  // Função para obter cor da tag\n  const getTagColor = (tagName: string) => {\n    const template = tagTemplates.find(t => t.name === tagName);\n    return template?.color || '#6B7280';\n  };\n\n  // Filtros Inteligentes Dinâmicos\n  const smartFilters: SmartFilter[] = React.useMemo(() => [\n    {\n      id: 'critical',\n      name: 'Críticas',\n      icon: <Flame className=\"h-4 w-4\" />,\n      count: conversations.filter(conv => conv.priority === 'urgent').length,\n      color: 'bg-red-500',\n      description: 'Conversas que precisam de atenção imediata',\n      condition: (conv) => conv.priority === 'urgent',\n      priority: 1\n    },\n    {\n      id: 'hot-leads',\n      name: 'Hot Leads',\n      icon: <Crosshair className=\"h-4 w-4\" />,\n      count: conversations.filter(conv => conv.tags.includes('hot-lead')).length,\n      color: 'bg-green-500',\n      description: 'Clientes com alta intenção de compra',\n      condition: (conv) => conv.tags.includes('hot-lead'),\n      priority: 2\n    },\n    {\n      id: 'vip-customers',\n      name: 'VIP',\n      icon: <Crown className=\"h-4 w-4\" />,\n      count: conversations.filter(conv => conv.tags.includes('vip')).length,\n      color: 'bg-purple-500',\n      description: 'Clientes VIP',\n      condition: (conv) => conv.tags.includes('vip'),\n      priority: 3\n    },\n    {\n      id: 'unassigned',\n      name: 'Não Atribuídas',\n      icon: <Users className=\"h-4 w-4\" />,\n      count: conversations.filter(conv => !conv.assigned_agent_id && conv.status === 'waiting').length,\n      color: 'bg-blue-500',\n      description: 'Conversas aguardando atribuição',\n      condition: (conv) => !conv.assigned_agent_id && conv.status === 'waiting',\n      priority: 6\n    },\n    {\n      id: 'new-customers',\n      name: 'Novos',\n      icon: <Star className=\"h-4 w-4\" />,\n      count: conversations.filter(conv => conv.tags.includes('novo-cliente')).length,\n      color: 'bg-cyan-500',\n      description: 'Novos clientes - primeira interação',\n      condition: (conv) => conv.tags.includes('novo-cliente'),\n      priority: 7\n    },\n    {\n      id: 'support-issues',\n      name: 'Suporte',\n      icon: <Shield className=\"h-4 w-4\" />,\n      count: conversations.filter(conv => conv.tags.includes('suporte')).length,\n      color: 'bg-indigo-500',\n      description: 'Questões de suporte técnico',\n      condition: (conv) => conv.tags.includes('suporte'),\n      priority: 8\n    }\n  ], [conversations]);\n\n  // Filtrar conversas\n  const filteredConversations = React.useMemo(() => {\n    let filtered = conversations;\n\n    // Aplicar busca por texto\n    if (searchTerm) {\n      filtered = filtered.filter(conv =>\n        conv.customer_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        conv.customer_phone.includes(searchTerm) ||\n        conv.customer_email?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        conv.last_message.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        conv.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n\n    // Aplicar filtros inteligentes\n    if (selectedFilters.length > 0) {\n      filtered = filtered.filter(conv => {\n        return selectedFilters.some(filterId => {\n          const filter = smartFilters.find(f => f.id === filterId);\n          return filter ? filter.condition(conv) : false;\n        });\n      });\n    }\n\n    // Ordenar por prioridade e data\n    return filtered.sort((a, b) => {\n      // Primeiro por prioridade\n      const priorityOrder = { urgent: 3, high: 2, medium: 1, low: 0 };\n      const priorityDiff = priorityOrder[b.priority] - priorityOrder[a.priority];\n      if (priorityDiff !== 0) return priorityDiff;\n      \n      // Depois por mensagens não lidas\n      if (a.unread_count !== b.unread_count) {\n        return b.unread_count - a.unread_count;\n      }\n      \n      // Por último por tempo da última mensagem\n      return b.last_message_time.getTime() - a.last_message_time.getTime();\n    });\n  }, [conversations, searchTerm, selectedFilters, smartFilters]);\n\n  const currentConversation = conversations.find(c => c.id === selectedConversation);\n\n  // Componente de Tag\n  const TagComponent: React.FC<{ \n    tag: string; \n    onRemove?: () => void; \n    onClick?: () => void;\n    size?: 'sm' | 'md';\n    showRemove?: boolean;\n  }> = ({ tag, onRemove, onClick, size = 'sm', showRemove = false }) => {\n    const color = getTagColor(tag);\n    const template = tagTemplates.find(t => t.name === tag);\n    \n    return (\n      <span \n        className={`inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium cursor-pointer transition-all hover:scale-105 ${\n          size === 'md' ? 'px-3 py-1.5 text-sm' : 'px-2 py-1 text-xs'\n        }`}\n        style={{ \n          backgroundColor: color + '20', \n          color: color,\n          border: `1px solid ${color}40`\n        }}\n        onClick={onClick}\n        title={template?.description}\n      >\n        <Hash className=\"h-3 w-3\" />\n        {tag}\n        {showRemove && onRemove && (\n          <button\n            onClick={(e) => {\n              e.stopPropagation();\n              onRemove();\n            }}\n            className=\"ml-1 hover:bg-red-100 rounded-full p-0.5\"\n          >\n            <X className=\"h-3 w-3\" />\n          </button>\n        )}\n      </span>\n    );\n  };\n\n  // Componente de Filtros Inteligentes\n  const SmartFiltersComponent = () => (\n    <div className=\"bg-white rounded-lg border border-gray-200 p-4 mb-4\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <Radar className=\"h-5 w-5 text-blue-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Filtros Inteligentes</h3>\n          {realTimeMode && (\n            <div className=\"flex items-center space-x-1 text-green-600\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n              <span className=\"text-xs font-medium\">TEMPO REAL</span>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setRealTimeMode(!realTimeMode)}\n            className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${\n              realTimeMode \n                ? 'bg-green-100 text-green-800' \n                : 'bg-gray-100 text-gray-600'\n            }`}\n          >\n            {realTimeMode ? 'Tempo Real ON' : 'Tempo Real OFF'}\n          </button>\n          \n          {selectedFilters.length > 0 && (\n            <button\n              onClick={clearAllFilters}\n              className=\"px-3 py-1 bg-red-100 text-red-800 rounded-full text-xs font-medium hover:bg-red-200 transition-colors\"\n            >\n              Limpar ({selectedFilters.length})\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Filtros Dinâmicos */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-2 mb-4\">\n        {smartFilters\n          .sort((a, b) => a.priority - b.priority)\n          .map((filter) => (\n            <button\n              key={filter.id}\n              onClick={() => toggleFilter(filter.id)}\n              className={`relative flex items-center space-x-2 p-3 rounded-lg border-2 transition-all duration-200 hover:scale-105 ${\n                selectedFilters.includes(filter.id)\n                  ? 'border-blue-500 bg-blue-50 shadow-md'\n                  : 'border-gray-200 bg-white hover:border-gray-300'\n              }`}\n              title={filter.description}\n            >\n              <div className={`p-1 rounded ${filter.color} text-white`}>\n                {filter.icon}\n              </div>\n              <div className=\"flex-1 text-left\">\n                <div className=\"text-sm font-medium text-gray-900\">{filter.name}</div>\n                <div className=\"text-xs text-gray-500\">{filter.count} itens</div>\n              </div>\n              \n              {filter.count > 0 && (\n                <div className={`absolute -top-1 -right-1 w-5 h-5 ${filter.color} text-white text-xs rounded-full flex items-center justify-center font-bold`}>\n                  {filter.count}\n                </div>\n              )}\n              \n              {selectedFilters.includes(filter.id) && (\n                <div className=\"absolute inset-0 border-2 border-blue-500 rounded-lg animate-pulse\"></div>\n              )}\n            </button>\n          ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"h-[calc(100vh-12rem)] bg-white rounded-lg border border-gray-200 overflow-hidden\">\n      <div className=\"flex h-full\">\n        {/* Lista de Conversas */}\n        <div className={`${selectedConversation ? 'hidden lg:block' : 'block'} w-full lg:w-80 border-r border-gray-200 flex flex-col`}>\n          {/* Header da Lista */}\n          <div className=\"p-4 border-b border-gray-200\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900\">Conversas</h2>\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setShowTagManager(!showTagManager)}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n                  title=\"Gerenciar Tags\"\n                >\n                  <Tag className=\"h-4 w-4\" />\n                </button>\n                <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                  <MoreVertical className=\"h-4 w-4\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Busca Inteligente */}\n            <div className=\"relative mb-3\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Busca inteligente: nome, tags, sentimentos...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n              />\n              {searchTerm && (\n                <button\n                  onClick={() => setSearchTerm('')}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                >\n                  <X className=\"h-4 w-4\" />\n                </button>\n              )}\n            </div>\n\n            {/* Filtros Rápidos */}\n            <div className=\"grid grid-cols-2 gap-2 mb-3\">\n              {smartFilters.slice(0, 4).map((filter) => (\n                <button\n                  key={filter.id}\n                  onClick={() => toggleFilter(filter.id)}\n                  className={`flex items-center space-x-2 p-2 rounded-lg text-xs transition-all ${\n                    selectedFilters.includes(filter.id)\n                      ? 'bg-blue-50 text-blue-800 border border-blue-200'\n                      : 'bg-gray-50 text-gray-600 hover:bg-gray-100'\n                  }`}\n                >\n                  <div className={`p-1 rounded ${filter.color} text-white`}>\n                    {filter.icon}\n                  </div>\n                  <span>{filter.name} ({filter.count})</span>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Lista */}\n          <div className=\"flex-1 overflow-y-auto\">\n            {isLoadingConversations ? (\n              <div className=\"flex items-center justify-center h-full\">\n                <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n              </div>\n            ) : filteredConversations.length > 0 ? (\n              filteredConversations.map((conversation) => (\n                <div\n                  key={conversation.id}\n                  onClick={() => setSelectedConversation(conversation.id)}\n                  className={`p-4 border-b border-gray-100 cursor-pointer hover:bg-gray-50 transition-colors ${\n                    selectedConversation === conversation.id ? 'bg-primary-50 border-primary-200' : ''\n                  }`}\n                >\n                  <div className=\"flex items-start space-x-3\">\n                    <div className=\"relative\">\n                      {conversation.customer_avatar_url ? (\n                        <img\n                          src={conversation.customer_avatar_url}\n                          alt={conversation.customer_name}\n                          className=\"w-10 h-10 rounded-full\"\n                        />\n                      ) : (\n                        <div className=\"w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center\">\n                          <User className=\"h-5 w-5 text-gray-600\" />\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"text-sm font-medium text-gray-900 truncate\">\n                          {conversation.customer_name}\n                        </h3>\n                        <span className=\"text-xs text-gray-500\">\n                          {conversation.last_message_time.toLocaleTimeString('pt-BR', { \n                            hour: '2-digit', \n                            minute: '2-digit' \n                          })}\n                        </span>\n                      </div>\n\n                      <p className=\"text-sm text-gray-600 truncate mt-1\">\n                        {conversation.last_message}\n                      </p>\n\n                      {/* Tags da conversa */}\n                      {conversation.tags.length > 0 && (\n                        <div className=\"flex flex-wrap gap-1 mt-2\">\n                          {conversation.tags.slice(0, 3).map((tag) => (\n                            <TagComponent key={tag} tag={tag} size=\"sm\" />\n                          ))}\n                          {conversation.tags.length > 3 && (\n                            <span className=\"text-xs text-gray-500\">\n                              +{conversation.tags.length - 3}\n                            </span>\n                          )}\n                        </div>\n                      )}\n\n                      {conversation.unread_count > 0 && (\n                        <div className=\"flex justify-end mt-1\">\n                          <span className=\"inline-flex items-center justify-center w-5 h-5 text-xs font-medium text-white bg-primary-600 rounded-full\">\n                            {conversation.unread_count}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"text-center py-12\">\n                <MessageCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma conversa encontrada</h3>\n                <p className=\"text-gray-500\">\n                  {searchTerm || selectedFilters.length > 0\n                    ? 'Tente ajustar os filtros de busca'\n                    : 'Aguardando novas conversas...'\n                  }\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Área de Chat */}\n        {selectedConversation ? (\n          <div className=\"flex-1 flex flex-col\">\n            {/* Header do Chat */}\n            <div className=\"p-4 border-b border-gray-200 bg-white\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <button\n                    onClick={() => setSelectedConversation(null)}\n                    className=\"lg:hidden p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n                  >\n                    <ArrowLeft className=\"h-4 w-4\" />\n                  </button>\n                  \n                  <div className=\"flex items-center space-x-3\">\n                    {currentConversation?.customer_avatar_url ? (\n                      <img\n                        src={currentConversation.customer_avatar_url}\n                        alt={currentConversation.customer_name}\n                        className=\"w-10 h-10 rounded-full\"\n                      />\n                    ) : (\n                      <div className=\"w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center\">\n                        <User className=\"h-5 w-5 text-gray-600\" />\n                      </div>\n                    )}\n                    \n                    <div>\n                      <h3 className=\"text-sm font-medium text-gray-900\">\n                        {currentConversation?.customer_name}\n                      </h3>\n                      <div className=\"flex items-center space-x-2 text-xs text-gray-500\">\n                        <span>{currentConversation?.customer_phone}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center space-x-2\">\n                  <button\n                    onClick={() => setEditingTags(!editingTags)}\n                    className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n                    title=\"Editar Tags\"\n                  >\n                    <Tag className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                    <Phone className=\"h-4 w-4\" />\n                  </button>\n                  <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                    <Video className=\"h-4 w-4\" />\n                  </button>\n                  <button\n                    onClick={() => setShowConversationInfo(!showConversationInfo)}\n                    className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n                  >\n                    <Info className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n\n              {/* Tags da conversa atual */}\n              {currentConversation && currentConversation.tags.length > 0 && (\n                <div className=\"mt-3 flex flex-wrap gap-2\">\n                  {currentConversation.tags.map((tag) => (\n                    <TagComponent\n                      key={tag}\n                      tag={tag}\n                      size=\"md\"\n                      showRemove={editingTags}\n                      onRemove={() => removeTagFromConversation(currentConversation.id, tag)}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Mensagens */}\n            <div className=\"flex-1 overflow-y-auto p-4\">\n              {isLoadingMessages ? (\n                <div className=\"flex items-center justify-center h-full\">\n                  <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n                </div>\n              ) : messages.length > 0 ? (\n                messages.map((message) => (\n                  <div \n                    key={message.id}\n                    className={`mb-4 flex ${message.sender === 'customer' ? 'justify-start' : 'justify-end'}`}\n                  >\n                    <div \n                      className={`max-w-[80%] rounded-lg p-3 ${\n                        message.sender === 'customer' \n                          ? 'bg-gray-100 text-gray-800' \n                          : message.sender === 'bot'\n                          ? 'bg-purple-100 text-purple-800'\n                          : 'bg-primary-100 text-primary-800'\n                      }`}\n                    >\n                      <div className=\"flex items-center space-x-2 mb-1\">\n                        <span className=\"text-xs font-medium\">\n                          {message.sender_name}\n                        </span>\n                        <span className=\"text-xs text-gray-500\">\n                          {new Date(message.timestamp).toLocaleTimeString('pt-BR', {\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}\n                        </span>\n                      </div>\n                      \n                      {message.message_type === 'text' ? (\n                        <p className=\"text-sm\">{message.content}</p>\n                      ) : message.message_type === 'image' && message.file_url ? (\n                        <div>\n                          <img \n                            src={message.file_url} \n                            alt=\"Imagem\" \n                            className=\"rounded-md max-h-60 mb-1\" \n                          />\n                          {message.content && <p className=\"text-sm mt-1\">{message.content}</p>}\n                        </div>\n                      ) : message.message_type === 'file' && message.file_url ? (\n                        <div className=\"bg-white rounded-md p-2 flex items-center space-x-2\">\n                          <File className=\"h-5 w-5 text-gray-500\" />\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"text-sm font-medium truncate\">{message.file_name}</p>\n                            <p className=\"text-xs text-gray-500\">\n                              {message.file_size ? `${Math.round(message.file_size / 1024)} KB` : 'Arquivo'}\n                            </p>\n                          </div>\n                          <a \n                            href={message.file_url} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                            className=\"p-1 text-blue-600 hover:text-blue-800\"\n                          >\n                            <Download className=\"h-4 w-4\" />\n                          </a>\n                        </div>\n                      ) : (\n                        <p className=\"text-sm\">{message.content}</p>\n                      )}\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"text-center py-4\">\n                  <p className=\"text-sm text-gray-500\">\n                    Nenhuma mensagem nesta conversa\n                  </p>\n                </div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input de Mensagem */}\n            <div className=\"p-4 border-t border-gray-200 bg-white\">\n              <div className=\"flex items-end space-x-2\">\n                <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                  <Paperclip className=\"h-4 w-4\" />\n                </button>\n                \n                <div className=\"flex-1 relative\">\n                  <textarea\n                    value={messageInput}\n                    onChange={(e) => setMessageInput(e.target.value)}\n                    placeholder=\"Digite sua mensagem...\"\n                    rows={1}\n                    className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 resize-none\"\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' && !e.shiftKey) {\n                        e.preventDefault();\n                        sendMessage();\n                      }\n                    }}\n                  />\n                </div>\n                \n                <button className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\">\n                  <Smile className=\"h-4 w-4\" />\n                </button>\n                \n                <button\n                  onClick={sendMessage}\n                  disabled={!messageInput.trim() || isLoading}\n                  className=\"p-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  style={{ backgroundColor: 'var(--color-primary)' }}\n                >\n                  {isLoading ? (\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                  ) : (\n                    <Send className=\"h-4 w-4\" />\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        ) : (\n          /* Estado vazio */\n          <div className=\"flex-1 flex flex-col\">\n            {/* Filtros Inteligentes quando nenhuma conversa está selecionada */}\n            <div className=\"p-6\">\n              <SmartFiltersComponent />\n            </div>\n            \n            <div className=\"flex-1 flex items-center justify-center bg-gray-50\">\n              <div className=\"text-center\">\n                <MessageCircle className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  Selecione uma conversa\n                </h3>\n                <p className=\"text-gray-500\">\n                  Use os filtros inteligentes para encontrar conversas específicas\n                </p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Painel de Informações */}\n        {showConversationInfo && currentConversation && (\n          <div className=\"w-80 border-l border-gray-200 bg-white p-4 overflow-y-auto\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">Informações</h3>\n              <button\n                onClick={() => setShowConversationInfo(false)}\n                className=\"p-1 text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-4 w-4\" />\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              {/* Informações do Cliente */}\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Cliente</h4>\n                <div className=\"space-y-2 text-sm\">\n                  <div>\n                    <span className=\"text-gray-500\">Nome:</span>\n                    <span className=\"ml-2 text-gray-900\">{currentConversation.customer_name}</span>\n                  </div>\n                  <div>\n                    <span className=\"text-gray-500\">Telefone:</span>\n                    <span className=\"ml-2 text-gray-900\">{currentConversation.customer_phone}</span>\n                  </div>\n                  {currentConversation.customer_email && (\n                    <div>\n                      <span className=\"text-gray-500\">Email:</span>\n                      <span className=\"ml-2 text-gray-900\">{currentConversation.customer_email}</span>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Tags */}\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Tags</h4>\n                <div className=\"flex flex-wrap gap-2\">\n                  {currentConversation.tags.map((tag) => (\n                    <TagComponent key={tag} tag={tag} size=\"md\" />\n                  ))}\n                  {currentConversation.tags.length === 0 && (\n                    <span className=\"text-sm text-gray-500 italic\">Nenhuma tag</span>\n                  )}\n                </div>\n                <button\n                  onClick={() => setEditingTags(true)}\n                  className=\"mt-2 text-sm text-blue-600 hover:text-blue-700\"\n                >\n                  Editar tags\n                </button>\n              </div>\n\n              {/* Notas Internas */}\n              <div>\n                <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Notas Internas</h4>\n                <textarea\n                  placeholder=\"Adicionar nota interna...\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                  rows={3}\n                  defaultValue={currentConversation.internal_notes}\n                  onBlur={async (e) => {\n                    if (e.target.value !== currentConversation.internal_notes && user?.companyId) {\n                      try {\n                        await api.updateConversation(user.companyId, currentConversation.id, {\n                          internal_notes: e.target.value\n                        });\n                        loadConversations();\n                      } catch (err) {\n                        console.error('Erro ao atualizar notas:', err);\n                      }\n                    }\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ConversationsModule;","import React, { useState, useEffect, useMemo } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Tag, \n  Plus, \n  Search, \n  Filter, \n  Edit, \n  Trash2, \n  Eye,\n  Hash,\n  Palette,\n  Star,\n  Target,\n  Users,\n  MessageCircle,\n  TrendingUp,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Clock,\n  BarChart3,\n  Layers,\n  Sparkles,\n  Brain,\n  Zap,\n  Crown,\n  Shield,\n  Award,\n  Activity,\n  Flame,\n  Lightbulb,\n  Gauge,\n  X,\n  Save,\n  RotateCcw,\n  Download,\n  Upload,\n  Copy,\n  Settings,\n  Info,\n  Radar,\n  ScanLine,\n  MousePointer2,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface TagTemplate {\n  id: string;\n  name: string;\n  color: string;\n  category: 'status' | 'priority' | 'department' | 'custom' | 'ai-generated';\n  description?: string;\n  isDefault: boolean;\n  usageCount: number;\n  createdAt: Date;\n  createdBy: string;\n  lastUsed?: Date;\n  aiSuggested?: boolean;\n  keywords?: string[];\n}\n\ninterface TagUsageStats {\n  totalTags: number;\n  activelyUsed: number;\n  mostUsed: TagTemplate[];\n  recentlyCreated: TagTemplate[];\n  categoryDistribution: { [key: string]: number };\n  usageTrend: { date: string; count: number }[];\n}\n\nconst TagsManagement: React.FC = () => {\n  const { user } = useAuthStore();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('all');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [editingTag, setEditingTag] = useState<TagTemplate | null>(null);\n  const [newTagName, setNewTagName] = useState('');\n  const [newTagColor, setNewTagColor] = useState('#3B82F6');\n  const [newTagCategory, setNewTagCategory] = useState<TagTemplate['category']>('custom');\n  const [newTagDescription, setNewTagDescription] = useState('');\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  const [showBulkActions, setShowBulkActions] = useState(false);\n  const [sortBy, setSortBy] = useState<'name' | 'usage' | 'created' | 'category'>('usage');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [tagTemplates, setTagTemplates] = useState<TagTemplate[]>([]);\n\n  // Carregar tags ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadTags();\n    }\n  }, [user?.companyId]);\n\n  // Carregar tags da API\n  const loadTags = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de tags desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getTags(user.companyId);\n      \n      if (response.success && response.data) {\n        // Converter dados da API para o formato do componente\n        const formattedTags: TagTemplate[] = response.data.map((tag: any) => ({\n          id: tag.id,\n          name: tag.name,\n          color: tag.color,\n          category: tag.category,\n          description: tag.description,\n          isDefault: tag.is_default,\n          usageCount: tag.usage_count || 0,\n          createdAt: new Date(tag.created_at),\n          createdBy: tag.created_by_name || 'Sistema',\n          lastUsed: tag.last_used ? new Date(tag.last_used) : undefined,\n          aiSuggested: tag.category === 'ai-generated',\n          keywords: tag.keywords || []\n        }));\n        \n        setTagTemplates(formattedTags);\n      }\n    } catch (err) {\n      console.error('Erro ao carregar tags:', err);\n      setError('Não foi possível carregar as tags. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Cores disponíveis para tags\n  const tagColors = [\n    '#EF4444', '#F97316', '#F59E0B', '#EAB308', '#84CC16', '#22C55E',\n    '#10B981', '#14B8A6', '#06B6D4', '#0EA5E9', '#3B82F6', '#6366F1',\n    '#8B5CF6', '#A855F7', '#C084FC', '#E879F9', '#F472B6', '#FB7185'\n  ];\n\n  // Estatísticas de uso\n  const tagUsageStats: TagUsageStats = useMemo(() => {\n    const totalTags = tagTemplates.length;\n    const activelyUsed = tagTemplates.filter(tag => tag.usageCount > 0).length;\n    const mostUsed = [...tagTemplates]\n      .sort((a, b) => b.usageCount - a.usageCount)\n      .slice(0, 5);\n    const recentlyCreated = [...tagTemplates]\n      .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime())\n      .slice(0, 5);\n    \n    const categoryDistribution = tagTemplates.reduce((acc, tag) => {\n      acc[tag.category] = (acc[tag.category] || 0) + 1;\n      return acc;\n    }, {} as { [key: string]: number });\n\n    // Dados para tendência de uso (seria buscado da API em produção)\n    const usageTrend = [\n      { date: '2024-11-15', count: 45 },\n      { date: '2024-11-16', count: 52 },\n      { date: '2024-11-17', count: 48 },\n      { date: '2024-11-18', count: 67 },\n      { date: '2024-11-19', count: 73 },\n      { date: '2024-11-20', count: 89 },\n      { date: '2024-11-21', count: 94 }\n    ];\n\n    return {\n      totalTags,\n      activelyUsed,\n      mostUsed,\n      recentlyCreated,\n      categoryDistribution,\n      usageTrend\n    };\n  }, [tagTemplates]);\n\n  // Filtrar e ordenar tags\n  const filteredAndSortedTags = useMemo(() => {\n    let filtered = tagTemplates.filter(tag => {\n      const matchesSearch = tag.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           tag.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           tag.keywords?.some(keyword => keyword.toLowerCase().includes(searchTerm.toLowerCase()));\n      const matchesCategory = filterCategory === 'all' || tag.category === filterCategory;\n      return matchesSearch && matchesCategory;\n    });\n\n    // Ordenar\n    filtered.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'name':\n          comparison = a.name.localeCompare(b.name);\n          break;\n        case 'usage':\n          comparison = a.usageCount - b.usageCount;\n          break;\n        case 'created':\n          comparison = a.createdAt.getTime() - b.createdAt.getTime();\n          break;\n        case 'category':\n          comparison = a.category.localeCompare(b.category);\n          break;\n        default:\n          comparison = a.usageCount - b.usageCount;\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n    return filtered;\n  }, [tagTemplates, searchTerm, filterCategory, sortBy, sortOrder]);\n\n  // Função para criar nova tag\n  const createNewTag = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Criação de tag desabilitada em desenvolvimento');\n      setNewTagName('');\n      setNewTagDescription('');\n      setNewTagColor('#3B82F6');\n      setNewTagCategory('custom');\n      setShowCreateModal(false);\n      setIsLoading(false);\n      return;\n    }\n\n    if (!newTagName.trim() || !user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      \n      const tagData = {\n        name: newTagName.toLowerCase().replace(/\\s+/g, '-'),\n        color: newTagColor,\n        category: newTagCategory,\n        description: newTagDescription || `Tag personalizada: ${newTagName}`,\n        is_default: false,\n        keywords: newTagName.split(' ').filter(word => word.length > 2)\n      };\n      \n      const response = await api.createTag(user.companyId, tagData);\n      \n      if (response.success) {\n        setNewTagName('');\n        setNewTagDescription('');\n        setNewTagColor('#3B82F6');\n        setNewTagCategory('custom');\n        setShowCreateModal(false);\n        \n        // Recarregar tags\n        loadTags();\n      }\n    } catch (err) {\n      console.error('Erro ao criar tag:', err);\n      setError('Não foi possível criar a tag. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Função para editar tag\n  const saveEditedTag = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Edição de tag desabilitada em desenvolvimento');\n      setEditingTag(null);\n      setNewTagName('');\n      setNewTagDescription('');\n      setNewTagColor('#3B82F6');\n      setNewTagCategory('custom');\n      setShowCreateModal(false);\n      setIsLoading(false);\n      return;\n    }\n\n    if (!editingTag || !newTagName.trim() || !user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      \n      const tagData = {\n        name: newTagName.toLowerCase().replace(/\\s+/g, '-'),\n        color: newTagColor,\n        category: newTagCategory,\n        description: newTagDescription,\n        keywords: newTagName.split(' ').filter(word => word.length > 2)\n      };\n      \n      const response = await api.updateTag(user.companyId, editingTag.id, tagData);\n      \n      if (response.success) {\n        setEditingTag(null);\n        setNewTagName('');\n        setNewTagDescription('');\n        setNewTagColor('#3B82F6');\n        setNewTagCategory('custom');\n        setShowCreateModal(false);\n        \n        // Recarregar tags\n        loadTags();\n      }\n    } catch (err) {\n      console.error('Erro ao editar tag:', err);\n      setError('Não foi possível editar a tag. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Função para deletar tag\n  const deleteTag = async (tagId: string) => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Exclusão de tag desabilitada em desenvolvimento');\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    if (window.confirm('Tem certeza que deseja excluir esta tag?')) {\n      try {\n        setIsLoading(true);\n        \n        const response = await api.deleteTag(user.companyId, tagId);\n        \n        if (response.success) {\n          // Recarregar tags\n          loadTags();\n        }\n      } catch (err) {\n        console.error('Erro ao deletar tag:', err);\n        setError('Não foi possível excluir a tag. Tente novamente mais tarde.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Função para duplicar tag\n  const duplicateTag = async (tag: TagTemplate) => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Duplicação de tag desabilitada em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      \n      const tagData = {\n        name: `${tag.name}-copy`,\n        color: tag.color,\n        category: tag.category,\n        description: tag.description ? `${tag.description} (cópia)` : `Cópia de: ${tag.name}`,\n        is_default: false,\n        keywords: tag.keywords\n      };\n      \n      const response = await api.createTag(user.companyId, tagData);\n      \n      if (response.success) {\n        // Recarregar tags\n        loadTags();\n      }\n    } catch (err) {\n      console.error('Erro ao duplicar tag:', err);\n      setError('Não foi possível duplicar a tag. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Função para toggle de seleção\n  const toggleTagSelection = (tagId: string) => {\n    setSelectedTags(prev => \n      prev.includes(tagId) \n        ? prev.filter(id => id !== tagId)\n        : [...prev, tagId]\n    );\n  };\n\n  // Função para selecionar todas as tags\n  const selectAllTags = () => {\n    setSelectedTags(filteredAndSortedTags.map(tag => tag.id));\n  };\n\n  // Função para limpar seleção\n  const clearSelection = () => {\n    setSelectedTags([]);\n  };\n\n  // Função para ações em lote\n  const bulkDeleteTags = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Exclusão em lote de tags desabilitada em desenvolvimento');\n      setSelectedTags([]);\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    if (window.confirm(`Tem certeza que deseja excluir ${selectedTags.length} tags selecionadas?`)) {\n      try {\n        setIsLoading(true);\n        \n        // Excluir tags uma por uma\n        for (const tagId of selectedTags) {\n          await api.deleteTag(user.companyId, tagId);\n        }\n        \n        setSelectedTags([]);\n        \n        // Recarregar tags\n        loadTags();\n      } catch (err) {\n        console.error('Erro ao excluir tags em lote:', err);\n        setError('Não foi possível excluir as tags selecionadas. Tente novamente mais tarde.');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  const getCategoryBadge = (category: TagTemplate['category']) => {\n    const styles = {\n      status: 'bg-green-100 text-green-800',\n      priority: 'bg-red-100 text-red-800',\n      department: 'bg-blue-100 text-blue-800',\n      custom: 'bg-purple-100 text-purple-800',\n      'ai-generated': 'bg-indigo-100 text-indigo-800'\n    };\n\n    const labels = {\n      status: 'Status',\n      priority: 'Prioridade',\n      department: 'Departamento',\n      custom: 'Personalizada',\n      'ai-generated': 'IA Gerada'\n    };\n\n    const icons = {\n      status: <CheckCircle className=\"h-3 w-3 mr-1\" />,\n      priority: <AlertTriangle className=\"h-3 w-3 mr-1\" />,\n      department: <Users className=\"h-3 w-3 mr-1\" />,\n      custom: <Star className=\"h-3 w-3 mr-1\" />,\n      'ai-generated': <Brain className=\"h-3 w-3 mr-1\" />\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${styles[category]}`}>\n        {icons[category]}\n        {labels[category]}\n      </span>\n    );\n  };\n\n  const getUsageIndicator = (usageCount: number) => {\n    if (usageCount === 0) return { color: 'text-gray-400', label: 'Não usada' };\n    if (usageCount < 10) return { color: 'text-yellow-600', label: 'Pouco usada' };\n    if (usageCount < 50) return { color: 'text-blue-600', label: 'Moderadamente usada' };\n    if (usageCount < 100) return { color: 'text-green-600', label: 'Muito usada' };\n    return { color: 'text-purple-600', label: 'Extremamente usada' };\n  };\n\n  return (\n    <div className=\"space-y-6 p-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Tag className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Gerenciamento de Tags</h2>\n            <p className=\"text-sm text-gray-600\">Organize e gerencie todas as tags do sistema</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => {\n              setEditingTag(null);\n              setNewTagName('');\n              setNewTagDescription('');\n              setNewTagColor('#3B82F6');\n              setNewTagCategory('custom');\n              setShowCreateModal(true);\n            }}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition-colors\"\n            style={{ backgroundColor: 'var(--color-primary)' }}\n          >\n            <Plus className=\"h-4 w-4\" />\n            <span>Nova Tag</span>\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Estatísticas Rápidas */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total de Tags</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{tagUsageStats.totalTags}</p>\n            </div>\n            <Tag className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Em Uso</p>\n              <p className=\"text-2xl font-bold text-green-600\">{tagUsageStats.activelyUsed}</p>\n            </div>\n            <Activity className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Geradas por IA</p>\n              <p className=\"text-2xl font-bold text-purple-600\">\n                {tagUsageStats.categoryDistribution['ai-generated'] || 0}\n              </p>\n            </div>\n            <Brain className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Mais Usada</p>\n              <p className=\"text-lg font-bold text-orange-600\">\n                {tagUsageStats.mostUsed[0]?.usageCount || 0} usos\n              </p>\n              <p className=\"text-xs text-gray-500\">{tagUsageStats.mostUsed[0]?.name}</p>\n            </div>\n            <Award className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filtros e Busca */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4 mb-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, descrição ou palavras-chave...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Categoria */}\n          <select\n            value={filterCategory}\n            onChange={(e) => setFilterCategory(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todas as Categorias</option>\n            <option value=\"status\">Status</option>\n            <option value=\"priority\">Prioridade</option>\n            <option value=\"department\">Departamento</option>\n            <option value=\"custom\">Personalizada</option>\n            <option value=\"ai-generated\">IA Gerada</option>\n          </select>\n\n          {/* Ordenação */}\n          <select\n            value={`${sortBy}-${sortOrder}`}\n            onChange={(e) => {\n              const [field, order] = e.target.value.split('-');\n              setSortBy(field as typeof sortBy);\n              setSortOrder(order as typeof sortOrder);\n            }}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"usage-desc\">Mais Usadas</option>\n            <option value=\"usage-asc\">Menos Usadas</option>\n            <option value=\"name-asc\">Nome A-Z</option>\n            <option value=\"name-desc\">Nome Z-A</option>\n            <option value=\"created-desc\">Mais Recentes</option>\n            <option value=\"created-asc\">Mais Antigas</option>\n            <option value=\"category-asc\">Categoria A-Z</option>\n          </select>\n        </div>\n\n        {/* Ações em Lote */}\n        {selectedTags.length > 0 && (\n          <div className=\"flex items-center justify-between p-3 bg-blue-50 rounded-lg\">\n            <span className=\"text-sm text-blue-800\">\n              {selectedTags.length} tag(s) selecionada(s)\n            </span>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={bulkDeleteTags}\n                className=\"px-3 py-1 bg-red-100 text-red-800 rounded-md text-sm hover:bg-red-200\"\n              >\n                Excluir Selecionadas\n              </button>\n              <button\n                onClick={clearSelection}\n                className=\"px-3 py-1 bg-gray-100 text-gray-800 rounded-md text-sm hover:bg-gray-200\"\n              >\n                Limpar Seleção\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Lista de Tags */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Tags ({filteredAndSortedTags.length})\n            </h3>\n            <div className=\"flex items-center space-x-2\">\n              <button\n                onClick={selectedTags.length === filteredAndSortedTags.length ? clearSelection : selectAllTags}\n                className=\"text-sm text-blue-600 hover:text-blue-700\"\n              >\n                {selectedTags.length === filteredAndSortedTags.length ? 'Desmarcar Todas' : 'Selecionar Todas'}\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {isLoading && filteredAndSortedTags.length === 0 ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {filteredAndSortedTags.map((tag) => {\n              const usageIndicator = getUsageIndicator(tag.usageCount);\n              \n              return (\n                <div key={tag.id} className=\"p-6 hover:bg-gray-50 transition-colors\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-4\">\n                      {/* Checkbox */}\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedTags.includes(tag.id)}\n                        onChange={() => toggleTagSelection(tag.id)}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                      />\n\n                      {/* Tag Preview */}\n                      <div className=\"flex items-center space-x-3\">\n                        <span \n                          className=\"inline-flex items-center gap-1 px-3 py-1.5 rounded-full text-sm font-medium\"\n                          style={{ \n                            backgroundColor: tag.color + '20', \n                            color: tag.color,\n                            border: `1px solid ${tag.color}40`\n                          }}\n                        >\n                          <Hash className=\"h-3 w-3\" />\n                          {tag.name}\n                        </span>\n                        \n                        {tag.aiSuggested && (\n                          <div className=\"flex items-center space-x-1 text-purple-600\">\n                            <Brain className=\"h-3 w-3\" />\n                            <span className=\"text-xs\">IA</span>\n                          </div>\n                        )}\n                      </div>\n                      \n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2 mb-1\">\n                          <h4 className=\"text-sm font-medium text-gray-900\">{tag.name}</h4>\n                          {getCategoryBadge(tag.category)}\n                          {tag.isDefault && (\n                            <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-gray-100 text-gray-800\">\n                              <Shield className=\"h-3 w-3 mr-1\" />\n                              Padrão\n                            </span>\n                          )}\n                        </div>\n                        \n                        {tag.description && (\n                          <p className=\"text-sm text-gray-600 mb-2\">{tag.description}</p>\n                        )}\n                        \n                        <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                          <span className=\"flex items-center space-x-1\">\n                            <BarChart3 className=\"h-3 w-3\" />\n                            <span className={usageIndicator.color}>\n                              {tag.usageCount} usos ({usageIndicator.label})\n                            </span>\n                          </span>\n                          <span className=\"flex items-center space-x-1\">\n                            <Clock className=\"h-3 w-3\" />\n                            <span>\n                              Criada em {tag.createdAt.toLocaleDateString('pt-BR')}\n                            </span>\n                          </span>\n                          <span className=\"flex items-center space-x-1\">\n                            <Users className=\"h-3 w-3\" />\n                            <span>por {tag.createdBy}</span>\n                          </span>\n                          {tag.lastUsed && (\n                            <span className=\"flex items-center space-x-1\">\n                              <Activity className=\"h-3 w-3\" />\n                              <span>\n                                Última vez: {tag.lastUsed.toLocaleTimeString('pt-BR', { \n                                  hour: '2-digit', \n                                  minute: '2-digit' \n                                })}\n                              </span>\n                            </span>\n                          )}\n                        </div>\n\n                        {/* Keywords */}\n                        {tag.keywords && tag.keywords.length > 0 && (\n                          <div className=\"mt-2\">\n                            <span className=\"text-xs text-gray-500\">Palavras-chave: </span>\n                            {tag.keywords.map((keyword, index) => (\n                              <span key={index} className=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs bg-gray-100 text-gray-700 mr-1\">\n                                {keyword}\n                              </span>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      {/* Indicador de Cor */}\n                      <div \n                        className=\"w-6 h-6 rounded-full border-2 border-gray-200\"\n                        style={{ backgroundColor: tag.color }}\n                        title={`Cor: ${tag.color}`}\n                      />\n                      \n                      {/* Ações */}\n                      <div className=\"flex items-center space-x-1\">\n                        <button \n                          onClick={() => {\n                            setEditingTag(tag);\n                            setNewTagName(tag.name);\n                            setNewTagColor(tag.color);\n                            setNewTagCategory(tag.category);\n                            setNewTagDescription(tag.description || '');\n                            setShowCreateModal(true);\n                          }}\n                          className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\" \n                          title=\"Editar\"\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        <button \n                          onClick={() => duplicateTag(tag)}\n                          className=\"p-2 text-green-600 hover:bg-green-50 rounded-lg\" \n                          title=\"Duplicar\"\n                        >\n                          <Copy className=\"h-4 w-4\" />\n                        </button>\n                        {!tag.isDefault && (\n                          <button \n                            onClick={() => deleteTag(tag.id)}\n                            className=\"p-2 text-red-600 hover:bg-red-50 rounded-lg\" \n                            title=\"Excluir\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n\n        {!isLoading && filteredAndSortedTags.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Tag className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma tag encontrada</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterCategory !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Comece criando sua primeira tag'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Tags Mais Usadas */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Award className=\"h-5 w-5 mr-2 text-yellow-500\" />\n            Tags Mais Usadas\n          </h3>\n          <div className=\"space-y-3\">\n            {tagUsageStats.mostUsed.map((tag, index) => (\n              <div key={tag.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                    index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : index === 2 ? 'bg-orange-500' : 'bg-blue-500'\n                  }`}>\n                    {index + 1}\n                  </div>\n                  <span \n                    className=\"inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium\"\n                    style={{ \n                      backgroundColor: tag.color + '20', \n                      color: tag.color,\n                      border: `1px solid ${tag.color}40`\n                    }}\n                  >\n                    <Hash className=\"h-2 w-2\" />\n                    {tag.name}\n                  </span>\n                </div>\n                <span className=\"text-sm font-medium text-gray-900\">{tag.usageCount} usos</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Sparkles className=\"h-5 w-5 mr-2 text-blue-500\" />\n            Tags Recentes\n          </h3>\n          <div className=\"space-y-3\">\n            {tagUsageStats.recentlyCreated.map((tag) => (\n              <div key={tag.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <span \n                    className=\"inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium\"\n                    style={{ \n                      backgroundColor: tag.color + '20', \n                      color: tag.color,\n                      border: `1px solid ${tag.color}40`\n                    }}\n                  >\n                    <Hash className=\"h-2 w-2\" />\n                    {tag.name}\n                  </span>\n                  {tag.aiSuggested && (\n                    <Brain className=\"h-3 w-3 text-purple-600\" title=\"Sugerida pela IA\" />\n                  )}\n                </div>\n                <span className=\"text-xs text-gray-500\">\n                  {tag.createdAt.toLocaleDateString('pt-BR')}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Modal de Criação/Edição */}\n      {showCreateModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                {editingTag ? 'Editar Tag' : 'Nova Tag'}\n              </h3>\n              <button\n                onClick={() => {\n                  setShowCreateModal(false);\n                  setEditingTag(null);\n                  setNewTagName('');\n                  setNewTagDescription('');\n                  setNewTagColor('#3B82F6');\n                  setNewTagCategory('custom');\n                }}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-5 w-5\" />\n              </button>\n            </div>\n\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Nome da Tag\n                </label>\n                <input\n                  type=\"text\"\n                  value={newTagName}\n                  onChange={(e) => setNewTagName(e.target.value)}\n                  placeholder=\"Ex: cliente-vip\"\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Descrição\n                </label>\n                <textarea\n                  value={newTagDescription}\n                  onChange={(e) => setNewTagDescription(e.target.value)}\n                  placeholder=\"Descrição opcional da tag...\"\n                  rows={2}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Categoria\n                </label>\n                <select\n                  value={newTagCategory}\n                  onChange={(e) => setNewTagCategory(e.target.value as TagTemplate['category'])}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500\"\n                >\n                  <option value=\"custom\">Personalizada</option>\n                  <option value=\"status\">Status</option>\n                  <option value=\"priority\">Prioridade</option>\n                  <option value=\"department\">Departamento</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Cor\n                </label>\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"color\"\n                    value={newTagColor}\n                    onChange={(e) => setNewTagColor(e.target.value)}\n                    className=\"w-12 h-10 border border-gray-300 rounded cursor-pointer\"\n                  />\n                  <div className=\"grid grid-cols-6 gap-1\">\n                    {tagColors.map((color) => (\n                      <button\n                        key={color}\n                        onClick={() => setNewTagColor(color)}\n                        className={`w-6 h-6 rounded border-2 ${\n                          newTagColor === color ? 'border-gray-800' : 'border-gray-300'\n                        }`}\n                        style={{ backgroundColor: color }}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              {/* Preview */}\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Preview\n                </label>\n                <span \n                  className=\"inline-flex items-center gap-1 px-3 py-1.5 rounded-full text-sm font-medium\"\n                  style={{ \n                    backgroundColor: newTagColor + '20', \n                    color: newTagColor,\n                    border: `1px solid ${newTagColor}40`\n                  }}\n                >\n                  <Hash className=\"h-3 w-3\" />\n                  {newTagName || 'nome-da-tag'}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"flex items-center justify-end space-x-3 mt-6\">\n              <button\n                onClick={() => {\n                  setShowCreateModal(false);\n                  setEditingTag(null);\n                  setNewTagName('');\n                  setNewTagDescription('');\n                  setNewTagColor('#3B82F6');\n                  setNewTagCategory('custom');\n                }}\n                className=\"px-4 py-2 text-gray-700 border border-gray-300 rounded-md hover:bg-gray-50\"\n              >\n                Cancelar\n              </button>\n              <button\n                onClick={editingTag ? saveEditedTag : createNewTag}\n                disabled={!newTagName.trim() || isLoading}\n                className=\"px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center space-x-2\"\n                style={{ backgroundColor: 'var(--color-primary)' }}\n              >\n                {isLoading ? (\n                  <>\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                    <span>Processando...</span>\n                  </>\n                ) : (\n                  <span>{editingTag ? 'Salvar' : 'Criar Tag'}</span>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TagsManagement;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Users, \n  Plus, \n  Search, \n  Filter, \n  Edit, \n  Trash2, \n  Eye,\n  UserPlus,\n  UserCheck,\n  UserX,\n  Shield,\n  Clock,\n  Mail,\n  Phone,\n  MapPin,\n  Calendar,\n  Activity,\n  Settings,\n  MoreVertical,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Star,\n  Award,\n  Target,\n  TrendingUp,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'supervisor' | 'agent';\n  status: 'active' | 'inactive';\n  avatar?: string;\n  department?: string;\n  phone?: string;\n  lastLogin?: string;\n  createdAt: string;\n  permissions: string[];\n  stats?: {\n    conversationsToday: number;\n    avgResponseTime: number;\n    satisfaction: number;\n    totalConversations: number;\n  };\n}\n\nconst UserManagement: React.FC = () => {\n  const { user, hasPermission } = useAuthStore();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\n  const [users, setUsers] = useState<User[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Verificar permissões\n  if (!hasPermission('manage_users')) {\n    return (\n      <div className=\"text-center py-12\">\n        <Shield className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Acesso Restrito</h3>\n        <p className=\"text-gray-500\">\n          Você não tem permissão para gerenciar usuários.\n        </p>\n      </div>\n    );\n  }\n\n  // Carregar usuários ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadUsers();\n    }\n  }, [user?.companyId]);\n\n  // Carregar usuários da API\n  const loadUsers = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de usuários desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getUsers(user.companyId);\n      \n      if (response.success && response.data) {\n        setUsers(response.data.map((userData: any) => ({\n          id: userData.id,\n          name: userData.name,\n          email: userData.email,\n          role: userData.role,\n          status: userData.status,\n          avatar: userData.avatar_url,\n          department: userData.metadata?.department,\n          phone: userData.metadata?.phone,\n          lastLogin: userData.last_login ? new Date(userData.last_login).toLocaleString('pt-BR') : 'Nunca',\n          createdAt: userData.created_at,\n          permissions: userData.permissions || [],\n          stats: userData.stats || {\n            conversationsToday: 0,\n            avgResponseTime: 0,\n            satisfaction: 0,\n            totalConversations: 0\n          }\n        })));\n      }\n    } catch (err) {\n      console.error('Erro ao carregar usuários:', err);\n      setError('Não foi possível carregar os usuários. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getRoleBadge = (role: string) => {\n    const styles = {\n      admin: 'bg-purple-100 text-purple-800',\n      supervisor: 'bg-blue-100 text-blue-800',\n      agent: 'bg-green-100 text-green-800'\n    };\n\n    const labels = {\n      admin: 'Administrador',\n      supervisor: 'Supervisor',\n      agent: 'Agente'\n    };\n\n    const icons = {\n      admin: <Shield className=\"h-3 w-3 mr-1\" />,\n      supervisor: <Star className=\"h-3 w-3 mr-1\" />,\n      agent: <UserCheck className=\"h-3 w-3 mr-1\" />\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${styles[role as keyof typeof styles]}`}>\n        {icons[role as keyof typeof icons]}\n        {labels[role as keyof typeof labels]}\n      </span>\n    );\n  };\n\n  const getStatusBadge = (status: string) => {\n    const styles = {\n      active: 'bg-green-100 text-green-800',\n      inactive: 'bg-gray-100 text-gray-800'\n    };\n\n    const labels = {\n      active: 'Ativo',\n      inactive: 'Inativo'\n    };\n\n    const icons = {\n      active: <CheckCircle className=\"h-3 w-3 mr-1\" />,\n      inactive: <XCircle className=\"h-3 w-3 mr-1\" />\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${styles[status as keyof typeof styles]}`}>\n        {icons[status as keyof typeof icons]}\n        {labels[status as keyof typeof labels]}\n      </span>\n    );\n  };\n\n  const getPerformanceColor = (value: number, type: string) => {\n    if (type === 'satisfaction') {\n      if (value >= 4.5) return 'text-green-600';\n      if (value >= 4.0) return 'text-yellow-600';\n      return 'text-red-600';\n    }\n    if (type === 'responseTime') {\n      if (value <= 120) return 'text-green-600';\n      if (value <= 180) return 'text-yellow-600';\n      return 'text-red-600';\n    }\n    return 'text-gray-600';\n  };\n\n  // Filtrar usuários\n  const filteredUsers = users.filter(u => {\n    const matchesSearch = u.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         u.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         (u.department && u.department.toLowerCase().includes(searchTerm.toLowerCase()));\n    const matchesRole = filterRole === 'all' || u.role === filterRole;\n    const matchesStatus = filterStatus === 'all' || u.status === filterStatus;\n    return matchesSearch && matchesRole && matchesStatus;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Users className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Gerenciamento de Usuários</h2>\n            <p className=\"text-sm text-gray-600\">Gerencie a equipe da sua empresa</p>\n          </div>\n        </div>\n        <button\n          onClick={() => setShowAddModal(true)}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition-colors\"\n          style={{ backgroundColor: 'var(--color-primary)' }}\n        >\n          <Plus className=\"h-4 w-4\" />\n          <span>Novo Usuário</span>\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, email ou departamento...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Role */}\n          <select\n            value={filterRole}\n            onChange={(e) => setFilterRole(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Cargos</option>\n            <option value=\"admin\">Administrador</option>\n            <option value=\"supervisor\">Supervisor</option>\n            <option value=\"agent\">Agente</option>\n          </select>\n\n          {/* Filtro de Status */}\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"active\">Ativo</option>\n            <option value=\"inactive\">Inativo</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Estatísticas Rápidas */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total de Usuários</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{users.length}</p>\n            </div>\n            <Users className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Usuários Ativos</p>\n              <p className=\"text-2xl font-bold text-green-600\">\n                {users.filter(u => u.status === 'active').length}\n              </p>\n            </div>\n            <UserCheck className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Agentes</p>\n              <p className=\"text-2xl font-bold text-purple-600\">\n                {users.filter(u => u.role === 'agent' && u.status === 'active').length}\n              </p>\n            </div>\n            <Activity className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Administradores</p>\n              <p className=\"text-2xl font-bold text-orange-600\">\n                {users.filter(u => u.role === 'admin').length}\n              </p>\n            </div>\n            <Shield className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Lista de Usuários */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Usuário\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cargo\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Departamento\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Performance Hoje\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Último Acesso\n                  </th>\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Ações\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredUsers.map((userItem) => (\n                  <tr key={userItem.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        {userItem.avatar ? (\n                          <img\n                            src={userItem.avatar}\n                            alt={userItem.name}\n                            className=\"w-10 h-10 rounded-full\"\n                          />\n                        ) : (\n                          <div className=\"w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center\">\n                            <Users className=\"h-5 w-5 text-gray-600\" />\n                          </div>\n                        )}\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-gray-900\">{userItem.name}</div>\n                          <div className=\"text-sm text-gray-500\">{userItem.email}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getRoleBadge(userItem.role)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getStatusBadge(userItem.status)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{userItem.department || 'N/A'}</div>\n                      <div className=\"text-sm text-gray-500\">{userItem.phone || 'N/A'}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {userItem.role === 'agent' && userItem.status === 'active' && userItem.stats ? (\n                        <div className=\"space-y-1\">\n                          <div className=\"flex items-center space-x-2\">\n                            <Target className=\"h-3 w-3 text-gray-400\" />\n                            <span className=\"text-xs text-gray-600\">\n                              {userItem.stats.conversationsToday} conversas\n                            </span>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <Clock className=\"h-3 w-3 text-gray-400\" />\n                            <span className={`text-xs ${getPerformanceColor(userItem.stats.avgResponseTime, 'responseTime')}`}>\n                              {userItem.stats.avgResponseTime}s resp.\n                            </span>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <Star className=\"h-3 w-3 text-gray-400\" />\n                            <span className={`text-xs ${getPerformanceColor(userItem.stats.satisfaction, 'satisfaction')}`}>\n                              {userItem.stats.satisfaction}/5\n                            </span>\n                          </div>\n                        </div>\n                      ) : (\n                        <span className=\"text-xs text-gray-500\">\n                          {userItem.role === 'admin' ? 'Administração' : 'Sem dados'}\n                        </span>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1\">\n                        <Clock className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-500\">{userItem.lastLogin}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex items-center justify-end space-x-2\">\n                        <button \n                          className=\"text-blue-600 hover:text-blue-900 transition-colors\" \n                          title=\"Visualizar\"\n                        >\n                          <Eye className=\"h-4 w-4\" />\n                        </button>\n                        <button \n                          className=\"text-green-600 hover:text-green-900 transition-colors\" \n                          title=\"Editar\"\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        {userItem.id !== user?.id && (\n                          <button \n                            className=\"text-red-600 hover:text-red-900 transition-colors\" \n                            title=\"Excluir\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </button>\n                        )}\n                        <button \n                          className=\"text-gray-400 hover:text-gray-600 transition-colors\" \n                          title=\"Mais opções\"\n                        >\n                          <MoreVertical className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredUsers.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Users className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum usuário encontrado</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterRole !== 'all' || filterStatus !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Comece adicionando usuários à sua equipe'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Performance da Equipe */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n          <Award className=\"h-5 w-5 mr-2 text-yellow-500\" />\n          Performance da Equipe Hoje\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-blue-600\">\n              {users\n                .filter(u => u.role === 'agent' && u.status === 'active' && u.stats)\n                .reduce((sum, u) => sum + (u.stats?.conversationsToday || 0), 0)}\n            </div>\n            <div className=\"text-sm text-gray-600\">Total de Conversas</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-green-600\">\n              {Math.round(\n                users\n                  .filter(u => u.role === 'agent' && u.status === 'active' && u.stats && u.stats.avgResponseTime > 0)\n                  .reduce((sum, u, _, arr) => sum + (u.stats?.avgResponseTime || 0) / (arr.length || 1), 0)\n              )}s\n            </div>\n            <div className=\"text-sm text-gray-600\">Tempo Médio Resposta</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-3xl font-bold text-purple-600\">\n              {(users\n                .filter(u => u.role === 'agent' && u.status === 'active' && u.stats && u.stats.satisfaction > 0)\n                .reduce((sum, u, _, arr) => sum + (u.stats?.satisfaction || 0) / (arr.length || 1), 0)\n              ).toFixed(1)}\n            </div>\n            <div className=\"text-sm text-gray-600\">Satisfação Média</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserManagement;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Send, \n  Plus, \n  Search, \n  Filter, \n  Edit, \n  Trash2, \n  Eye,\n  Play,\n  Pause,\n  Calendar,\n  Users,\n  MessageCircle,\n  TrendingUp,\n  CheckCircle,\n  XCircle,\n  Clock,\n  AlertTriangle,\n  Target,\n  BarChart3,\n  FileText,\n  Smartphone,\n  Globe,\n  Star,\n  Zap,\n  Shield,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface Campaign {\n  id: string;\n  name: string;\n  description: string;\n  status: 'draft' | 'scheduled' | 'running' | 'paused' | 'completed' | 'cancelled';\n  type: 'promotional' | 'welcome' | 'retargeting' | 'survey' | 'product_launch';\n  channel: 'whatsapp' | 'email' | 'sms';\n  createdAt: string;\n  scheduledAt?: string;\n  startedAt?: string;\n  completedAt?: string;\n  createdBy: string;\n  template: {\n    subject: string;\n    content: string;\n  };\n  targetAudience: {\n    total: number;\n    segments: string[];\n  };\n  stats: {\n    sent: number;\n    delivered: number;\n    read: number;\n    clicked: number;\n    converted: number;\n    revenue: number;\n  };\n}\n\nconst CampaignManagement: React.FC = () => {\n  const { user, hasPermission } = useAuthStore();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterType, setFilterType] = useState('all');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Verificar permissões\n  if (!hasPermission('manage_campaigns')) {\n    return (\n      <div className=\"text-center py-12\">\n        <Shield className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Acesso Restrito</h3>\n        <p className=\"text-gray-500\">\n          Você não tem permissão para gerenciar campanhas.\n        </p>\n      </div>\n    );\n  }\n\n  // Carregar campanhas ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadCampaigns();\n    }\n  }, [user?.companyId]);\n\n  // Carregar campanhas da API\n  const loadCampaigns = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de campanhas desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getCampaigns(user.companyId);\n      \n      if (response.success && response.data) {\n        setCampaigns(response.data);\n      }\n    } catch (err) {\n      console.error('Erro ao carregar campanhas:', err);\n      setError('Não foi possível carregar as campanhas. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    const styles = {\n      running: 'bg-green-100 text-green-800',\n      active: 'bg-blue-100 text-blue-800',\n      paused: 'bg-yellow-100 text-yellow-800',\n      completed: 'bg-gray-100 text-gray-800',\n      scheduled: 'bg-purple-100 text-purple-800',\n      cancelled: 'bg-red-100 text-red-800',\n      draft: 'bg-gray-100 text-gray-800'\n    };\n\n    const labels = {\n      running: 'Em Execução',\n      active: 'Ativa',\n      paused: 'Pausada',\n      completed: 'Concluída',\n      scheduled: 'Agendada',\n      cancelled: 'Cancelada',\n      draft: 'Rascunho'\n    };\n\n    const icons = {\n      running: <Play className=\"h-3 w-3 mr-1\" />,\n      active: <CheckCircle className=\"h-3 w-3 mr-1\" />,\n      paused: <Pause className=\"h-3 w-3 mr-1\" />,\n      completed: <CheckCircle className=\"h-3 w-3 mr-1\" />,\n      scheduled: <Clock className=\"h-3 w-3 mr-1\" />,\n      cancelled: <XCircle className=\"h-3 w-3 mr-1\" />,\n      draft: <FileText className=\"h-3 w-3 mr-1\" />\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${styles[status as keyof typeof styles]}`}>\n        {icons[status as keyof typeof icons]}\n        {labels[status as keyof typeof labels]}\n      </span>\n    );\n  };\n\n  const getTypeBadge = (type: string) => {\n    const styles = {\n      promotional: 'bg-orange-100 text-orange-800',\n      welcome: 'bg-green-100 text-green-800',\n      retargeting: 'bg-blue-100 text-blue-800',\n      survey: 'bg-purple-100 text-purple-800',\n      product_launch: 'bg-pink-100 text-pink-800'\n    };\n\n    const labels = {\n      promotional: 'Promocional',\n      welcome: 'Boas-vindas',\n      retargeting: 'Retargeting',\n      survey: 'Pesquisa',\n      product_launch: 'Lançamento'\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${styles[type as keyof typeof styles]}`}>\n        {labels[type as keyof typeof labels]}\n      </span>\n    );\n  };\n\n  const getChannelIcon = (channel: string) => {\n    switch (channel) {\n      case 'whatsapp': return <Smartphone className=\"h-4 w-4 text-green-600\" />;\n      case 'email': return <MessageCircle className=\"h-4 w-4 text-blue-600\" />;\n      case 'sms': return <MessageCircle className=\"h-4 w-4 text-purple-600\" />;\n      default: return <Globe className=\"h-4 w-4 text-gray-600\" />;\n    }\n  };\n\n  const calculateConversionRate = (converted: number, sent: number) => {\n    if (sent === 0) return 0;\n    return ((converted / sent) * 100).toFixed(1);\n  };\n\n  const calculateOpenRate = (read: number, delivered: number) => {\n    if (delivered === 0) return 0;\n    return ((read / delivered) * 100).toFixed(1);\n  };\n\n  const calculateClickRate = (clicked: number, read: number) => {\n    if (read === 0) return 0;\n    return ((clicked / read) * 100).toFixed(1);\n  };\n\n  // Filtrar campanhas\n  const filteredCampaigns = campaigns.filter(campaign => {\n    const matchesSearch = campaign.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         campaign.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = filterStatus === 'all' || campaign.status === filterStatus;\n    const matchesType = filterType === 'all' || campaign.type === filterType;\n    return matchesSearch && matchesStatus && matchesType;\n  });\n\n  // Estatísticas gerais\n  const totalStats = campaigns.reduce((acc, campaign) => ({\n    sent: acc.sent + campaign.stats.sent,\n    delivered: acc.delivered + campaign.stats.delivered,\n    read: acc.read + campaign.stats.read,\n    clicked: acc.clicked + campaign.stats.clicked,\n    converted: acc.converted + campaign.stats.converted,\n    revenue: acc.revenue + campaign.stats.revenue\n  }), { sent: 0, delivered: 0, read: 0, clicked: 0, converted: 0, revenue: 0 });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Send className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Gerenciamento de Campanhas</h2>\n            <p className=\"text-sm text-gray-600\">Crie e gerencie campanhas de marketing</p>\n          </div>\n        </div>\n        <button\n          onClick={() => setShowCreateModal(true)}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition-colors\"\n          style={{ backgroundColor: 'var(--color-primary)' }}\n        >\n          <Plus className=\"h-4 w-4\" />\n          <span>Nova Campanha</span>\n        </button>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Estatísticas Gerais */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Enviadas</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{totalStats.sent.toLocaleString()}</p>\n            </div>\n            <Send className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Entregues</p>\n              <p className=\"text-2xl font-bold text-green-600\">{totalStats.delivered.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {calculateOpenRate(totalStats.delivered, totalStats.sent)}% taxa entrega\n              </p>\n            </div>\n            <CheckCircle className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Lidas</p>\n              <p className=\"text-2xl font-bold text-purple-600\">{totalStats.read.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {calculateOpenRate(totalStats.read, totalStats.delivered)}% taxa abertura\n              </p>\n            </div>\n            <Eye className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Cliques</p>\n              <p className=\"text-2xl font-bold text-orange-600\">{totalStats.clicked.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {calculateClickRate(totalStats.clicked, totalStats.read)}% taxa clique\n              </p>\n            </div>\n            <Target className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Conversões</p>\n              <p className=\"text-2xl font-bold text-red-600\">{totalStats.converted.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {calculateConversionRate(totalStats.converted, totalStats.sent)}% conversão\n              </p>\n            </div>\n            <TrendingUp className=\"h-8 w-8 text-red-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Receita</p>\n              <p className=\"text-2xl font-bold text-green-600\">\n                R$ {(totalStats.revenue / 1000).toFixed(0)}K\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                R$ {(totalStats.revenue / totalStats.converted || 0).toFixed(0)} por conversão\n              </p>\n            </div>\n            <BarChart3 className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar campanhas...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Status */}\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"running\">Em Execução</option>\n            <option value=\"active\">Ativa</option>\n            <option value=\"paused\">Pausada</option>\n            <option value=\"completed\">Concluída</option>\n            <option value=\"scheduled\">Agendada</option>\n            <option value=\"draft\">Rascunho</option>\n          </select>\n\n          {/* Filtro de Tipo */}\n          <select\n            value={filterType}\n            onChange={(e) => setFilterType(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Tipos</option>\n            <option value=\"promotional\">Promocional</option>\n            <option value=\"welcome\">Boas-vindas</option>\n            <option value=\"retargeting\">Retargeting</option>\n            <option value=\"survey\">Pesquisa</option>\n            <option value=\"product_launch\">Lançamento</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Lista de Campanhas */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Campanha\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Tipo\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Performance\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Receita\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Criada em\n                  </th>\n                  <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Ações\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredCampaigns.map((campaign) => (\n                  <tr key={campaign.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        {getChannelIcon(campaign.channel)}\n                        <div className=\"ml-3\">\n                          <div className=\"text-sm font-medium text-gray-900\">{campaign.name}</div>\n                          <div className=\"text-sm text-gray-500\">{campaign.description}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getStatusBadge(campaign.status)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getTypeBadge(campaign.type)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Send className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-600\">\n                            {campaign.stats.sent.toLocaleString()} enviadas\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Eye className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-600\">\n                            {calculateOpenRate(campaign.stats.read, campaign.stats.delivered)}% abertura\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Target className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-600\">\n                            {calculateConversionRate(campaign.stats.converted, campaign.stats.sent)}% conversão\n                          </span>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        R$ {campaign.stats.revenue.toLocaleString()}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {campaign.stats.converted} conversões\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1\">\n                        <Calendar className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-500\">\n                          {new Date(campaign.createdAt).toLocaleDateString('pt-BR')}\n                        </span>\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        por {campaign.createdBy}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex items-center justify-end space-x-2\">\n                        <button \n                          className=\"text-blue-600 hover:text-blue-900 transition-colors\" \n                          title=\"Visualizar\"\n                        >\n                          <Eye className=\"h-4 w-4\" />\n                        </button>\n                        <button \n                          className=\"text-green-600 hover:text-green-900 transition-colors\" \n                          title=\"Editar\"\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        {campaign.status === 'running' ? (\n                          <button \n                            className=\"text-yellow-600 hover:text-yellow-900 transition-colors\" \n                            title=\"Pausar\"\n                          >\n                            <Pause className=\"h-4 w-4\" />\n                          </button>\n                        ) : campaign.status === 'paused' ? (\n                          <button \n                            className=\"text-green-600 hover:text-green-900 transition-colors\" \n                            title=\"Retomar\"\n                          >\n                            <Play className=\"h-4 w-4\" />\n                          </button>\n                        ) : null}\n                        <button \n                          className=\"text-red-600 hover:text-red-900 transition-colors\" \n                          title=\"Excluir\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredCampaigns.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Send className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma campanha encontrada</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterStatus !== 'all' || filterType !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Comece criando sua primeira campanha'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Campanhas em Destaque */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Melhor Performance */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Star className=\"h-5 w-5 mr-2 text-yellow-500\" />\n            Melhor Performance\n          </h3>\n          {campaigns\n            .filter(c => c.stats.sent > 0)\n            .sort((a, b) => \n              (b.stats.converted / b.stats.sent) - (a.stats.converted / a.stats.sent)\n            )\n            .slice(0, 3)\n            .map((campaign, index) => (\n              <div key={campaign.id} className=\"flex items-center justify-between py-3 border-b border-gray-100 last:border-b-0\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                    index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : 'bg-orange-500'\n                  }`}>\n                    {index + 1}\n                  </div>\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900\">{campaign.name}</div>\n                    <div className=\"text-xs text-gray-500\">\n                      {calculateConversionRate(campaign.stats.converted, campaign.stats.sent)}% conversão\n                    </div>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <div className=\"text-sm font-medium text-gray-900\">\n                    R$ {campaign.stats.revenue.toLocaleString()}\n                  </div>\n                  <div className=\"text-xs text-gray-500\">\n                    {campaign.stats.converted} conversões\n                  </div>\n                </div>\n              </div>\n            ))}\n        </div>\n\n        {/* Campanhas Recentes */}\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n            <Clock className=\"h-5 w-5 mr-2 text-blue-500\" />\n            Campanhas Recentes\n          </h3>\n          {campaigns\n            .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())\n            .slice(0, 3)\n            .map((campaign) => (\n              <div key={campaign.id} className=\"flex items-center justify-between py-3 border-b border-gray-100 last:border-b-0\">\n                <div className=\"flex items-center space-x-3\">\n                  {getChannelIcon(campaign.channel)}\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-900\">{campaign.name}</div>\n                    <div className=\"text-xs text-gray-500\">\n                      {new Date(campaign.createdAt).toLocaleDateString('pt-BR')}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  {getStatusBadge(campaign.status)}\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CampaignManagement;","import React, { useState, useEffect, useMemo } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Users, \n  Clock, \n  Target, \n  Zap, \n  Settings, \n  Play, \n  Pause, \n  RotateCcw,\n  AlertTriangle,\n  CheckCircle,\n  TrendingUp,\n  Activity,\n  UserCheck,\n  MessageCircle,\n  Timer,\n  Award,\n  Filter,\n  Search,\n  MoreVertical,\n  ArrowRight,\n  Star,\n  Shield,\n  Brain,\n  Sparkles,\n  Gauge,\n  Bell,\n  Eye,\n  RefreshCw,\n  BarChart3,\n  TrendingDown,\n  Calendar,\n  Phone,\n  Mail,\n  MapPin,\n  Tag,\n  Hash,\n  Layers,\n  GitBranch,\n  Shuffle,\n  FastForward,\n  SkipForward,\n  ArrowRightLeft,\n  Bot,\n  Cpu,\n  Network,\n  Send,\n  UserPlus,\n  X,\n  Plus,\n  Edit,\n  Trash2,\n  Sliders,\n  Flame,\n  Lightbulb,\n  Radar,\n  Crosshair,\n  Workflow,\n  Magnet,\n  Layers3,\n  ScanLine,\n  Zap as ZapIcon,\n  Wand2,\n  MousePointer2,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface QueueItem {\n  id: string;\n  customerName: string;\n  customerPhone: string;\n  customerEmail?: string;\n  customerAvatar?: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  department: string;\n  category: string;\n  source: 'whatsapp' | 'webchat' | 'telegram' | 'phone' | 'email';\n  waitTime: number;\n  estimatedWaitTime: number;\n  aiPredictedWaitTime?: number;\n  assignedAgent?: string;\n  status: 'waiting' | 'assigned' | 'in_progress' | 'escalated' | 'transferred';\n  tags: string[];\n  customerValue: 'bronze' | 'silver' | 'gold' | 'platinum';\n  lastInteraction?: Date;\n  urgencyScore: number;\n  satisfactionHistory: number;\n  conversationPreview: string;\n  metadata: Record<string, any>;\n  createdAt: Date;\n  transferHistory?: TransferRecord[];\n  aiInsights?: {\n    sentiment: 'positive' | 'neutral' | 'negative';\n    complexity: 'low' | 'medium' | 'high';\n    suggestedAgent?: string;\n    estimatedDuration: number;\n    keywords: string[];\n    customerIntent: string;\n    riskScore: number;\n  };\n}\n\ninterface TransferRecord {\n  id: string;\n  fromAgent: string;\n  toAgent: string;\n  reason: string;\n  timestamp: Date;\n  notes?: string;\n}\n\ninterface Agent {\n  id: string;\n  name: string;\n  email: string;\n  avatar?: string;\n  status: 'online' | 'busy' | 'away' | 'offline';\n  department: string;\n  specialties: string[];\n  currentLoad: number;\n  maxLoad: number;\n  avgResponseTime: number;\n  satisfactionScore: number;\n  efficiency: number;\n  languages: string[];\n  workingHours: {\n    start: string;\n    end: string;\n    timezone: string;\n  };\n  skills: {\n    [key: string]: number;\n  };\n  tags: string[];\n}\n\ninterface SmartFilter {\n  id: string;\n  name: string;\n  icon: React.ReactNode;\n  active: boolean;\n  count: number;\n  color: string;\n  description: string;\n  condition: (item: QueueItem) => boolean;\n  priority: number;\n}\n\ninterface RealTimeMetrics {\n  totalInQueue: number;\n  avgWaitTime: number;\n  criticalItems: number;\n  agentsAvailable: number;\n  throughputPerHour: number;\n  satisfactionTrend: number;\n  escalationRate: number;\n  aiAccuracy: number;\n}\n\nconst QueueManagement: React.FC = () => {\n  const { user, hasPermission } = useAuthStore();\n  const [activeTab, setActiveTab] = useState('queue');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFilters, setSelectedFilters] = useState<string[]>([]);\n  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n  const [realTimeMode, setRealTimeMode] = useState(true);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [refreshInterval, setRefreshInterval] = useState(5); // segundos\n  const [queueItems, setQueueItems] = useState<QueueItem[]>([]);\n  const [agents, setAgents] = useState<Agent[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Verificar permissões\n  if (!hasPermission('manage_users')) {\n    return (\n      <div className=\"text-center py-12\">\n        <Shield className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Acesso Restrito</h3>\n        <p className=\"text-gray-500\">\n          Você não tem permissão para acessar a fila de atendimento.\n        </p>\n      </div>\n    );\n  }\n\n  // Carregar dados da fila e agentes ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadQueueData();\n      loadAgents();\n    }\n  }, [user?.companyId]);\n\n  // Auto-refresh em tempo real\n  useEffect(() => {\n    if (!autoRefresh || !realTimeMode) return;\n\n    const interval = setInterval(() => {\n      if (user?.companyId) {\n        loadQueueData();\n        loadAgents();\n      }\n    }, refreshInterval * 1000);\n\n    return () => clearInterval(interval);\n  }, [autoRefresh, realTimeMode, refreshInterval, user?.companyId]);\n\n  // Carregar dados da fila da API\n  const loadQueueData = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de dados da fila desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Aqui seria a chamada real para a API\n      // const response = await api.getQueueItems(user.companyId);\n      \n      // Simulação de dados para demonstração\n      // Em produção, estes dados viriam da API\n      setTimeout(() => {\n        setQueueItems([\n          {\n            id: '1',\n            customerName: 'Maria Silva',\n            customerPhone: '+55 11 99999-1234',\n            customerEmail: 'maria@email.com',\n            customerAvatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=40&h=40&fit=crop&crop=face',\n            priority: 'urgent',\n            department: 'vendas',\n            category: 'produto-premium',\n            source: 'whatsapp',\n            waitTime: 15,\n            estimatedWaitTime: 3,\n            aiPredictedWaitTime: 2,\n            status: 'waiting',\n            tags: ['vip', 'produto-premium', 'urgente', 'hot-lead'],\n            customerValue: 'platinum',\n            urgencyScore: 95,\n            satisfactionHistory: 4.8,\n            conversationPreview: 'Preciso de informações sobre o produto premium que vi no site...',\n            metadata: { lastPurchase: '2024-10-15', totalSpent: 15000 },\n            createdAt: new Date(Date.now() - 15 * 60 * 1000),\n            aiInsights: {\n              sentiment: 'positive',\n              complexity: 'medium',\n              suggestedAgent: 'Maria Santos',\n              estimatedDuration: 12,\n              keywords: ['produto premium', 'compra', 'urgente'],\n              customerIntent: 'purchase_intent',\n              riskScore: 15\n            }\n          },\n          {\n            id: '2',\n            customerName: 'João Santos',\n            customerPhone: '+55 11 98888-5678',\n            priority: 'high',\n            department: 'suporte',\n            category: 'problema-tecnico',\n            source: 'webchat',\n            waitTime: 8,\n            estimatedWaitTime: 5,\n            aiPredictedWaitTime: 4,\n            assignedAgent: 'Carlos Lima',\n            status: 'assigned',\n            tags: ['problema-tecnico', 'cliente-recorrente', 'escalado'],\n            customerValue: 'gold',\n            urgencyScore: 78,\n            satisfactionHistory: 4.2,\n            conversationPreview: 'Estou com dificuldades para acessar minha conta...',\n            metadata: { accountType: 'premium', issueType: 'login' },\n            createdAt: new Date(Date.now() - 8 * 60 * 1000),\n            aiInsights: {\n              sentiment: 'negative',\n              complexity: 'high',\n              suggestedAgent: 'Carlos Lima',\n              estimatedDuration: 18,\n              keywords: ['login', 'acesso', 'problema'],\n              customerIntent: 'support_request',\n              riskScore: 75\n            }\n          },\n          {\n            id: '3',\n            customerName: 'Ana Costa',\n            customerPhone: '+55 11 97777-9012',\n            priority: 'medium',\n            department: 'vendas',\n            category: 'informacoes-gerais',\n            source: 'whatsapp',\n            waitTime: 22,\n            estimatedWaitTime: 8,\n            aiPredictedWaitTime: 6,\n            status: 'waiting',\n            tags: ['novo-cliente', 'interessado', 'lead-qualificado'],\n            customerValue: 'bronze',\n            urgencyScore: 45,\n            satisfactionHistory: 0,\n            conversationPreview: 'Gostaria de saber mais sobre os planos disponíveis...',\n            metadata: { leadSource: 'google-ads', interest: 'plano-basico' },\n            createdAt: new Date(Date.now() - 22 * 60 * 1000),\n            aiInsights: {\n              sentiment: 'neutral',\n              complexity: 'low',\n              suggestedAgent: 'João Silva',\n              estimatedDuration: 8,\n              keywords: ['planos', 'informações', 'preço'],\n              customerIntent: 'information_seeking',\n              riskScore: 25\n            }\n          }\n        ]);\n        setIsLoading(false);\n      }, 500);\n      \n    } catch (err) {\n      console.error('Erro ao carregar dados da fila:', err);\n      setError('Não foi possível carregar os dados da fila. Tente novamente mais tarde.');\n      setIsLoading(false);\n    }\n  };\n\n  // Carregar agentes da API\n  const loadAgents = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de agentes desabilitado em desenvolvimento');\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      // Aqui seria a chamada real para a API\n      // const response = await api.getAgents(user.companyId);\n      \n      // Simulação de dados para demonstração\n      // Em produção, estes dados viriam da API\n      setTimeout(() => {\n        setAgents([\n          {\n            id: 'agent-1',\n            name: 'Carlos Lima',\n            email: 'carlos@empresa.com',\n            avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=40&h=40&fit=crop&crop=face',\n            status: 'online',\n            department: 'suporte',\n            specialties: ['problema-tecnico', 'configuracao'],\n            currentLoad: 3,\n            maxLoad: 5,\n            avgResponseTime: 95,\n            satisfactionScore: 4.7,\n            efficiency: 92,\n            languages: ['pt-BR', 'en'],\n            workingHours: { start: '08:00', end: '18:00', timezone: 'America/Sao_Paulo' },\n            skills: { 'problema-tecnico': 95, 'configuracao': 88, 'vendas': 45 },\n            tags: ['senior', 'tecnico', 'especialista']\n          },\n          {\n            id: 'agent-2',\n            name: 'Maria Santos',\n            email: 'maria@empresa.com',\n            avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=40&h=40&fit=crop&crop=face',\n            status: 'busy',\n            department: 'vendas',\n            specialties: ['produto-premium', 'consultoria'],\n            currentLoad: 5,\n            maxLoad: 5,\n            avgResponseTime: 78,\n            satisfactionScore: 4.9,\n            efficiency: 96,\n            languages: ['pt-BR', 'en', 'es'],\n            workingHours: { start: '09:00', end: '19:00', timezone: 'America/Sao_Paulo' },\n            skills: { 'vendas': 98, 'produto-premium': 95, 'consultoria': 90 },\n            tags: ['senior', 'vendas', 'consultora']\n          },\n          {\n            id: 'agent-3',\n            name: 'Ana Costa',\n            email: 'ana@empresa.com',\n            avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=40&h=40&fit=crop&crop=face',\n            status: 'online',\n            department: 'financeiro',\n            specialties: ['cobranca', 'pagamentos'],\n            currentLoad: 2,\n            maxLoad: 4,\n            avgResponseTime: 112,\n            satisfactionScore: 4.5,\n            efficiency: 89,\n            languages: ['pt-BR'],\n            workingHours: { start: '08:00', end: '17:00', timezone: 'America/Sao_Paulo' },\n            skills: { 'cobranca': 92, 'pagamentos': 88, 'financeiro': 85 },\n            tags: ['pleno', 'financeiro', 'cobranca']\n          }\n        ]);\n      }, 500);\n      \n    } catch (err) {\n      console.error('Erro ao carregar agentes:', err);\n    }\n  };\n\n  // Filtros Inteligentes Dinâmicos\n  const smartFilters: SmartFilter[] = useMemo(() => [\n    {\n      id: 'critical',\n      name: 'Críticos',\n      icon: <Flame className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('critical'),\n      count: queueItems.filter(item => item.urgencyScore >= 80 || item.priority === 'urgent').length,\n      color: 'bg-red-500',\n      description: 'Conversas que precisam de atenção imediata',\n      condition: (item) => item.urgencyScore >= 80 || item.priority === 'urgent',\n      priority: 1\n    },\n    {\n      id: 'vip',\n      name: 'VIP',\n      icon: <Star className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('vip'),\n      count: queueItems.filter(item => item.customerValue === 'platinum' || item.customerValue === 'gold').length,\n      color: 'bg-yellow-500',\n      description: 'Clientes VIP e Gold',\n      condition: (item) => item.customerValue === 'platinum' || item.customerValue === 'gold',\n      priority: 2\n    },\n    {\n      id: 'ai-risk',\n      name: 'Alto Risco',\n      icon: <AlertTriangle className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('ai-risk'),\n      count: queueItems.filter(item => (item.aiInsights?.riskScore || 0) >= 70).length,\n      color: 'bg-orange-500',\n      description: 'IA detectou alto risco de insatisfação',\n      condition: (item) => (item.aiInsights?.riskScore || 0) >= 70,\n      priority: 3\n    },\n    {\n      id: 'hot-leads',\n      name: 'Hot Leads',\n      icon: <Crosshair className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('hot-leads'),\n      count: queueItems.filter(item => item.aiInsights?.customerIntent === 'purchase_intent').length,\n      color: 'bg-green-500',\n      description: 'Clientes com alta intenção de compra',\n      condition: (item) => item.aiInsights?.customerIntent === 'purchase_intent',\n      priority: 4\n    },\n    {\n      id: 'waiting-long',\n      name: 'Espera Longa',\n      icon: <Clock className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('waiting-long'),\n      count: queueItems.filter(item => item.waitTime > 20).length,\n      color: 'bg-purple-500',\n      description: 'Aguardando há mais de 20 minutos',\n      condition: (item) => item.waitTime > 20,\n      priority: 5\n    },\n    {\n      id: 'negative-sentiment',\n      name: 'Sentimento Negativo',\n      icon: <TrendingDown className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('negative-sentiment'),\n      count: queueItems.filter(item => item.aiInsights?.sentiment === 'negative').length,\n      color: 'bg-red-400',\n      description: 'IA detectou sentimento negativo',\n      condition: (item) => item.aiInsights?.sentiment === 'negative',\n      priority: 6\n    },\n    {\n      id: 'first-time',\n      name: 'Primeira Vez',\n      icon: <UserPlus className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('first-time'),\n      count: queueItems.filter(item => item.tags.includes('primeira-vez') || item.tags.includes('novo-cliente')).length,\n      color: 'bg-blue-500',\n      description: 'Novos clientes - primeira interação',\n      condition: (item) => item.tags.includes('primeira-vez') || item.tags.includes('novo-cliente'),\n      priority: 7\n    },\n    {\n      id: 'escalated',\n      name: 'Escalados',\n      icon: <ArrowRight className=\"h-4 w-4\" />,\n      active: selectedFilters.includes('escalated'),\n      count: queueItems.filter(item => item.status === 'escalated').length,\n      color: 'bg-indigo-500',\n      description: 'Conversas escaladas para supervisão',\n      condition: (item) => item.status === 'escalated',\n      priority: 8\n    }\n  ], [queueItems, selectedFilters]);\n\n  // Métricas em Tempo Real\n  const realTimeMetrics: RealTimeMetrics = useMemo(() => ({\n    totalInQueue: queueItems.filter(item => item.status === 'waiting').length,\n    avgWaitTime: Math.round(queueItems.reduce((sum, item) => sum + item.waitTime, 0) / queueItems.length) || 0,\n    criticalItems: queueItems.filter(item => item.urgencyScore >= 80).length,\n    agentsAvailable: agents.filter(agent => agent.status === 'online' && agent.currentLoad < agent.maxLoad).length,\n    throughputPerHour: 45, // Simulado\n    satisfactionTrend: 4.6,\n    escalationRate: 12,\n    aiAccuracy: 87\n  }), [queueItems, agents]);\n\n  // Filtrar itens baseado nos filtros selecionados\n  const filteredItems = useMemo(() => {\n    let items = queueItems;\n\n    // Aplicar busca por texto\n    if (searchTerm) {\n      items = items.filter(item =>\n        item.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.customerPhone.includes(searchTerm) ||\n        item.conversationPreview.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n\n    // Aplicar filtros inteligentes\n    if (selectedFilters.length > 0) {\n      items = items.filter(item => {\n        return selectedFilters.some(filterId => {\n          const filter = smartFilters.find(f => f.id === filterId);\n          return filter ? filter.condition(item) : false;\n        });\n      });\n    }\n\n    // Ordenar por prioridade inteligente\n    return items.sort((a, b) => {\n      // Primeiro por urgência\n      if (a.urgencyScore !== b.urgencyScore) {\n        return b.urgencyScore - a.urgencyScore;\n      }\n      // Depois por tempo de espera\n      if (a.waitTime !== b.waitTime) {\n        return b.waitTime - a.waitTime;\n      }\n      // Por último por valor do cliente\n      const valueOrder = { platinum: 4, gold: 3, silver: 2, bronze: 1 };\n      return valueOrder[b.customerValue] - valueOrder[a.customerValue];\n    });\n  }, [queueItems, searchTerm, selectedFilters, smartFilters]);\n\n  // Função para toggle de filtros\n  const toggleFilter = (filterId: string) => {\n    setSelectedFilters(prev => \n      prev.includes(filterId) \n        ? prev.filter(id => id !== filterId)\n        : [...prev, filterId]\n    );\n  };\n\n  // Função para limpar todos os filtros\n  const clearAllFilters = () => {\n    setSelectedFilters([]);\n    setSearchTerm('');\n  };\n\n  const renderSmartFilters = () => (\n    <div className=\"bg-white rounded-lg border border-gray-200 p-4 mb-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <Radar className=\"h-5 w-5 text-blue-600\" />\n          <h3 className=\"text-lg font-semibold text-gray-900\">Filtros Inteligentes</h3>\n          <div className=\"flex items-center space-x-2\">\n            {realTimeMode && (\n              <div className=\"flex items-center space-x-1 text-green-600\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n                <span className=\"text-xs font-medium\">TEMPO REAL</span>\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setRealTimeMode(!realTimeMode)}\n            className={`px-3 py-1 rounded-full text-xs font-medium transition-colors ${\n              realTimeMode \n                ? 'bg-green-100 text-green-800' \n                : 'bg-gray-100 text-gray-600'\n            }`}\n          >\n            {realTimeMode ? 'Tempo Real ON' : 'Tempo Real OFF'}\n          </button>\n          \n          {selectedFilters.length > 0 && (\n            <button\n              onClick={clearAllFilters}\n              className=\"px-3 py-1 bg-red-100 text-red-800 rounded-full text-xs font-medium hover:bg-red-200 transition-colors\"\n            >\n              Limpar ({selectedFilters.length})\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Busca Inteligente */}\n      <div className=\"relative mb-4\">\n        <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n        <input\n          type=\"text\"\n          placeholder=\"Busca inteligente: nome, telefone, tags, sentimentos...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        />\n        {searchTerm && (\n          <button\n            onClick={() => setSearchTerm('')}\n            className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n          >\n            <X className=\"h-4 w-4\" />\n          </button>\n        )}\n      </div>\n\n      {/* Filtros Dinâmicos */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-2\">\n        {smartFilters\n          .sort((a, b) => a.priority - b.priority)\n          .map((filter) => (\n            <button\n              key={filter.id}\n              onClick={() => toggleFilter(filter.id)}\n              className={`relative flex items-center space-x-2 p-3 rounded-lg border-2 transition-all duration-200 hover:scale-105 ${\n                filter.active\n                  ? 'border-blue-500 bg-blue-50 shadow-md'\n                  : 'border-gray-200 bg-white hover:border-gray-300'\n              }`}\n              title={filter.description}\n            >\n              <div className={`p-1 rounded ${filter.color} text-white`}>\n                {filter.icon}\n              </div>\n              <div className=\"flex-1 text-left\">\n                <div className=\"text-sm font-medium text-gray-900\">{filter.name}</div>\n                <div className=\"text-xs text-gray-500\">{filter.count} itens</div>\n              </div>\n              \n              {filter.count > 0 && (\n                <div className={`absolute -top-1 -right-1 w-5 h-5 ${filter.color} text-white text-xs rounded-full flex items-center justify-center font-bold`}>\n                  {filter.count}\n                </div>\n              )}\n              \n              {filter.active && (\n                <div className=\"absolute inset-0 border-2 border-blue-500 rounded-lg animate-pulse\"></div>\n              )}\n            </button>\n          ))}\n      </div>\n\n      {/* Métricas Rápidas */}\n      <div className=\"mt-4 grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-3\">\n        <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-blue-900\">{realTimeMetrics.totalInQueue}</div>\n          <div className=\"text-xs text-blue-700\">Na Fila</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-green-50 to-green-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-green-900\">{realTimeMetrics.avgWaitTime}min</div>\n          <div className=\"text-xs text-green-700\">Tempo Médio</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-red-50 to-red-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-red-900\">{realTimeMetrics.criticalItems}</div>\n          <div className=\"text-xs text-red-700\">Críticos</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-purple-50 to-purple-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-purple-900\">{realTimeMetrics.agentsAvailable}</div>\n          <div className=\"text-xs text-purple-700\">Agentes Livres</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-yellow-50 to-yellow-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-yellow-900\">{realTimeMetrics.throughputPerHour}</div>\n          <div className=\"text-xs text-yellow-700\">Por Hora</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-indigo-50 to-indigo-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-indigo-900\">{realTimeMetrics.satisfactionTrend}</div>\n          <div className=\"text-xs text-indigo-700\">Satisfação</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-orange-900\">{realTimeMetrics.escalationRate}%</div>\n          <div className=\"text-xs text-orange-700\">Escalação</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-teal-50 to-teal-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-teal-900\">{realTimeMetrics.aiAccuracy}%</div>\n          <div className=\"text-xs text-teal-700\">IA Precisão</div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderQueueItem = (item: QueueItem) => {\n    const getPriorityColor = (priority: string) => {\n      switch (priority) {\n        case 'urgent': return 'bg-red-500';\n        case 'high': return 'bg-orange-500';\n        case 'medium': return 'bg-yellow-500';\n        case 'low': return 'bg-green-500';\n        default: return 'bg-gray-500';\n      }\n    };\n\n    const getCustomerValueBadge = (value: string) => {\n      const colors = {\n        platinum: 'bg-purple-100 text-purple-800',\n        gold: 'bg-yellow-100 text-yellow-800',\n        silver: 'bg-gray-100 text-gray-800',\n        bronze: 'bg-orange-100 text-orange-800'\n      };\n\n      const icons = {\n        platinum: '💎',\n        gold: '🥇',\n        silver: '🥈',\n        bronze: '🥉'\n      };\n\n      return (\n        <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${colors[value as keyof typeof colors]}`}>\n          {icons[value as keyof typeof icons]} {value.toUpperCase()}\n        </span>\n      );\n    };\n\n    const getSentimentIcon = (sentiment?: string) => {\n      switch (sentiment) {\n        case 'positive': return <span className=\"text-green-500\">😊</span>;\n        case 'negative': return <span className=\"text-red-500\">😠</span>;\n        case 'neutral': return <span className=\"text-gray-500\">😐</span>;\n        default: return <span className=\"text-gray-400\">❓</span>;\n      }\n    };\n\n    return (\n      <div key={item.id} className=\"p-6 hover:bg-gray-50 transition-colors border-l-4 border-transparent hover:border-blue-500\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            {/* Avatar e Info do Cliente */}\n            <div className=\"relative\">\n              {item.customerAvatar ? (\n                <img\n                  src={item.customerAvatar}\n                  alt={item.customerName}\n                  className=\"w-12 h-12 rounded-full\"\n                />\n              ) : (\n                <div className=\"w-12 h-12 bg-gray-300 rounded-full flex items-center justify-center\">\n                  <Users className=\"h-6 w-6 text-gray-600\" />\n                </div>\n              )}\n              <div className={`absolute -bottom-1 -right-1 w-4 h-4 rounded-full ${getPriorityColor(item.priority)}`} />\n            </div>\n            \n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <h4 className=\"text-sm font-semibold text-gray-900\">{item.customerName}</h4>\n                {getCustomerValueBadge(item.customerValue)}\n                <div className=\"flex items-center space-x-1\">\n                  {getSentimentIcon(item.aiInsights?.sentiment)}\n                  <span className=\"text-xs text-gray-500\">\n                    {item.aiInsights?.sentiment}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-4 text-xs text-gray-500 mb-2\">\n                <span className=\"flex items-center space-x-1\">\n                  <Phone className=\"h-3 w-3\" />\n                  <span>{item.customerPhone}</span>\n                </span>\n                <span className=\"flex items-center space-x-1\">\n                  <Layers className=\"h-3 w-3\" />\n                  <span>{item.department}</span>\n                </span>\n                <span className=\"flex items-center space-x-1\">\n                  <Clock className=\"h-3 w-3\" />\n                  <span>\n                    {item.waitTime}min aguardando\n                    {item.aiPredictedWaitTime && (\n                      <span className=\"text-blue-600 ml-1\">\n                        (IA: {item.aiPredictedWaitTime}min)\n                      </span>\n                    )}\n                  </span>\n                </span>\n              </div>\n              \n              <p className=\"text-sm text-gray-700 mb-2\">{item.conversationPreview}</p>\n              \n              {/* Tags Inteligentes */}\n              <div className=\"flex items-center space-x-2 mb-2\">\n                {item.tags.slice(0, 3).map((tag) => (\n                  <span key={tag} className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-800\">\n                    <Hash className=\"h-2 w-2 mr-1\" />\n                    {tag}\n                  </span>\n                ))}\n                {item.tags.length > 3 && (\n                  <span className=\"text-xs text-gray-500\">+{item.tags.length - 3} mais</span>\n                )}\n              </div>\n\n              {/* Insights da IA */}\n              {item.aiInsights && (\n                <div className=\"bg-purple-50 rounded-lg p-2 mt-2\">\n                  <div className=\"flex items-center space-x-4 text-xs\">\n                    <div className=\"flex items-center space-x-1\">\n                      <Brain className=\"h-3 w-3 text-purple-600\" />\n                      <span className=\"text-purple-800\">\n                        Intenção: {item.aiInsights.customerIntent}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <Target className=\"h-3 w-3 text-purple-600\" />\n                      <span className=\"text-purple-800\">\n                        Risco: {item.aiInsights.riskScore}%\n                      </span>\n                    </div>\n                    <div className=\"flex items-center space-x-1\">\n                      <Timer className=\"h-3 w-3 text-purple-600\" />\n                      <span className=\"text-purple-800\">\n                        Duração estimada: {item.aiInsights.estimatedDuration}min\n                      </span>\n                    </div>\n                  </div>\n                  {item.aiInsights.keywords.length > 0 && (\n                    <div className=\"mt-1\">\n                      <span className=\"text-xs text-purple-700\">\n                        Palavras-chave: {item.aiInsights.keywords.join(', ')}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            {/* Score de Urgência */}\n            <div className=\"text-center\">\n              <div className={`text-lg font-bold ${\n                item.urgencyScore >= 80 ? 'text-red-600' :\n                item.urgencyScore >= 60 ? 'text-orange-600' :\n                item.urgencyScore >= 40 ? 'text-yellow-600' : 'text-green-600'\n              }`}>\n                {item.urgencyScore}\n              </div>\n              <div className=\"text-xs text-gray-500\">Urgência</div>\n            </div>\n            \n            {/* Agente Sugerido pela IA */}\n            {item.aiInsights?.suggestedAgent && (\n              <div className=\"text-center\">\n                <div className=\"text-sm font-medium text-blue-600\">\n                  {item.aiInsights.suggestedAgent}\n                </div>\n                <div className=\"text-xs text-gray-500\">IA Sugere</div>\n              </div>\n            )}\n            \n            {/* Ações */}\n            <div className=\"flex items-center space-x-2\">\n              <button className=\"p-2 text-blue-600 hover:bg-blue-50 rounded-lg\" title=\"Visualizar\">\n                <Eye className=\"h-4 w-4\" />\n              </button>\n              <button className=\"p-2 text-green-600 hover:bg-green-50 rounded-lg\" title=\"Atribuir\">\n                <UserCheck className=\"h-4 w-4\" />\n              </button>\n              <button className=\"p-2 text-purple-600 hover:bg-purple-50 rounded-lg\" title=\"Transferir\">\n                <ArrowRightLeft className=\"h-4 w-4\" />\n              </button>\n              <button className=\"p-2 text-orange-600 hover:bg-orange-50 rounded-lg\" title=\"Priorizar\">\n                <SkipForward className=\"h-4 w-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n        <div className=\"flex items-center space-x-3 mb-2\">\n          <Radar className=\"h-8 w-8 text-primary-600\" style={{ color: 'var(--color-primary)' }} />\n          <h1 className=\"text-2xl font-bold text-gray-900\">Fila Inteligente com IA</h1>\n        </div>\n        <p className=\"text-gray-600\">\n          Sistema avançado de distribuição com filtros dinâmicos e insights em tempo real\n        </p>\n        <div className=\"mt-4 flex items-center space-x-4 text-sm text-gray-500\">\n          <div className=\"flex items-center space-x-1\">\n            <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\"></div>\n            <span>IA Ativa</span>\n          </div>\n          <div className=\"flex items-center space-x-1\">\n            <div className=\"w-2 h-2 bg-blue-500 rounded-full\"></div>\n            <span>Filtros Inteligentes</span>\n          </div>\n          <div className=\"flex items-center space-x-1\">\n            <div className=\"w-2 h-2 bg-purple-500 rounded-full\"></div>\n            <span>Predição em Tempo Real</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Filtros Inteligentes */}\n      {renderSmartFilters()}\n\n      {/* Lista da Fila */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Fila de Atendimento \n              {filteredItems.length !== queueItems.length && (\n                <span className=\"ml-2 text-blue-600\">\n                  ({filteredItems.length} de {queueItems.length})\n                </span>\n              )}\n            </h3>\n            <div className=\"flex items-center space-x-2\">\n              <button className=\"flex items-center space-x-1 px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-md hover:bg-blue-200\">\n                <Wand2 className=\"h-3 w-3\" />\n                <span>Auto-Distribuir</span>\n              </button>\n              <button className=\"flex items-center space-x-1 px-3 py-1 text-sm bg-green-100 text-green-800 rounded-md hover:bg-green-200\">\n                <Zap className=\"h-3 w-3\" />\n                <span>Otimizar IA</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"divide-y divide-gray-200\">\n            {filteredItems.map(renderQueueItem)}\n          </div>\n        )}\n        \n        {!isLoading && filteredItems.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Radar className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              {selectedFilters.length > 0 || searchTerm ? 'Nenhum item encontrado' : 'Fila vazia'}\n            </h3>\n            <p className=\"text-gray-500\">\n              {selectedFilters.length > 0 || searchTerm\n                ? 'Tente ajustar os filtros ou busca'\n                : 'Não há clientes aguardando atendimento no momento'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QueueManagement;","import React, { useState, useEffect } from 'react';\nimport { \n  QrCode, \n  Smartphone, \n  CheckCircle, \n  AlertCircle, \n  RefreshCw, \n  Loader2, \n  Zap, \n  Activity, \n  BarChart3, \n  Radio, \n  Instagram, \n  Facebook, \n  Link, \n  ExternalLink, \n  Key\n} from 'lucide-react';\nimport { useAuthStore } from '../../stores/authStore';\nimport api from '../../lib/api';\nimport { Link as RouterLink } from 'react-router-dom';\n\ninterface SocialMediaConnectionProps {\n  companyId: string;\n  platform: 'instagram' | 'facebook';\n}\n\nconst SocialMediaConnection: React.FC<SocialMediaConnectionProps> = ({ companyId, platform }) => {\n  const { user } = useAuthStore();\n  const [connectionStatus, setConnectionStatus] = useState<'disconnected' | 'connecting' | 'connected' | 'error'>('disconnected');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [accountInfo, setAccountInfo] = useState<{\n    id?: string;\n    username?: string;\n    name?: string;\n    profilePicture?: string;\n    connectedSince?: Date;\n  }>({});\n  const [connectionStats, setConnectionStats] = useState<{\n    uptime?: number;\n    connectedSince?: Date;\n    messagesSent?: number;\n    messagesReceived?: number;\n  }>({});\n  const [authCode, setAuthCode] = useState('');\n  const [showAuthForm, setShowAuthForm] = useState(false);\n\n  // Verificar status inicial ao carregar o componente\n  useEffect(() => {\n    checkConnectionStatus();\n  }, [companyId, platform]);\n\n  // Verificar status da conexão\n  const checkConnectionStatus = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Verificação de status de redes sociais desabilitada em desenvolvimento');\n      setConnectionStatus('disconnected');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Em produção, buscar da API\n      // const response = await api.getSocialMediaStatus(companyId, platform);\n      \n      // Dados mockados para demonstração\n      setTimeout(() => {\n        // Simular status desconectado\n        setConnectionStatus('disconnected');\n        setIsLoading(false);\n      }, 1000);\n    } catch (err) {\n      console.error(`Erro ao verificar status do ${platform}:`, err);\n      setError(`Não foi possível verificar o status da conexão com ${platform}`);\n      setConnectionStatus('error');\n      setIsLoading(false);\n    }\n  };\n\n  // Iniciar conexão\n  const handleConnect = async () => {\n    setShowAuthForm(true);\n  };\n\n  // Submeter código de autenticação\n  const handleSubmitAuth = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Autenticação de redes sociais desabilitada em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Em produção, enviar para a API\n      // const response = await api.connectSocialMedia(companyId, platform, { authCode });\n      \n      // Simular conexão bem-sucedida após 2 segundos\n      setTimeout(() => {\n        setConnectionStatus('connected');\n        setShowAuthForm(false);\n        \n        // Simular dados da conta conectada\n        setAccountInfo({\n          id: platform === 'instagram' ? '12345678' : '87654321',\n          username: platform === 'instagram' ? 'empresa_demo' : 'Empresa Demo',\n          name: 'Empresa Demo',\n          profilePicture: 'https://images.unsplash.com/photo-1560250097-0b93528c311a?w=200&h=200&fit=crop&crop=faces',\n          connectedSince: new Date()\n        });\n        \n        // Simular estatísticas de conexão\n        setConnectionStats({\n          uptime: 0, // Acabou de conectar\n          connectedSince: new Date(),\n          messagesSent: 0,\n          messagesReceived: 0\n        });\n        \n        setIsLoading(false);\n      }, 2000);\n    } catch (err) {\n      console.error(`Erro ao conectar ${platform}:`, err);\n      setError(`Erro ao conectar com ${platform}`);\n      setIsLoading(false);\n    }\n  };\n\n  // Desconectar\n  const handleDisconnect = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Desconexão de redes sociais desabilitada em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Em produção, enviar para a API\n      // const response = await api.disconnectSocialMedia(companyId, platform);\n      \n      // Simular desconexão após 1 segundo\n      setTimeout(() => {\n        setConnectionStatus('disconnected');\n        setAccountInfo({});\n        setConnectionStats({});\n        setIsLoading(false);\n      }, 1000);\n    } catch (err) {\n      console.error(`Erro ao desconectar ${platform}:`, err);\n      setError(`Erro ao desconectar ${platform}`);\n      setIsLoading(false);\n    }\n  };\n\n  const getStatusIcon = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return <CheckCircle className=\"h-5 w-5 text-green-500\" />;\n      case 'connecting':\n        return <RefreshCw className=\"h-5 w-5 text-yellow-500 animate-spin\" />;\n      case 'error':\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\n      default:\n        return <AlertCircle className=\"h-5 w-5 text-red-500\" />;\n    }\n  };\n\n  const getStatusText = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return `${platform === 'instagram' ? 'Instagram' : 'Facebook'} Conectado`;\n      case 'connecting':\n        return 'Conectando...';\n      case 'error':\n        return 'Erro na Conexão';\n      default:\n        return `${platform === 'instagram' ? 'Instagram' : 'Facebook'} Desconectado`;\n    }\n  };\n\n  const getStatusColor = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return 'bg-green-50 border-green-200';\n      case 'connecting':\n        return 'bg-yellow-50 border-yellow-200';\n      case 'error':\n        return 'bg-red-50 border-red-200';\n      default:\n        return 'bg-red-50 border-red-200';\n    }\n  };\n\n  const getStatusDescription = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return `Seu ${platform === 'instagram' ? 'Instagram' : 'Facebook'} está conectado à conta @${accountInfo.username}`;\n      case 'connecting':\n        return `Conectando ao ${platform === 'instagram' ? 'Instagram' : 'Facebook'}...`;\n      case 'error':\n        return `Ocorreu um erro ao conectar com o ${platform === 'instagram' ? 'Instagram' : 'Facebook'}`;\n      default:\n        return `Conecte seu ${platform === 'instagram' ? 'Instagram' : 'Facebook'} para começar a receber mensagens`;\n    }\n  };\n\n  const formatUptime = (seconds?: number) => {\n    if (!seconds) return 'N/A';\n    \n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    \n    if (days > 0) {\n      return `${days}d ${hours}h ${minutes}m`;\n    } else if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  const getPlatformIcon = () => {\n    return platform === 'instagram' ? (\n      <Instagram className=\"h-12 w-12 text-pink-600\" />\n    ) : (\n      <Facebook className=\"h-12 w-12 text-blue-600\" />\n    );\n  };\n\n  const getPlatformColor = () => {\n    return platform === 'instagram' ? 'bg-gradient-to-r from-pink-500 to-purple-500' : 'bg-blue-600';\n  };\n\n  const getPlatformName = () => {\n    return platform === 'instagram' ? 'Instagram Direct' : 'Facebook Messenger';\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      {/* Status Card */}\n      <div className={`rounded-lg border-2 p-6 mb-6 ${getStatusColor()}`}>\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            {getStatusIcon()}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900\">{getStatusText()}</h3>\n              <p className=\"text-sm text-gray-600\">\n                {getStatusDescription()}\n              </p>\n              {error && (\n                <p className=\"text-sm text-red-600 mt-1\">{error}</p>\n              )}\n            </div>\n          </div>\n          \n          <div className=\"flex space-x-2\">\n            {connectionStatus === 'connected' ? (\n              <div className=\"flex space-x-2\">\n                <button\n                  onClick={handleDisconnect}\n                  disabled={isLoading}\n                  className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50\"\n                >\n                  {isLoading ? (\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                  ) : (\n                    'Desconectar'\n                  )}\n                </button>\n              </div>\n            ) : (\n              <button\n                onClick={handleConnect}\n                disabled={isLoading}\n                className=\"px-4 py-2 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50\"\n                style={{ backgroundColor: platform === 'instagram' ? '#E1306C' : '#1877F2' }}\n              >\n                {isLoading ? (\n                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                ) : (\n                  `Conectar ${getPlatformName()}`\n                )}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Auth Form */}\n      {showAuthForm && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-8 text-center mb-6\">\n          <div className=\"mb-6\">\n            {getPlatformIcon()}\n            <h3 className=\"text-xl font-semibold text-gray-900 mt-4 mb-2\">\n              Conectar {getPlatformName()}\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              Para conectar sua conta, precisamos de um token de acesso\n            </p>\n          </div>\n\n          <div className=\"max-w-md mx-auto\">\n            <div className=\"mb-6\">\n              <label htmlFor=\"authCode\" className=\"block text-sm font-medium text-gray-700 text-left mb-1\">\n                Token de Acesso\n              </label>\n              <input\n                type=\"text\"\n                id=\"authCode\"\n                value={authCode}\n                onChange={(e) => setAuthCode(e.target.value)}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                placeholder=\"Cole seu token de acesso aqui\"\n              />\n            </div>\n\n            <div className=\"flex justify-between mb-6\">\n              <button\n                onClick={() => setShowAuthForm(false)}\n                className=\"px-4 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50\"\n              >\n                Cancelar\n              </button>\n              \n              <button\n                onClick={handleSubmitAuth}\n                disabled={!authCode.trim() || isLoading}\n                className=\"px-4 py-2 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50\"\n                style={{ backgroundColor: platform === 'instagram' ? '#E1306C' : '#1877F2' }}\n              >\n                {isLoading ? (\n                  <Loader2 className=\"h-4 w-4 animate-spin\" />\n                ) : (\n                  'Conectar'\n                )}\n              </button>\n            </div>\n\n            <div className=\"bg-blue-50 rounded-lg p-4 text-left\">\n              <h4 className=\"text-sm font-semibold text-blue-900 mb-2 flex items-center\">\n                <Key className=\"h-4 w-4 mr-2\" />\n                Como obter seu token de acesso:\n              </h4>\n              <ol className=\"text-sm text-blue-800 space-y-2 list-decimal pl-5\">\n                <li>Acesse o <a href={platform === 'instagram' ? 'https://developers.facebook.com/docs/instagram-api/' : 'https://developers.facebook.com/docs/messenger-platform/'} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline flex items-center\">\n                  Painel de Desenvolvedores {platform === 'instagram' ? 'Instagram' : 'Facebook'}\n                  <ExternalLink className=\"h-3 w-3 ml-1\" />\n                </a></li>\n                <li>Crie ou selecione um aplicativo</li>\n                <li>Configure as permissões necessárias para mensagens</li>\n                <li>Gere um token de acesso de longa duração</li>\n                <li>Copie e cole o token no campo acima</li>\n              </ol>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Connected State */}\n      {connectionStatus === 'connected' && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <div className=\"text-center\">\n            <div className=\"w-20 h-20 rounded-full mx-auto mb-4 overflow-hidden\">\n              {accountInfo.profilePicture ? (\n                <img \n                  src={accountInfo.profilePicture} \n                  alt={accountInfo.name} \n                  className=\"w-full h-full object-cover\"\n                />\n              ) : (\n                <div className={`w-full h-full flex items-center justify-center text-white ${getPlatformColor()}`}>\n                  {platform === 'instagram' ? (\n                    <Instagram className=\"h-10 w-10\" />\n                  ) : (\n                    <Facebook className=\"h-10 w-10\" />\n                  )}\n                </div>\n              )}\n            </div>\n            \n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\n              {getPlatformName()} Conectado com Sucesso!\n            </h3>\n            <p className=\"text-gray-600 mb-6\">\n              Agora você pode receber e enviar mensagens através da plataforma\n            </p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n              <div className=\"bg-green-50 rounded-lg p-4\">\n                <div className=\"font-semibold text-green-900\">Status</div>\n                <div className=\"text-green-700\">Online</div>\n              </div>\n              <div className=\"bg-blue-50 rounded-lg p-4\">\n                <div className=\"font-semibold text-blue-900\">Conta</div>\n                <div className=\"text-blue-700\">@{accountInfo.username}</div>\n              </div>\n              <div className=\"bg-purple-50 rounded-lg p-4\">\n                <div className=\"font-semibold text-purple-900\">ID</div>\n                <div className=\"text-purple-700\">{accountInfo.id}</div>\n              </div>\n            </div>\n            \n            {connectionStats.uptime !== undefined && (\n              <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"font-semibold text-gray-900\">Tempo Conectado</div>\n                  <div className=\"text-gray-700\">{formatUptime(connectionStats.uptime)}</div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"font-semibold text-gray-900\">Mensagens Enviadas</div>\n                  <div className=\"text-gray-700\">{connectionStats.messagesSent}</div>\n                </div>\n                <div className=\"bg-gray-50 rounded-lg p-4\">\n                  <div className=\"font-semibold text-gray-900\">Mensagens Recebidas</div>\n                  <div className=\"text-gray-700\">{connectionStats.messagesReceived}</div>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"mt-6\">\n              <RouterLink \n                to={`/client/${platform}-monitoring`}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 inline-flex items-center space-x-2\"\n              >\n                <BarChart3 className=\"h-4 w-4\" />\n                <span>Acessar Monitoramento</span>\n              </RouterLink>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tips Section */}\n      <div className=\"mt-6 bg-blue-50 border border-blue-200 rounded-lg p-6\">\n        <div className=\"flex items-start space-x-3\">\n          <Zap className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n          <div>\n            <h4 className=\"text-sm font-semibold text-blue-900 mb-2\">\n              Dicas para integração com {getPlatformName()}\n            </h4>\n            <ul className=\"text-sm text-blue-800 space-y-1\">\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Certifique-se de que sua conta tem permissões para mensagens</span>\n              </li>\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Use tokens de acesso de longa duração para evitar desconexões</span>\n              </li>\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Responda às mensagens dentro de 24 horas para manter a janela de mensagens ativa</span>\n              </li>\n              <li className=\"flex items-start\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-2 mt-0.5\" />\n                <span>Siga as políticas de uso da plataforma para evitar bloqueios</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialMediaConnection;","import React, { useState } from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../../components/ui/tabs';\nimport { Instagram, Facebook, MessageCircle, Settings, Info, AlertCircle } from 'lucide-react';\nimport SocialMediaConnection from './SocialMediaConnection';\nimport { useAuthStore } from '../../stores/authStore';\n\nconst SocialMediaIntegration: React.FC = () => {\n  const { user } = useAuthStore();\n  const [activeTab, setActiveTab] = useState('instagram');\n  const companyId = user?.companyId || 'company-1';\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Integração com Redes Sociais</h2>\n        <p className=\"text-gray-600\">\n          Conecte suas contas de Instagram e Facebook para gerenciar todas as mensagens em um único lugar\n        </p>\n        \n        <div className=\"mt-4 bg-blue-50 border border-blue-200 rounded-lg p-4\">\n          <div className=\"flex items-start space-x-3\">\n            <Info className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n            <div>\n              <h3 className=\"text-sm font-semibold text-blue-900 mb-1\">\n                Integração Unificada\n              </h3>\n              <p className=\"text-sm text-blue-800\">\n                Todas as mensagens de diferentes canais serão unificadas na mesma interface de atendimento, \n                permitindo que você gerencie WhatsApp, Instagram e Facebook em um único lugar.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabs */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"border-b border-gray-200\">\n          <div className=\"flex\">\n            <button\n              onClick={() => setActiveTab('instagram')}\n              className={`px-4 py-3 text-sm font-medium whitespace-nowrap ${\n                activeTab === 'instagram'\n                  ? 'border-b-2 border-pink-500 text-pink-600'\n                  : 'text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <Instagram className=\"h-4 w-4\" />\n                <span>Instagram Direct</span>\n              </div>\n            </button>\n            \n            <button\n              onClick={() => setActiveTab('facebook')}\n              className={`px-4 py-3 text-sm font-medium whitespace-nowrap ${\n                activeTab === 'facebook'\n                  ? 'border-b-2 border-blue-500 text-blue-600'\n                  : 'text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <Facebook className=\"h-4 w-4\" />\n                <span>Facebook Messenger</span>\n              </div>\n            </button>\n            \n            <button\n              onClick={() => setActiveTab('settings')}\n              className={`px-4 py-3 text-sm font-medium whitespace-nowrap ${\n                activeTab === 'settings'\n                  ? 'border-b-2 border-gray-500 text-gray-600'\n                  : 'text-gray-500 hover:text-gray-700 hover:border-gray-300'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                <Settings className=\"h-4 w-4\" />\n                <span>Configurações</span>\n              </div>\n            </button>\n          </div>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'instagram' && (\n            <SocialMediaConnection companyId={companyId} platform=\"instagram\" />\n          )}\n          \n          {activeTab === 'facebook' && (\n            <SocialMediaConnection companyId={companyId} platform=\"facebook\" />\n          )}\n          \n          {activeTab === 'settings' && (\n            <div className=\"max-w-2xl mx-auto\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Configurações de Integração</h3>\n              \n              <div className=\"space-y-6\">\n                <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Distribuição de Mensagens</h4>\n                  <p className=\"text-sm text-gray-600 mb-4\">\n                    Configure como as mensagens de diferentes canais serão distribuídas para os agentes\n                  </p>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <input\n                          type=\"checkbox\"\n                          id=\"unified-queue\"\n                          checked={true}\n                          className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                        />\n                        <label htmlFor=\"unified-queue\" className=\"text-sm text-gray-700\">\n                          Fila unificada para todos os canais\n                        </label>\n                      </div>\n                      <div className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full\">\n                        Recomendado\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"separate-queues\"\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor=\"separate-queues\" className=\"ml-2 text-sm text-gray-700\">\n                        Filas separadas por canal\n                      </label>\n                    </div>\n                    \n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"agent-specialization\"\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor=\"agent-specialization\" className=\"ml-2 text-sm text-gray-700\">\n                        Permitir especialização de agentes por canal\n                      </label>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Automações</h4>\n                  <p className=\"text-sm text-gray-600 mb-4\">\n                    Configure automações específicas para cada canal\n                  </p>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"welcome-message\"\n                        checked={true}\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor=\"welcome-message\" className=\"ml-2 text-sm text-gray-700\">\n                        Mensagem de boas-vindas automática\n                      </label>\n                    </div>\n                    \n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"away-message\"\n                        checked={true}\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor=\"away-message\" className=\"ml-2 text-sm text-gray-700\">\n                        Mensagem de ausência fora do horário comercial\n                      </label>\n                    </div>\n                    \n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"auto-tagging\"\n                        className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                      />\n                      <label htmlFor=\"auto-tagging\" className=\"ml-2 text-sm text-gray-700\">\n                        Tagging automático baseado no canal\n                      </label>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Limites e Restrições</h4>\n                  \n                  <div className=\"space-y-4\">\n                    <div>\n                      <label htmlFor=\"message-limit\" className=\"block text-sm text-gray-700 mb-1\">\n                        Limite de mensagens por minuto (Instagram)\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"message-limit\"\n                        defaultValue={15}\n                        min={1}\n                        max={60}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">\n                        Recomendado: 15 mensagens/minuto para evitar limitações da API\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <label htmlFor=\"message-limit-fb\" className=\"block text-sm text-gray-700 mb-1\">\n                        Limite de mensagens por minuto (Facebook)\n                      </label>\n                      <input\n                        type=\"number\"\n                        id=\"message-limit-fb\"\n                        defaultValue={20}\n                        min={1}\n                        max={60}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                      />\n                      <p className=\"mt-1 text-xs text-gray-500\">\n                        Recomendado: 20 mensagens/minuto para evitar limitações da API\n                      </p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                  <div className=\"flex items-start space-x-3\">\n                    <AlertCircle className=\"h-5 w-5 text-yellow-600 mt-0.5\" />\n                    <div>\n                      <h4 className=\"text-sm font-medium text-yellow-800 mb-1\">Limitações das APIs</h4>\n                      <p className=\"text-sm text-yellow-700\">\n                        As APIs do Instagram e Facebook têm limitações específicas. Certifique-se de seguir as \n                        políticas de uso para evitar bloqueios temporários ou permanentes.\n                      </p>\n                      <ul className=\"mt-2 space-y-1 text-sm text-yellow-700 list-disc pl-5\">\n                        <li>Responda às mensagens dentro de 24 horas</li>\n                        <li>Evite enviar mensagens em massa</li>\n                        <li>Respeite os limites de taxa da API</li>\n                        <li>Obtenha consentimento antes de enviar mensagens promocionais</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialMediaIntegration;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  BarChart3, \n  MessageCircle, \n  Clock, \n  CheckCircle, \n  XCircle,\n  RefreshCw,\n  Calendar,\n  Activity,\n  AlertTriangle,\n  Zap,\n  Users,\n  Eye,\n  Send,\n  Download,\n  Loader2,\n  Gauge,\n  Signal,\n  BarChart2,\n  ArrowUpRight,\n  ArrowDownRight,\n  Wifi,\n  Phone,\n  ArrowLeft,\n  Link,\n  Instagram,\n  Facebook\n} from 'lucide-react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport api from '../../lib/api';\n\ninterface SocialMediaSession {\n  id: string;\n  company_id: string;\n  platform: 'instagram' | 'facebook';\n  account_id: string;\n  account_name: string;\n  account_username: string;\n  status: 'connected' | 'disconnected' | 'error';\n  profile_picture_url?: string;\n  last_seen?: string;\n  created_at: string;\n  updated_at: string;\n  connection_stats?: {\n    uptime: number;\n    connected_since: string;\n    reconnect_count: number;\n    last_reconnect?: string;\n  };\n  message_stats?: {\n    sent_today: number;\n    received_today: number;\n    sent_total: number;\n    received_total: number;\n    delivery_rate: number;\n    read_rate: number;\n    response_rate: number;\n  };\n  health_status?: {\n    status: 'healthy' | 'warning' | 'critical';\n    issues: string[];\n    last_check: string;\n  };\n}\n\ninterface SocialMediaMonitoringProps {\n  platform: 'instagram' | 'facebook';\n}\n\nconst SocialMediaMonitoring: React.FC<SocialMediaMonitoringProps> = ({ platform }) => {\n  const { user } = useAuthStore();\n  const [sessions, setSessions] = useState<SocialMediaSession[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [refreshInterval, setRefreshInterval] = useState<number>(30); // seconds\n  const [autoRefresh, setAutoRefresh] = useState<boolean>(true);\n  const [lastRefreshed, setLastRefreshed] = useState<Date>(new Date());\n  const [selectedSession, setSelectedSession] = useState<string | null>(null);\n  const [showDetailedStats, setShowDetailedStats] = useState<boolean>(false);\n\n  // Load sessions on component mount\n  useEffect(() => {\n    if (user?.companyId) {\n      loadSessions();\n    }\n  }, [user?.companyId, platform]);\n\n  // Auto-refresh timer\n  useEffect(() => {\n    if (!autoRefresh) return;\n\n    const timer = setInterval(() => {\n      loadSessions();\n      setLastRefreshed(new Date());\n    }, refreshInterval * 1000);\n\n    return () => clearInterval(timer);\n  }, [autoRefresh, refreshInterval]);\n\n  const loadSessions = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de sessões de redes sociais desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Monitoramento de instância de redes sociais desabilitado em desenvolvimento');\n      setIsLoadingMonitoring(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // In production, fetch from backend\n      // const response = await api.getSocialMediaSessions(user.companyId, platform);\n      \n      // Mock data for demonstration\n      const mockSessions: SocialMediaSession[] = [\n        {\n          id: '1',\n          company_id: user.companyId,\n          platform: platform,\n          account_id: platform === 'instagram' ? '12345678' : '87654321',\n          account_name: 'Empresa Demo',\n          account_username: 'empresa_demo',\n          status: 'connected',\n          profile_picture_url: 'https://images.unsplash.com/photo-1560250097-0b93528c311a?w=200&h=200&fit=crop&crop=faces',\n          last_seen: new Date().toISOString(),\n          created_at: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date().toISOString(),\n          connection_stats: {\n            uptime: 86400, // 24 hours in seconds\n            connected_since: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n            reconnect_count: 2,\n            last_reconnect: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString()\n          },\n          message_stats: {\n            sent_today: 56,\n            received_today: 83,\n            sent_total: 1456,\n            received_total: 2567,\n            delivery_rate: 98.5,\n            read_rate: 87.2,\n            response_rate: 76.4\n          },\n          health_status: {\n            status: 'healthy',\n            issues: [],\n            last_check: new Date().toISOString()\n          }\n        }\n      ];\n      \n      setSessions(mockSessions);\n      \n      // If there's only one session, select it automatically\n      if (mockSessions.length === 1 && !selectedSession) {\n        setSelectedSession(mockSessions[0].id);\n      }\n      \n      setIsLoading(false);\n    } catch (err) {\n      console.error(`Error loading ${platform} sessions:`, err);\n      setError(`Failed to load ${platform} sessions. Please try again later.`);\n      setIsLoading(false);\n    }\n  };\n\n  const handleRefresh = () => {\n    loadSessions();\n    setLastRefreshed(new Date());\n  };\n\n  const formatUptime = (seconds: number) => {\n    const days = Math.floor(seconds / 86400);\n    const hours = Math.floor((seconds % 86400) / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    \n    if (days > 0) {\n      return `${days}d ${hours}h ${minutes}m`;\n    } else if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    } else {\n      return `${minutes}m`;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            Conectado\n          </span>\n        );\n      case 'disconnected':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n            <XCircle className=\"h-3 w-3 mr-1\" />\n            Desconectado\n          </span>\n        );\n      default:\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n            <AlertTriangle className=\"h-3 w-3 mr-1\" />\n            Erro\n          </span>\n        );\n    }\n  };\n\n  const getHealthStatusBadge = (status: string) => {\n    switch (status) {\n      case 'healthy':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            Saudável\n          </span>\n        );\n      case 'warning':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n            <AlertTriangle className=\"h-3 w-3 mr-1\" />\n            Atenção\n          </span>\n        );\n      case 'critical':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n            <AlertTriangle className=\"h-3 w-3 mr-1\" />\n            Crítico\n          </span>\n        );\n      default:\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n            <Eye className=\"h-3 w-3 mr-1\" />\n            Desconhecido\n          </span>\n        );\n    }\n  };\n\n  const getMessageTrend = (session: SocialMediaSession) => {\n    if (!session.message_stats) return null;\n    \n    const stats = session.message_stats;\n    const sentRate = stats.sent_today > 0 ? Math.round((stats.sent_today / stats.sent_total) * 100) : 0;\n    const receivedRate = stats.received_today > 0 ? Math.round((stats.received_today / stats.received_total) * 100) : 0;\n    \n    const isHighSent = sentRate > 20; // If today's messages are more than 20% of total\n    const isHighReceived = receivedRate > 20;\n    \n    return (\n      <div className=\"flex items-center space-x-4\">\n        <div className=\"flex items-center\">\n          <Send className=\"h-4 w-4 text-blue-500 mr-1\" />\n          <span className=\"text-sm text-gray-700\">{stats.sent_today}</span>\n          {isHighSent ? (\n            <ArrowUpRight className=\"h-3 w-3 text-green-500 ml-1\" />\n          ) : (\n            <ArrowDownRight className=\"h-3 w-3 text-red-500 ml-1\" />\n          )}\n        </div>\n        <div className=\"flex items-center\">\n          <MessageCircle className=\"h-4 w-4 text-purple-500 mr-1\" />\n          <span className=\"text-sm text-gray-700\">{stats.received_today}</span>\n          {isHighReceived ? (\n            <ArrowUpRight className=\"h-3 w-3 text-green-500 ml-1\" />\n          ) : (\n            <ArrowDownRight className=\"h-3 w-3 text-red-500 ml-1\" />\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const getPlatformIcon = () => {\n    return platform === 'instagram' ? (\n      <Instagram className=\"h-6 w-6 text-pink-600\" />\n    ) : (\n      <Facebook className=\"h-6 w-6 text-blue-600\" />\n    );\n  };\n\n  const getPlatformName = () => {\n    return platform === 'instagram' ? 'Instagram Direct' : 'Facebook Messenger';\n  };\n\n  const selectedSessionData = selectedSession \n    ? sessions.find(s => s.id === selectedSession) \n    : null;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          {getPlatformIcon()}\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Monitoramento de {getPlatformName()}</h2>\n            <p className=\"text-sm text-gray-600\">\n              {sessions.length} {sessions.length === 1 ? 'conta' : 'contas'} conectada(s)\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <RouterLink \n            to={`/client/${platform}`} \n            className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900\"\n          >\n            <ArrowLeft className=\"h-4 w-4\" />\n            <span>Voltar para Conexão</span>\n          </RouterLink>\n          \n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-500\">Auto-refresh:</span>\n            <select \n              value={refreshInterval}\n              onChange={(e) => setRefreshInterval(Number(e.target.value))}\n              className=\"text-sm border border-gray-300 rounded-md p-1\"\n              disabled={!autoRefresh}\n            >\n              <option value=\"10\">10s</option>\n              <option value=\"30\">30s</option>\n              <option value=\"60\">1m</option>\n              <option value=\"300\">5m</option>\n            </select>\n            <label className=\"inline-flex items-center cursor-pointer\">\n              <input \n                type=\"checkbox\" \n                checked={autoRefresh} \n                onChange={() => setAutoRefresh(!autoRefresh)}\n                className=\"sr-only peer\"\n              />\n              <div className=\"relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n            </label>\n          </div>\n          \n          <button\n            onClick={handleRefresh}\n            disabled={isLoading}\n            className=\"p-2 text-gray-600 hover:text-gray-900 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            title=\"Atualizar\"\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-5 w-5 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-5 w-5\" />\n            )}\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Last refreshed info */}\n      <div className=\"text-xs text-gray-500 text-right\">\n        Última atualização: {lastRefreshed.toLocaleTimeString()}\n      </div>\n\n      {/* Sessions Overview */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Visão Geral das Contas</h3>\n        \n        {isLoading && sessions.length === 0 ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : sessions.length === 0 ? (\n          <div className=\"text-center py-12\">\n            {getPlatformIcon()}\n            <h3 className=\"text-lg font-medium text-gray-900 mt-4 mb-2\">Nenhuma conta conectada</h3>\n            <p className=\"text-gray-500\">\n              Conecte sua conta de {getPlatformName()} para começar a monitorar\n            </p>\n            <RouterLink \n              to={`/client/${platform}`} \n              className=\"mt-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white focus:outline-none focus:ring-2 focus:ring-offset-2\"\n              style={{ backgroundColor: platform === 'instagram' ? '#E1306C' : '#1877F2' }}\n            >\n              Conectar {getPlatformName()}\n            </RouterLink>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {sessions.map((session) => (\n              <div \n                key={session.id} \n                className={`bg-white rounded-lg border-2 p-4 cursor-pointer transition-all hover:shadow-md ${\n                  selectedSession === session.id ? 'border-blue-500 shadow-md' : 'border-gray-200'\n                }`}\n                onClick={() => setSelectedSession(session.id)}\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <div className=\"flex items-center space-x-2\">\n                    {platform === 'instagram' ? (\n                      <Instagram className=\"h-5 w-5 text-pink-600\" />\n                    ) : (\n                      <Facebook className=\"h-5 w-5 text-blue-600\" />\n                    )}\n                    <h4 className=\"text-md font-medium text-gray-900\">@{session.account_username}</h4>\n                  </div>\n                  {getStatusBadge(session.status)}\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <Users className=\"h-4 w-4 text-gray-400\" />\n                    <span className=\"text-gray-700\">{session.account_name}</span>\n                  </div>\n                  \n                  {session.connection_stats && (\n                    <div className=\"flex items-center space-x-2 text-sm\">\n                      <Clock className=\"h-4 w-4 text-gray-400\" />\n                      <span className=\"text-gray-700\">\n                        Uptime: {formatUptime(session.connection_stats.uptime)}\n                      </span>\n                    </div>\n                  )}\n                  \n                  {session.message_stats && getMessageTrend(session)}\n                  \n                  {session.health_status && (\n                    <div className=\"flex items-center space-x-2 text-sm mt-2\">\n                      {getHealthStatusBadge(session.health_status.status)}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Detailed Session Stats */}\n      {selectedSessionData && (\n        <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n          <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50 flex justify-between items-center\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Detalhes da Conta: @{selectedSessionData.account_username}\n            </h3>\n            <button\n              onClick={() => setShowDetailedStats(!showDetailedStats)}\n              className=\"text-sm text-blue-600 hover:text-blue-800\"\n            >\n              {showDetailedStats ? 'Mostrar Menos' : 'Mostrar Mais'}\n            </button>\n          </div>\n          \n          <div className=\"p-6\">\n            {/* Basic Info */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\">\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Informações Básicas</h4>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Status:</span>\n                    <span className=\"text-sm font-medium\">{getStatusBadge(selectedSessionData.status)}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Nome:</span>\n                    <span className=\"text-sm font-medium\">{selectedSessionData.account_name}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">ID da Conta:</span>\n                    <span className=\"text-sm font-medium\">{selectedSessionData.account_id}</span>\n                  </div>\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">Conectado em:</span>\n                    <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.created_at)}</span>\n                  </div>\n                </div>\n              </div>\n              \n              {selectedSessionData.connection_stats && (\n                <div className=\"bg-blue-50 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-semibold text-blue-700 mb-3\">Estatísticas de Conexão</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-blue-600\">Uptime:</span>\n                      <span className=\"text-sm font-medium\">{formatUptime(selectedSessionData.connection_stats.uptime)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-blue-600\">Conectado desde:</span>\n                      <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.connection_stats.connected_since)}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-blue-600\">Reconexões:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.connection_stats.reconnect_count}</span>\n                    </div>\n                    {selectedSessionData.connection_stats.last_reconnect && (\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-sm text-blue-600\">Última reconexão:</span>\n                        <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.connection_stats.last_reconnect)}</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n              \n              {selectedSessionData.message_stats && (\n                <div className=\"bg-green-50 rounded-lg p-4\">\n                  <h4 className=\"text-sm font-semibold text-green-700 mb-3\">Estatísticas de Mensagens</h4>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Enviadas hoje:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.sent_today}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Recebidas hoje:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.received_today}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Taxa de entrega:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.delivery_rate}%</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm text-green-600\">Taxa de leitura:</span>\n                      <span className=\"text-sm font-medium\">{selectedSessionData.message_stats.read_rate}%</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n            \n            {/* Detailed Stats (expandable) */}\n            {showDetailedStats && (\n              <div className=\"mt-6\">\n                {/* Message Stats Detailed */}\n                {selectedSessionData.message_stats && (\n                  <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n                    <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">Estatísticas Detalhadas de Mensagens</h4>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      <div className=\"bg-blue-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-blue-600\">Total Enviadas</p>\n                            <p className=\"text-xl font-bold text-blue-800\">{selectedSessionData.message_stats.sent_total.toLocaleString()}</p>\n                          </div>\n                          <Send className=\"h-8 w-8 text-blue-500\" />\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-purple-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-purple-600\">Total Recebidas</p>\n                            <p className=\"text-xl font-bold text-purple-800\">{selectedSessionData.message_stats.received_total.toLocaleString()}</p>\n                          </div>\n                          <MessageCircle className=\"h-8 w-8 text-purple-500\" />\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-green-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-green-600\">Taxa de Entrega</p>\n                            <p className=\"text-xl font-bold text-green-800\">{selectedSessionData.message_stats.delivery_rate}%</p>\n                          </div>\n                          <CheckCircle className=\"h-8 w-8 text-green-500\" />\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-orange-50 rounded-lg p-3\">\n                        <div className=\"flex items-center justify-between\">\n                          <div>\n                            <p className=\"text-xs font-medium text-orange-600\">Taxa de Resposta</p>\n                            <p className=\"text-xl font-bold text-orange-800\">{selectedSessionData.message_stats.response_rate}%</p>\n                          </div>\n                          <BarChart2 className=\"h-8 w-8 text-orange-500\" />\n                        </div>\n                      </div>\n                    </div>\n                    \n                    {/* Connection Quality Indicators */}\n                    <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div className=\"bg-gray-50 rounded-lg p-3\">\n                        <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Qualidade da Conexão</h5>\n                        <div className=\"flex items-center space-x-2\">\n                          <Signal className=\"h-5 w-5 text-green-500\" />\n                          <div className=\"flex-1\">\n                            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                              <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: '90%' }}></div>\n                            </div>\n                          </div>\n                          <span className=\"text-sm font-medium\">Excelente</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 rounded-lg p-3\">\n                        <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Status da API</h5>\n                        <div className=\"flex items-center space-x-2\">\n                          <Wifi className=\"h-5 w-5 text-green-500\" />\n                          <span className=\"text-sm font-medium\">Conectado</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"bg-gray-50 rounded-lg p-3\">\n                        <h5 className=\"text-xs font-medium text-gray-700 mb-2\">Saúde da Conexão</h5>\n                        <div className=\"flex items-center space-x-2\">\n                          <Gauge className=\"h-5 w-5 text-green-500\" />\n                          <span className=\"text-sm font-medium\">Ótima</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Health Status */}\n                {selectedSessionData.health_status && (\n                  <div className={`mt-6 rounded-lg p-4 ${\n                    selectedSessionData.health_status.status === 'healthy' ? 'bg-green-50' :\n                    selectedSessionData.health_status.status === 'warning' ? 'bg-yellow-50' : 'bg-red-50'\n                  }`}>\n                    <h4 className={`text-sm font-semibold mb-3 ${\n                      selectedSessionData.health_status.status === 'healthy' ? 'text-green-700' :\n                      selectedSessionData.health_status.status === 'warning' ? 'text-yellow-700' : 'text-red-700'\n                    }`}>Status de Saúde</h4>\n                    \n                    <div className=\"space-y-2\">\n                      <div className=\"flex justify-between\">\n                        <span className={`text-sm ${\n                          selectedSessionData.health_status.status === 'healthy' ? 'text-green-600' :\n                          selectedSessionData.health_status.status === 'warning' ? 'text-yellow-600' : 'text-red-600'\n                        }`}>Status:</span>\n                        <span className=\"text-sm font-medium\">{getHealthStatusBadge(selectedSessionData.health_status.status)}</span>\n                      </div>\n                      \n                      <div className=\"flex justify-between\">\n                        <span className={`text-sm ${\n                          selectedSessionData.health_status.status === 'healthy' ? 'text-green-600' :\n                          selectedSessionData.health_status.status === 'warning' ? 'text-yellow-600' : 'text-red-600'\n                        }`}>Última verificação:</span>\n                        <span className=\"text-sm font-medium\">{formatDate(selectedSessionData.health_status.last_check)}</span>\n                      </div>\n                      \n                      {selectedSessionData.health_status.issues.length > 0 && (\n                        <div className=\"mt-2\">\n                          <span className={`text-sm ${\n                            selectedSessionData.health_status.status === 'warning' ? 'text-yellow-600' : 'text-red-600'\n                          }`}>Problemas detectados:</span>\n                          <ul className=\"mt-1 space-y-1\">\n                            {selectedSessionData.health_status.issues.map((issue, index) => (\n                              <li key={index} className=\"text-sm flex items-start\">\n                                <AlertTriangle className=\"h-4 w-4 mr-1 mt-0.5 text-red-500\" />\n                                <span>{issue}</span>\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n                \n                {/* Actions */}\n                <div className=\"mt-6 flex flex-wrap gap-4\">\n                  <button className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center space-x-2\">\n                    <RefreshCw className=\"h-4 w-4\" />\n                    <span>Reconectar</span>\n                  </button>\n                  \n                  <button className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center space-x-2\">\n                    <Download className=\"h-4 w-4\" />\n                    <span>Backup da Conexão</span>\n                  </button>\n                  \n                  <button className=\"px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 flex items-center space-x-2\">\n                    <Activity className=\"h-4 w-4\" />\n                    <span>Diagnóstico Completo</span>\n                  </button>\n                  \n                  <button className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 flex items-center space-x-2\">\n                    <XCircle className=\"h-4 w-4\" />\n                    <span>Desconectar</span>\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Tips and Best Practices */}\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n        <div className=\"flex items-start space-x-3\">\n          <Zap className=\"h-6 w-6 text-blue-600 mt-0.5\" />\n          <div>\n            <h3 className=\"text-md font-semibold text-blue-900 mb-2\">\n              Dicas para Otimizar sua Integração com {getPlatformName()}\n            </h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-800\">\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Responda às mensagens dentro de 24 horas para manter a janela de mensagens ativa</span>\n              </div>\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Use mensagens de template para iniciar novas conversas</span>\n              </div>\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Mantenha seu token de acesso atualizado</span>\n              </div>\n              <div className=\"flex items-start space-x-2\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mt-0.5\" />\n                <span>Siga as políticas da plataforma para evitar bloqueios</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialMediaMonitoring;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Smartphone, \n  BarChart3, \n  MessageCircle, \n  Clock, \n  CheckCircle, \n  XCircle,\n  RefreshCw,\n  Calendar,\n  Search,\n  Filter,\n  Download,\n  Printer,\n  ArrowUpDown,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface WhatsAppSession {\n  id: string;\n  company_id: string;\n  session_name: string;\n  status: 'connected' | 'disconnected' | 'connecting' | 'error';\n  phone_number?: string;\n  last_seen?: string;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface WhatsAppStats {\n  totalMessages: number;\n  sentMessages: number;\n  receivedMessages: number;\n  mediaMessages: number;\n  activeHours: {\n    hour: number;\n    count: number;\n  }[];\n  dailyActivity: {\n    date: string;\n    count: number;\n  }[];\n  responseTime: number;\n}\n\nconst WhatsAppReport: React.FC = () => {\n  const { user } = useAuthStore();\n  const [sessions, setSessions] = useState<WhatsAppSession[]>([]);\n  const [stats, setStats] = useState<WhatsAppStats | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [dateRange, setDateRange] = useState<{start: string, end: string}>({\n    start: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0]\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n\n  useEffect(() => {\n    if (user?.companyId) {\n      loadSessions();\n      loadStats();\n    }\n  }, [user?.companyId]);\n\n  const loadSessions = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de sessões WhatsApp para relatório desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Em produção, buscar do backend\n      // const response = await api.getWhatsAppSessions(user.companyId);\n      \n      // Dados mockados para demonstração\n      const mockSessions: WhatsAppSession[] = [\n        {\n          id: '1',\n          company_id: user?.companyId || '',\n          session_name: 'WhatsApp Principal',\n          status: 'connected',\n          phone_number: '+5511999991234',\n          last_seen: new Date().toISOString(),\n          created_at: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\n          updated_at: new Date().toISOString()\n        }\n      ];\n      \n      setSessions(mockSessions);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Erro ao carregar sessões:', err);\n      setError('Não foi possível carregar as sessões do WhatsApp');\n      setIsLoading(false);\n    }\n  };\n\n  const loadStats = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de estatísticas WhatsApp desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      \n      // Em produção, buscar do backend\n      // const response = await api.getWhatsAppStats(user.companyId, dateRange);\n      \n      // Dados mockados para demonstração\n      const mockStats: WhatsAppStats = {\n        totalMessages: 1245,\n        sentMessages: 578,\n        receivedMessages: 667,\n        mediaMessages: 123,\n        activeHours: [\n          { hour: 8, count: 45 },\n          { hour: 9, count: 78 },\n          { hour: 10, count: 95 },\n          { hour: 11, count: 112 },\n          { hour: 12, count: 85 },\n          { hour: 13, count: 68 },\n          { hour: 14, count: 125 },\n          { hour: 15, count: 145 },\n          { hour: 16, count: 138 },\n          { hour: 17, count: 95 },\n          { hour: 18, count: 72 }\n        ],\n        dailyActivity: [\n          { date: '2024-06-01', count: 145 },\n          { date: '2024-06-02', count: 132 },\n          { date: '2024-06-03', count: 98 },\n          { date: '2024-06-04', count: 115 },\n          { date: '2024-06-05', count: 87 },\n          { date: '2024-06-06', count: 134 },\n          { date: '2024-06-07', count: 125 }\n        ],\n        responseTime: 125 // segundos\n      };\n      \n      setStats(mockStats);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Erro ao carregar estatísticas:', err);\n      setIsLoading(false);\n    }\n  };\n\n  const handleDateRangeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setDateRange(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleRefresh = () => {\n    loadSessions();\n    loadStats();\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleExport = () => {\n    // Implementar exportação para CSV/Excel\n    alert('Exportação para CSV será implementada em breve');\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            Conectado\n          </span>\n        );\n      case 'connecting':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n            <RefreshCw className=\"h-3 w-3 mr-1 animate-spin\" />\n            Conectando\n          </span>\n        );\n      case 'disconnected':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n            <XCircle className=\"h-3 w-3 mr-1\" />\n            Desconectado\n          </span>\n        );\n      default:\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n            <XCircle className=\"h-3 w-3 mr-1\" />\n            Erro\n          </span>\n        );\n    }\n  };\n\n  // Filtrar sessões\n  const filteredSessions = sessions.filter(session => {\n    const matchesSearch = session.phone_number?.includes(searchTerm) || \n                         session.session_name.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = filterStatus === 'all' || session.status === filterStatus;\n    return matchesSearch && matchesStatus;\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Smartphone className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Relatório de WhatsApp</h2>\n            <p className=\"text-sm text-gray-600\">Estatísticas e histórico de conexões</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleRefresh}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Atualizar\"\n          >\n            <RefreshCw className=\"h-5 w-5\" />\n          </button>\n          <button\n            onClick={handlePrint}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Imprimir\"\n          >\n            <Printer className=\"h-5 w-5\" />\n          </button>\n          <button\n            onClick={handleExport}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Exportar\"\n          >\n            <Download className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Período */}\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-5 w-5 text-gray-400\" />\n            <input\n              type=\"date\"\n              name=\"start\"\n              value={dateRange.start}\n              onChange={handleDateRangeChange}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n            <span className=\"text-gray-500\">até</span>\n            <input\n              type=\"date\"\n              name=\"end\"\n              value={dateRange.end}\n              onChange={handleDateRangeChange}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por número ou nome da sessão...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Status */}\n          <div className=\"relative\">\n            <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <select\n              value={filterStatus}\n              onChange={(e) => setFilterStatus(e.target.value)}\n              className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            >\n              <option value=\"all\">Todos os Status</option>\n              <option value=\"connected\">Conectado</option>\n              <option value=\"connecting\">Conectando</option>\n              <option value=\"disconnected\">Desconectado</option>\n              <option value=\"error\">Erro</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Estatísticas Rápidas */}\n      {stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total de Mensagens</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.totalMessages}</p>\n              </div>\n              <MessageCircle className=\"h-8 w-8 text-blue-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Mensagens Enviadas</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.sentMessages}</p>\n              </div>\n              <MessageCircle className=\"h-8 w-8 text-green-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Mensagens Recebidas</p>\n                <p className=\"text-2xl font-bold text-purple-600\">{stats.receivedMessages}</p>\n              </div>\n              <MessageCircle className=\"h-8 w-8 text-purple-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Tempo Médio Resposta</p>\n                <p className=\"text-2xl font-bold text-orange-600\">{Math.floor(stats.responseTime / 60)}m {stats.responseTime % 60}s</p>\n              </div>\n              <Clock className=\"h-8 w-8 text-orange-600\" />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tabela de Sessões */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Sessões de WhatsApp\n            </h3>\n            <div className=\"text-sm text-gray-500\">\n              {filteredSessions.length} {filteredSessions.length === 1 ? 'sessão' : 'sessões'} encontradas\n            </div>\n          </div>\n        </div>\n\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <div className=\"flex items-center space-x-1 cursor-pointer\">\n                      <span>Nome da Sessão</span>\n                      <ArrowUpDown className=\"h-3 w-3\" />\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <div className=\"flex items-center space-x-1 cursor-pointer\">\n                      <span>Número</span>\n                      <ArrowUpDown className=\"h-3 w-3\" />\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <div className=\"flex items-center space-x-1 cursor-pointer\">\n                      <span>Criado em</span>\n                      <ArrowUpDown className=\"h-3 w-3\" />\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    <div className=\"flex items-center space-x-1 cursor-pointer\">\n                      <span>Última Atividade</span>\n                      <ArrowUpDown className=\"h-3 w-3\" />\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredSessions.map((session) => (\n                  <tr key={session.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">{session.session_name}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getStatusBadge(session.status)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{session.phone_number || 'Não conectado'}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500\">\n                        {new Date(session.created_at).toLocaleDateString()}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500\">\n                        {session.last_seen ? new Date(session.last_seen).toLocaleString() : 'N/A'}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredSessions.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Smartphone className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma sessão encontrada</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterStatus !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Conecte seu WhatsApp para começar'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Estatísticas Detalhadas */}\n      {stats && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Atividade por Hora */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Atividade por Hora</h3>\n            <div className=\"h-64\">\n              <div className=\"h-full flex items-end space-x-2\">\n                {stats.activeHours.map((hour) => (\n                  <div key={hour.hour} className=\"flex-1 flex flex-col items-center\">\n                    <div \n                      className=\"w-full bg-blue-500 rounded-t\"\n                      style={{ \n                        height: `${(hour.count / Math.max(...stats.activeHours.map(h => h.count))) * 100}%`,\n                        minHeight: '4px'\n                      }}\n                    ></div>\n                    <div className=\"text-xs text-gray-500 mt-1\">{hour.hour}h</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Atividade Diária */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Atividade Diária</h3>\n            <div className=\"h-64\">\n              <div className=\"h-full flex items-end space-x-2\">\n                {stats.dailyActivity.map((day) => (\n                  <div key={day.date} className=\"flex-1 flex flex-col items-center\">\n                    <div \n                      className=\"w-full bg-green-500 rounded-t\"\n                      style={{ \n                        height: `${(day.count / Math.max(...stats.dailyActivity.map(d => d.count))) * 100}%`,\n                        minHeight: '4px'\n                      }}\n                    ></div>\n                    <div className=\"text-xs text-gray-500 mt-1\">{new Date(day.date).toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit' })}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WhatsAppReport;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  MessageCircle, \n  BarChart3, \n  Calendar, \n  Search, \n  Filter, \n  Download, \n  Printer,\n  RefreshCw,\n  ArrowUpDown,\n  CheckCircle,\n  XCircle,\n  Clock,\n  User,\n  Tag,\n  Smartphone,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface Conversation {\n  id: string;\n  customer_name: string;\n  customer_phone: string;\n  status: 'active' | 'waiting' | 'closed' | 'transferred' | 'bot';\n  assigned_agent_name?: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  tags: string[];\n  source: string;\n  created_at: string;\n  updated_at: string;\n  last_message: string;\n  last_message_time: string;\n  unread_count: number;\n  message_count?: number;\n  resolution_time?: number;\n}\n\ninterface ConversationStats {\n  total: number;\n  active: number;\n  waiting: number;\n  closed: number;\n  avgResolutionTime: number;\n  bySource: Record<string, number>;\n  byPriority: Record<string, number>;\n  byTag: Record<string, number>;\n  byAgent: Record<string, {count: number, avgResolutionTime: number}>;\n}\n\nconst ConversationsReport: React.FC = () => {\n  const { user } = useAuthStore();\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [stats, setStats] = useState<ConversationStats | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [dateRange, setDateRange] = useState<{start: string, end: string}>({\n    start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0]\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterSource, setFilterSource] = useState('all');\n  const [filterPriority, setFilterPriority] = useState('all');\n  const [sortBy, setSortBy] = useState('updated_at');\n  const [sortOrder, setSortOrder] = useState('desc');\n\n  useEffect(() => {\n    if (user?.companyId) {\n      loadConversations();\n    }\n  }, [user?.companyId, dateRange, filterStatus, filterSource, filterPriority]);\n\n  const loadConversations = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de conversas para relatório desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Em produção, buscar do backend\n      // const response = await api.getConversationsReport(user.companyId, {\n      //   dateFrom: dateRange.start,\n      //   dateTo: dateRange.end,\n      //   status: filterStatus !== 'all' ? filterStatus : undefined,\n      //   source: filterSource !== 'all' ? filterSource : undefined,\n      //   priority: filterPriority !== 'all' ? filterPriority : undefined\n      // });\n      \n      // Dados mockados para demonstração\n      const mockConversations: Conversation[] = Array.from({ length: 50 }, (_, i) => {\n        const status = ['active', 'waiting', 'closed', 'transferred'][Math.floor(Math.random() * 4)] as 'active' | 'waiting' | 'closed' | 'transferred';\n        const priority = ['low', 'medium', 'high', 'urgent'][Math.floor(Math.random() * 4)] as 'low' | 'medium' | 'high' | 'urgent';\n        const source = ['whatsapp', 'telegram', 'webchat', 'instagram'][Math.floor(Math.random() * 4)];\n        const agents = ['Carlos Lima', 'Maria Santos', 'João Silva', null];\n        const agentName = agents[Math.floor(Math.random() * agents.length)];\n        const createdAt = new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000).toISOString();\n        const updatedAt = new Date(new Date(createdAt).getTime() + Math.random() * 5 * 24 * 60 * 60 * 1000).toISOString();\n        const tags = [];\n        if (Math.random() > 0.5) tags.push('suporte');\n        if (Math.random() > 0.7) tags.push('vip');\n        if (Math.random() > 0.8) tags.push('urgente');\n        \n        return {\n          id: `conv-${i+1}`,\n          customer_name: `Cliente ${i+1}`,\n          customer_phone: `+55119${Math.floor(10000000 + Math.random() * 90000000)}`,\n          status,\n          assigned_agent_name: agentName,\n          priority,\n          tags,\n          source,\n          created_at: createdAt,\n          updated_at: updatedAt,\n          last_message: `Última mensagem da conversa ${i+1}`,\n          last_message_time: updatedAt,\n          unread_count: status === 'active' || status === 'waiting' ? Math.floor(Math.random() * 5) : 0,\n          message_count: Math.floor(5 + Math.random() * 50),\n          resolution_time: status === 'closed' ? Math.floor(1800 + Math.random() * 7200) : undefined // 30min - 2h em segundos\n        };\n      });\n      \n      // Calcular estatísticas\n      const statsData: ConversationStats = {\n        total: mockConversations.length,\n        active: mockConversations.filter(c => c.status === 'active').length,\n        waiting: mockConversations.filter(c => c.status === 'waiting').length,\n        closed: mockConversations.filter(c => c.status === 'closed').length,\n        avgResolutionTime: Math.floor(\n          mockConversations\n            .filter(c => c.resolution_time)\n            .reduce((sum, c) => sum + (c.resolution_time || 0), 0) / \n          mockConversations.filter(c => c.resolution_time).length || 0\n        ),\n        bySource: {},\n        byPriority: {},\n        byTag: {},\n        byAgent: {}\n      };\n      \n      // Calcular distribuição por fonte\n      mockConversations.forEach(c => {\n        // Por fonte\n        if (!statsData.bySource[c.source]) statsData.bySource[c.source] = 0;\n        statsData.bySource[c.source]++;\n        \n        // Por prioridade\n        if (!statsData.byPriority[c.priority]) statsData.byPriority[c.priority] = 0;\n        statsData.byPriority[c.priority]++;\n        \n        // Por tag\n        c.tags.forEach(tag => {\n          if (!statsData.byTag[tag]) statsData.byTag[tag] = 0;\n          statsData.byTag[tag]++;\n        });\n        \n        // Por agente\n        if (c.assigned_agent_name) {\n          if (!statsData.byAgent[c.assigned_agent_name]) {\n            statsData.byAgent[c.assigned_agent_name] = {\n              count: 0,\n              avgResolutionTime: 0\n            };\n          }\n          statsData.byAgent[c.assigned_agent_name].count++;\n          \n          if (c.resolution_time) {\n            const agent = statsData.byAgent[c.assigned_agent_name];\n            const totalTime = agent.avgResolutionTime * (agent.count - 1) + c.resolution_time;\n            agent.avgResolutionTime = Math.floor(totalTime / agent.count);\n          }\n        }\n      });\n      \n      setConversations(mockConversations);\n      setStats(statsData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Erro ao carregar conversas:', err);\n      setError('Não foi possível carregar o relatório de conversas');\n      setIsLoading(false);\n    }\n  };\n\n  const handleDateRangeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setDateRange(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleRefresh = () => {\n    loadConversations();\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleExport = () => {\n    // Implementar exportação para CSV/Excel\n    alert('Exportação para CSV será implementada em breve');\n  };\n\n  const handleSort = (field: string) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'active':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            Ativo\n          </span>\n        );\n      case 'waiting':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n            <Clock className=\"h-3 w-3 mr-1\" />\n            Aguardando\n          </span>\n        );\n      case 'closed':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800\">\n            <XCircle className=\"h-3 w-3 mr-1\" />\n            Fechado\n          </span>\n        );\n      case 'transferred':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n            <RefreshCw className=\"h-3 w-3 mr-1\" />\n            Transferido\n          </span>\n        );\n      default:\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n            <MessageCircle className=\"h-3 w-3 mr-1\" />\n            Bot\n          </span>\n        );\n    }\n  };\n\n  const getPriorityBadge = (priority: string) => {\n    switch (priority) {\n      case 'urgent':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n            Urgente\n          </span>\n        );\n      case 'high':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800\">\n            Alta\n          </span>\n        );\n      case 'medium':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800\">\n            Média\n          </span>\n        );\n      case 'low':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            Baixa\n          </span>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const getSourceIcon = (source: string) => {\n    switch (source) {\n      case 'whatsapp':\n        return <Smartphone className=\"h-4 w-4 text-green-600\" />;\n      case 'telegram':\n        return <MessageCircle className=\"h-4 w-4 text-blue-600\" />;\n      case 'webchat':\n        return <MessageCircle className=\"h-4 w-4 text-purple-600\" />;\n      case 'instagram':\n        return <MessageCircle className=\"h-4 w-4 text-pink-600\" />;\n      default:\n        return <MessageCircle className=\"h-4 w-4 text-gray-600\" />;\n    }\n  };\n\n  const formatDuration = (seconds?: number) => {\n    if (!seconds) return 'N/A';\n    \n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const remainingSeconds = seconds % 60;\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes}m ${remainingSeconds}s`;\n    } else if (minutes > 0) {\n      return `${minutes}m ${remainingSeconds}s`;\n    } else {\n      return `${remainingSeconds}s`;\n    }\n  };\n\n  // Filtrar e ordenar conversas\n  const filteredAndSortedConversations = conversations\n    .filter(conv => {\n      const matchesSearch = conv.customer_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           conv.customer_phone.includes(searchTerm) ||\n                           (conv.assigned_agent_name?.toLowerCase().includes(searchTerm.toLowerCase()) || false) ||\n                           conv.last_message.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           conv.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));\n      \n      const matchesStatus = filterStatus === 'all' || conv.status === filterStatus;\n      const matchesSource = filterSource === 'all' || conv.source === filterSource;\n      const matchesPriority = filterPriority === 'all' || conv.priority === filterPriority;\n      \n      return matchesSearch && matchesStatus && matchesSource && matchesPriority;\n    })\n    .sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'customer_name':\n          comparison = a.customer_name.localeCompare(b.customer_name);\n          break;\n        case 'created_at':\n          comparison = new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n          break;\n        case 'updated_at':\n          comparison = new Date(a.updated_at).getTime() - new Date(b.updated_at).getTime();\n          break;\n        case 'message_count':\n          comparison = (a.message_count || 0) - (b.message_count || 0);\n          break;\n        case 'resolution_time':\n          comparison = (a.resolution_time || 0) - (b.resolution_time || 0);\n          break;\n        default:\n          comparison = new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime();\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Relatório de Conversas</h2>\n            <p className=\"text-sm text-gray-600\">Análise e estatísticas de atendimentos</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleRefresh}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Atualizar\"\n          >\n            <RefreshCw className=\"h-5 w-5\" />\n          </button>\n          <button\n            onClick={handlePrint}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Imprimir\"\n          >\n            <Printer className=\"h-5 w-5\" />\n          </button>\n          <button\n            onClick={handleExport}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Exportar\"\n          >\n            <Download className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Período */}\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-5 w-5 text-gray-400\" />\n            <input\n              type=\"date\"\n              name=\"start\"\n              value={dateRange.start}\n              onChange={handleDateRangeChange}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n            <span className=\"text-gray-500\">até</span>\n            <input\n              type=\"date\"\n              name=\"end\"\n              value={dateRange.end}\n              onChange={handleDateRangeChange}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por cliente, agente, mensagem ou tag...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtros */}\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"active\">Ativo</option>\n            <option value=\"waiting\">Aguardando</option>\n            <option value=\"closed\">Fechado</option>\n            <option value=\"transferred\">Transferido</option>\n            <option value=\"bot\">Bot</option>\n          </select>\n\n          <select\n            value={filterSource}\n            onChange={(e) => setFilterSource(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todas as Fontes</option>\n            <option value=\"whatsapp\">WhatsApp</option>\n            <option value=\"telegram\">Telegram</option>\n            <option value=\"webchat\">Web Chat</option>\n            <option value=\"instagram\">Instagram</option>\n          </select>\n\n          <select\n            value={filterPriority}\n            onChange={(e) => setFilterPriority(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todas as Prioridades</option>\n            <option value=\"urgent\">Urgente</option>\n            <option value=\"high\">Alta</option>\n            <option value=\"medium\">Média</option>\n            <option value=\"low\">Baixa</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Estatísticas Rápidas */}\n      {stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total de Conversas</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\n              </div>\n              <MessageCircle className=\"h-8 w-8 text-blue-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Conversas Ativas</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.active}</p>\n              </div>\n              <CheckCircle className=\"h-8 w-8 text-green-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Aguardando</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">{stats.waiting}</p>\n              </div>\n              <Clock className=\"h-8 w-8 text-yellow-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Tempo Médio Resolução</p>\n                <p className=\"text-2xl font-bold text-purple-600\">{formatDuration(stats.avgResolutionTime)}</p>\n              </div>\n              <Clock className=\"h-8 w-8 text-purple-600\" />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tabela de Conversas */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Conversas\n            </h3>\n            <div className=\"text-sm text-gray-500\">\n              {filteredAndSortedConversations.length} {filteredAndSortedConversations.length === 1 ? 'conversa' : 'conversas'} encontradas\n            </div>\n          </div>\n        </div>\n\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('customer_name')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Cliente</span>\n                      {sortBy === 'customer_name' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Agente\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Fonte\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Prioridade\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('created_at')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Criada em</span>\n                      {sortBy === 'created_at' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('updated_at')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Última Atividade</span>\n                      {sortBy === 'updated_at' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('message_count')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Mensagens</span>\n                      {sortBy === 'message_count' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('resolution_time')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Tempo Resolução</span>\n                      {sortBy === 'resolution_time' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredAndSortedConversations.map((conversation) => (\n                  <tr key={conversation.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center\">\n                          <User className=\"h-5 w-5 text-gray-500\" />\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-gray-900\">{conversation.customer_name}</div>\n                          <div className=\"text-sm text-gray-500\">{conversation.customer_phone}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getStatusBadge(conversation.status)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{conversation.assigned_agent_name || 'Não atribuído'}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        {getSourceIcon(conversation.source)}\n                        <span className=\"ml-1.5 text-sm text-gray-900\">\n                          {conversation.source.charAt(0).toUpperCase() + conversation.source.slice(1)}\n                        </span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getPriorityBadge(conversation.priority)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500\">\n                        {new Date(conversation.created_at).toLocaleDateString()}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500\">\n                        {new Date(conversation.updated_at).toLocaleString()}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{conversation.message_count || 'N/A'}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{formatDuration(conversation.resolution_time)}</div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredAndSortedConversations.length === 0 && (\n          <div className=\"text-center py-12\">\n            <MessageCircle className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma conversa encontrada</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterStatus !== 'all' || filterSource !== 'all' || filterPriority !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Não há conversas no período selecionado'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Estatísticas Detalhadas */}\n      {stats && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Distribuição por Fonte */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Fonte</h3>\n            <div className=\"space-y-4\">\n              {Object.entries(stats.bySource).map(([source, count]) => (\n                <div key={source}>\n                  <div className=\"flex justify-between items-center mb-1\">\n                    <div className=\"flex items-center\">\n                      {getSourceIcon(source)}\n                      <span className=\"ml-2 text-sm font-medium text-gray-700\">\n                        {source.charAt(0).toUpperCase() + source.slice(1)}\n                      </span>\n                    </div>\n                    <span className=\"text-sm text-gray-500\">{count} ({Math.round((count / stats.total) * 100)}%)</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${\n                        source === 'whatsapp' ? 'bg-green-500' :\n                        source === 'telegram' ? 'bg-blue-500' :\n                        source === 'webchat' ? 'bg-purple-500' :\n                        'bg-pink-500'\n                      }`}\n                      style={{ width: `${(count / stats.total) * 100}%` }}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Distribuição por Prioridade */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Prioridade</h3>\n            <div className=\"space-y-4\">\n              {Object.entries(stats.byPriority).map(([priority, count]) => (\n                <div key={priority}>\n                  <div className=\"flex justify-between items-center mb-1\">\n                    <span className=\"text-sm font-medium text-gray-700\">\n                      {priority === 'urgent' ? 'Urgente' :\n                       priority === 'high' ? 'Alta' :\n                       priority === 'medium' ? 'Média' :\n                       'Baixa'}\n                    </span>\n                    <span className=\"text-sm text-gray-500\">{count} ({Math.round((count / stats.total) * 100)}%)</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${\n                        priority === 'urgent' ? 'bg-red-500' :\n                        priority === 'high' ? 'bg-orange-500' :\n                        priority === 'medium' ? 'bg-yellow-500' :\n                        'bg-green-500'\n                      }`}\n                      style={{ width: `${(count / stats.total) * 100}%` }}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Estatísticas por Agente */}\n      {stats && Object.keys(stats.byAgent).length > 0 && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Desempenho por Agente</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Agente\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Conversas Atendidas\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Tempo Médio de Resolução\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    % do Total\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {Object.entries(stats.byAgent).map(([agent, data]) => (\n                  <tr key={agent} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">{agent}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{data.count}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{formatDuration(data.avgResolutionTime)}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{Math.round((data.count / stats.total) * 100)}%</div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n\n      {/* Distribuição por Tag */}\n      {stats && Object.keys(stats.byTag).length > 0 && (\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tags Mais Utilizadas</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {Object.entries(stats.byTag)\n              .sort((a, b) => b[1] - a[1])\n              .slice(0, 9)\n              .map(([tag, count]) => (\n                <div key={tag} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                  <div className=\"flex items-center\">\n                    <Tag className=\"h-4 w-4 text-blue-600 mr-2\" />\n                    <span className=\"text-sm font-medium text-gray-900\">{tag}</span>\n                  </div>\n                  <span className=\"text-sm text-gray-500\">{count} conversas</span>\n                </div>\n              ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ConversationsReport;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Users, \n  BarChart3, \n  Calendar, \n  Search, \n  Filter, \n  Download, \n  Printer,\n  RefreshCw,\n  ArrowUpDown,\n  CheckCircle,\n  XCircle,\n  Clock,\n  User,\n  Shield,\n  Star,\n  Activity,\n  MessageCircle,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface UserData {\n  id: string;\n  name: string;\n  email: string;\n  role: 'admin' | 'supervisor' | 'agent';\n  status: 'active' | 'inactive';\n  department?: string;\n  created_at: string;\n  last_login?: string;\n  avatar?: string;\n  stats?: {\n    conversationsToday: number;\n    conversationsTotal: number;\n    avgResponseTime: number;\n    avgResolutionTime: number;\n    satisfaction: number;\n    messagesCount: number;\n  };\n}\n\ninterface UserStats {\n  total: number;\n  active: number;\n  inactive: number;\n  byRole: Record<string, number>;\n  byDepartment: Record<string, number>;\n  topPerformers: {\n    byConversations: UserData[];\n    byResponseTime: UserData[];\n    bySatisfaction: UserData[];\n  };\n}\n\nconst UsersReport: React.FC = () => {\n  const { user } = useAuthStore();\n  const [users, setUsers] = useState<UserData[]>([]);\n  const [stats, setStats] = useState<UserStats | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [dateRange, setDateRange] = useState<{start: string, end: string}>({\n    start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0]\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterRole, setFilterRole] = useState('all');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterDepartment, setFilterDepartment] = useState('all');\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  useEffect(() => {\n    if (user?.companyId) {\n      loadUsers();\n    }\n  }, [user?.companyId]);\n\n  const loadUsers = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de usuários para relatório desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Em produção, buscar do backend\n      // const response = await api.getUsersReport(user.companyId, {\n      //   dateFrom: dateRange.start,\n      //   dateTo: dateRange.end\n      // });\n      \n      // Dados mockados para demonstração\n      const departments = ['Atendimento', 'Vendas', 'Suporte', 'Financeiro', 'Marketing'];\n      \n      const mockUsers: UserData[] = Array.from({ length: 20 }, (_, i) => {\n        const role = i === 0 ? 'admin' : i < 3 ? 'supervisor' : 'agent';\n        const status = Math.random() > 0.1 ? 'active' : 'inactive';\n        const department = departments[Math.floor(Math.random() * departments.length)];\n        const createdAt = new Date(Date.now() - Math.random() * 365 * 24 * 60 * 60 * 1000).toISOString();\n        const lastLogin = status === 'active' ? \n          new Date(Date.now() - Math.random() * 7 * 24 * 60 * 60 * 1000).toISOString() : \n          new Date(Date.now() - Math.random() * 90 * 24 * 60 * 60 * 1000).toISOString();\n        \n        // Estatísticas apenas para agentes ativos\n        const stats = role === 'agent' && status === 'active' ? {\n          conversationsToday: Math.floor(Math.random() * 20),\n          conversationsTotal: Math.floor(100 + Math.random() * 900),\n          avgResponseTime: Math.floor(30 + Math.random() * 120),\n          avgResolutionTime: Math.floor(300 + Math.random() * 1800),\n          satisfaction: 3 + Math.random() * 2,\n          messagesCount: Math.floor(500 + Math.random() * 5000)\n        } : undefined;\n        \n        return {\n          id: `user-${i+1}`,\n          name: `Usuário ${i+1}`,\n          email: `usuario${i+1}@empresa.com`,\n          role,\n          status,\n          department,\n          created_at: createdAt,\n          last_login: lastLogin,\n          stats\n        };\n      });\n      \n      // Calcular estatísticas\n      const statsData: UserStats = {\n        total: mockUsers.length,\n        active: mockUsers.filter(u => u.status === 'active').length,\n        inactive: mockUsers.filter(u => u.status === 'inactive').length,\n        byRole: {},\n        byDepartment: {},\n        topPerformers: {\n          byConversations: [],\n          byResponseTime: [],\n          bySatisfaction: []\n        }\n      };\n      \n      // Calcular distribuição por role\n      mockUsers.forEach(u => {\n        // Por role\n        if (!statsData.byRole[u.role]) statsData.byRole[u.role] = 0;\n        statsData.byRole[u.role]++;\n        \n        // Por departamento\n        if (u.department) {\n          if (!statsData.byDepartment[u.department]) statsData.byDepartment[u.department] = 0;\n          statsData.byDepartment[u.department]++;\n        }\n      });\n      \n      // Top performers\n      const agentsWithStats = mockUsers.filter(u => u.stats && u.role === 'agent' && u.status === 'active');\n      \n      statsData.topPerformers.byConversations = [...agentsWithStats]\n        .sort((a, b) => (b.stats?.conversationsTotal || 0) - (a.stats?.conversationsTotal || 0))\n        .slice(0, 5);\n        \n      statsData.topPerformers.byResponseTime = [...agentsWithStats]\n        .sort((a, b) => (a.stats?.avgResponseTime || 999) - (b.stats?.avgResponseTime || 999))\n        .slice(0, 5);\n        \n      statsData.topPerformers.bySatisfaction = [...agentsWithStats]\n        .sort((a, b) => (b.stats?.satisfaction || 0) - (a.stats?.satisfaction || 0))\n        .slice(0, 5);\n      \n      setUsers(mockUsers);\n      setStats(statsData);\n      setIsLoading(false);\n    } catch (err) {\n      console.error('Erro ao carregar usuários:', err);\n      setError('Não foi possível carregar o relatório de usuários');\n      setIsLoading(false);\n    }\n  };\n\n  const handleDateRangeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setDateRange(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleRefresh = () => {\n    loadUsers();\n  };\n\n  const handlePrint = () => {\n    window.print();\n  };\n\n  const handleExport = () => {\n    // Implementar exportação para CSV/Excel\n    alert('Exportação para CSV será implementada em breve');\n  };\n\n  const handleSort = (field: string) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  const getRoleBadge = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800\">\n            <Shield className=\"h-3 w-3 mr-1\" />\n            Administrador\n          </span>\n        );\n      case 'supervisor':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800\">\n            <Star className=\"h-3 w-3 mr-1\" />\n            Supervisor\n          </span>\n        );\n      case 'agent':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <User className=\"h-3 w-3 mr-1\" />\n            Agente\n          </span>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'active':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\n            <CheckCircle className=\"h-3 w-3 mr-1\" />\n            Ativo\n          </span>\n        );\n      case 'inactive':\n        return (\n          <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n            <XCircle className=\"h-3 w-3 mr-1\" />\n            Inativo\n          </span>\n        );\n      default:\n        return null;\n    }\n  };\n\n  const formatDuration = (seconds?: number) => {\n    if (!seconds) return 'N/A';\n    \n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    \n    return `${minutes}m ${remainingSeconds}s`;\n  };\n\n  // Filtrar e ordenar usuários\n  const filteredAndSortedUsers = users\n    .filter(u => {\n      const matchesSearch = u.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           u.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           (u.department?.toLowerCase().includes(searchTerm.toLowerCase()) || false);\n      \n      const matchesRole = filterRole === 'all' || u.role === filterRole;\n      const matchesStatus = filterStatus === 'all' || u.status === filterStatus;\n      const matchesDepartment = filterDepartment === 'all' || u.department === filterDepartment;\n      \n      return matchesSearch && matchesRole && matchesStatus && matchesDepartment;\n    })\n    .sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'name':\n          comparison = a.name.localeCompare(b.name);\n          break;\n        case 'email':\n          comparison = a.email.localeCompare(b.email);\n          break;\n        case 'role':\n          comparison = a.role.localeCompare(b.role);\n          break;\n        case 'department':\n          comparison = (a.department || '').localeCompare(b.department || '');\n          break;\n        case 'created_at':\n          comparison = new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n          break;\n        case 'last_login':\n          comparison = new Date(a.last_login || 0).getTime() - new Date(b.last_login || 0).getTime();\n          break;\n        case 'conversations':\n          comparison = (a.stats?.conversationsTotal || 0) - (b.stats?.conversationsTotal || 0);\n          break;\n        case 'response_time':\n          comparison = (a.stats?.avgResponseTime || 999) - (b.stats?.avgResponseTime || 999);\n          break;\n        case 'satisfaction':\n          comparison = (a.stats?.satisfaction || 0) - (b.stats?.satisfaction || 0);\n          break;\n        default:\n          comparison = a.name.localeCompare(b.name);\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n  // Obter lista de departamentos únicos\n  const departments = Array.from(new Set(users.map(u => u.department).filter(Boolean))) as string[];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <BarChart3 className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Relatório de Usuários</h2>\n            <p className=\"text-sm text-gray-600\">Análise e estatísticas da equipe</p>\n          </div>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleRefresh}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Atualizar\"\n          >\n            <RefreshCw className=\"h-5 w-5\" />\n          </button>\n          <button\n            onClick={handlePrint}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Imprimir\"\n          >\n            <Printer className=\"h-5 w-5\" />\n          </button>\n          <button\n            onClick={handleExport}\n            className=\"p-2 text-gray-600 hover:text-gray-900 rounded-md hover:bg-gray-100\"\n            title=\"Exportar\"\n          >\n            <Download className=\"h-5 w-5\" />\n          </button>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Período */}\n          <div className=\"flex items-center space-x-2\">\n            <Calendar className=\"h-5 w-5 text-gray-400\" />\n            <input\n              type=\"date\"\n              name=\"start\"\n              value={dateRange.start}\n              onChange={handleDateRangeChange}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n            <span className=\"text-gray-500\">até</span>\n            <input\n              type=\"date\"\n              name=\"end\"\n              value={dateRange.end}\n              onChange={handleDateRangeChange}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, email ou departamento...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtros */}\n          <select\n            value={filterRole}\n            onChange={(e) => setFilterRole(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Cargos</option>\n            <option value=\"admin\">Administrador</option>\n            <option value=\"supervisor\">Supervisor</option>\n            <option value=\"agent\">Agente</option>\n          </select>\n\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"active\">Ativo</option>\n            <option value=\"inactive\">Inativo</option>\n          </select>\n\n          {departments.length > 0 && (\n            <select\n              value={filterDepartment}\n              onChange={(e) => setFilterDepartment(e.target.value)}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            >\n              <option value=\"all\">Todos os Departamentos</option>\n              {departments.map(dept => (\n                <option key={dept} value={dept}>{dept}</option>\n              ))}\n            </select>\n          )}\n        </div>\n      </div>\n\n      {/* Estatísticas Rápidas */}\n      {stats && (\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total de Usuários</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{stats.total}</p>\n              </div>\n              <Users className=\"h-8 w-8 text-blue-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Usuários Ativos</p>\n                <p className=\"text-2xl font-bold text-green-600\">{stats.active}</p>\n              </div>\n              <CheckCircle className=\"h-8 w-8 text-green-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Agentes</p>\n                <p className=\"text-2xl font-bold text-purple-600\">{stats.byRole.agent || 0}</p>\n              </div>\n              <User className=\"h-8 w-8 text-purple-600\" />\n            </div>\n          </div>\n          <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Administradores</p>\n                <p className=\"text-2xl font-bold text-orange-600\">{(stats.byRole.admin || 0) + (stats.byRole.supervisor || 0)}</p>\n              </div>\n              <Shield className=\"h-8 w-8 text-orange-600\" />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Tabela de Usuários */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"px-6 py-4 border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex items-center justify-between\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">\n              Usuários\n            </h3>\n            <div className=\"text-sm text-gray-500\">\n              {filteredAndSortedUsers.length} {filteredAndSortedUsers.length === 1 ? 'usuário' : 'usuários'} encontrados\n            </div>\n          </div>\n        </div>\n\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('name')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Nome</span>\n                      {sortBy === 'name' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('email')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Email</span>\n                      {sortBy === 'email' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('role')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Cargo</span>\n                      {sortBy === 'role' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('department')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Departamento</span>\n                      {sortBy === 'department' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('created_at')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Criado em</span>\n                      {sortBy === 'created_at' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('last_login')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Último Login</span>\n                      {sortBy === 'last_login' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('conversations')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Conversas</span>\n                      {sortBy === 'conversations' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => handleSort('response_time')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Tempo Resposta</span>\n                      {sortBy === 'response_time' && (\n                        <ArrowUpDown className=\"h-3 w-3\" />\n                      )}\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredAndSortedUsers.map((userData) => (\n                  <tr key={userData.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center\">\n                          {userData.avatar ? (\n                            <img src={userData.avatar} alt={userData.name} className=\"h-10 w-10 rounded-full\" />\n                          ) : (\n                            <User className=\"h-5 w-5 text-gray-500\" />\n                          )}\n                        </div>\n                        <div className=\"ml-4\">\n                          <div className=\"text-sm font-medium text-gray-900\">{userData.name}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{userData.email}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getRoleBadge(userData.role)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getStatusBadge(userData.status)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{userData.department || 'N/A'}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500\">\n                        {new Date(userData.created_at).toLocaleDateString()}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-500\">\n                        {userData.last_login ? new Date(userData.last_login).toLocaleString() : 'Nunca'}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{userData.stats?.conversationsTotal || 'N/A'}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{userData.stats ? formatDuration(userData.stats.avgResponseTime) : 'N/A'}</div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredAndSortedUsers.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Users className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum usuário encontrado</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterRole !== 'all' || filterStatus !== 'all' || filterDepartment !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Não há usuários no período selecionado'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Estatísticas Detalhadas */}\n      {stats && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Distribuição por Cargo */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Cargo</h3>\n            <div className=\"space-y-4\">\n              {Object.entries(stats.byRole).map(([role, count]) => (\n                <div key={role}>\n                  <div className=\"flex justify-between items-center mb-1\">\n                    <span className=\"text-sm font-medium text-gray-700\">\n                      {role === 'admin' ? 'Administrador' :\n                       role === 'supervisor' ? 'Supervisor' :\n                       'Agente'}\n                    </span>\n                    <span className=\"text-sm text-gray-500\">{count} ({Math.round((count / stats.total) * 100)}%)</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${\n                        role === 'admin' ? 'bg-purple-500' :\n                        role === 'supervisor' ? 'bg-blue-500' :\n                        'bg-green-500'\n                      }`}\n                      style={{ width: `${(count / stats.total) * 100}%` }}\n                    />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Distribuição por Departamento */}\n          {Object.keys(stats.byDepartment).length > 0 && (\n            <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Departamento</h3>\n              <div className=\"space-y-4\">\n                {Object.entries(stats.byDepartment).map(([department, count]) => (\n                  <div key={department}>\n                    <div className=\"flex justify-between items-center mb-1\">\n                      <span className=\"text-sm font-medium text-gray-700\">{department}</span>\n                      <span className=\"text-sm text-gray-500\">{count} ({Math.round((count / stats.total) * 100)}%)</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div\n                        className=\"h-2 rounded-full bg-indigo-500\"\n                        style={{ width: `${(count / stats.total) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Top Performers */}\n      {stats && stats.topPerformers.byConversations.length > 0 && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Top por Conversas */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <MessageCircle className=\"h-5 w-5 mr-2 text-blue-500\" />\n              Top por Conversas\n            </h3>\n            <div className=\"space-y-4\">\n              {stats.topPerformers.byConversations.map((user, index) => (\n                <div key={user.id} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                      index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : index === 2 ? 'bg-orange-500' : 'bg-blue-500'\n                    }`}>\n                      {index + 1}\n                    </div>\n                    <span className=\"ml-2 text-sm font-medium text-gray-900\">{user.name}</span>\n                  </div>\n                  <span className=\"text-sm font-medium text-gray-900\">{user.stats?.conversationsTotal}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Top por Tempo de Resposta */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <Clock className=\"h-5 w-5 mr-2 text-green-500\" />\n              Top por Tempo de Resposta\n            </h3>\n            <div className=\"space-y-4\">\n              {stats.topPerformers.byResponseTime.map((user, index) => (\n                <div key={user.id} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                      index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : index === 2 ? 'bg-orange-500' : 'bg-blue-500'\n                    }`}>\n                      {index + 1}\n                    </div>\n                    <span className=\"ml-2 text-sm font-medium text-gray-900\">{user.name}</span>\n                  </div>\n                  <span className=\"text-sm font-medium text-gray-900\">{formatDuration(user.stats?.avgResponseTime)}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Top por Satisfação */}\n          <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4 flex items-center\">\n              <Star className=\"h-5 w-5 mr-2 text-yellow-500\" />\n              Top por Satisfação\n            </h3>\n            <div className=\"space-y-4\">\n              {stats.topPerformers.bySatisfaction.map((user, index) => (\n                <div key={user.id} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                      index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : index === 2 ? 'bg-orange-500' : 'bg-blue-500'\n                    }`}>\n                      {index + 1}\n                    </div>\n                    <span className=\"ml-2 text-sm font-medium text-gray-900\">{user.name}</span>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-sm font-medium text-gray-900 mr-1\">{user.stats?.satisfaction.toFixed(1)}</span>\n                    <Star className=\"h-3 w-3 text-yellow-500 fill-current\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UsersReport;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Users, \n  Search, \n  Filter, \n  Download, \n  RefreshCw, \n  Tag,\n  Phone,\n  Mail,\n  Calendar,\n  Clock,\n  CheckCircle,\n  XCircle,\n  ArrowUpDown,\n  FileSpreadsheet,\n  Printer,\n  Loader2\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface Contact {\n  id: string;\n  name: string;\n  phone: string;\n  email?: string;\n  status: 'active' | 'blocked' | 'inactive';\n  tags: string[];\n  last_interaction?: string;\n  created_at: string;\n  custom_fields: Record<string, any>;\n}\n\nconst ContactsReport: React.FC = () => {\n  const { user } = useAuthStore();\n  const [contacts, setContacts] = useState<Contact[]>([]);\n  const [filteredContacts, setFilteredContacts] = useState<Contact[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterTag, setFilterTag] = useState('all');\n  const [sortBy, setSortBy] = useState<'name' | 'created_at' | 'last_interaction'>('last_interaction');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [availableTags, setAvailableTags] = useState<string[]>([]);\n  const [showExportOptions, setShowExportOptions] = useState(false);\n\n  // Carregar contatos ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadContacts();\n    }\n  }, [user?.companyId]);\n\n  // Filtrar contatos quando os filtros mudarem\n  useEffect(() => {\n    filterContacts();\n  }, [contacts, searchTerm, filterStatus, filterTag, sortBy, sortOrder]);\n\n  // Extrair tags disponíveis dos contatos\n  useEffect(() => {\n    if (contacts.length > 0) {\n      const tags = new Set<string>();\n      contacts.forEach(contact => {\n        contact.tags.forEach(tag => tags.add(tag));\n      });\n      setAvailableTags(Array.from(tags));\n    }\n  }, [contacts]);\n\n  // Carregar contatos da API\n  const loadContacts = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de contatos desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getContacts(user.companyId);\n      \n      if (response.success && response.data) {\n        setContacts(response.data);\n      }\n    } catch (err) {\n      console.error('Erro ao carregar contatos:', err);\n      setError('Não foi possível carregar os contatos. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Filtrar e ordenar contatos\n  const filterContacts = () => {\n    let filtered = [...contacts];\n    \n    // Aplicar busca\n    if (searchTerm) {\n      filtered = filtered.filter(contact => \n        contact.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        contact.phone.includes(searchTerm) ||\n        (contact.email && contact.email.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n    \n    // Aplicar filtro de status\n    if (filterStatus !== 'all') {\n      filtered = filtered.filter(contact => contact.status === filterStatus);\n    }\n    \n    // Aplicar filtro de tag\n    if (filterTag !== 'all') {\n      filtered = filtered.filter(contact => contact.tags.includes(filterTag));\n    }\n    \n    // Ordenar\n    filtered.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'name':\n          comparison = a.name.localeCompare(b.name);\n          break;\n        case 'created_at':\n          comparison = new Date(a.created_at).getTime() - new Date(b.created_at).getTime();\n          break;\n        case 'last_interaction':\n          const aTime = a.last_interaction ? new Date(a.last_interaction).getTime() : 0;\n          const bTime = b.last_interaction ? new Date(b.last_interaction).getTime() : 0;\n          comparison = aTime - bTime;\n          break;\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n    \n    setFilteredContacts(filtered);\n  };\n\n  // Alternar ordem de classificação\n  const toggleSort = (field: 'name' | 'created_at' | 'last_interaction') => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  // Formatar data\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n\n  // Formatar hora\n  const formatTime = (dateString?: string) => {\n    if (!dateString) return '';\n    return new Date(dateString).toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Exportar para CSV\n  const exportToCSV = () => {\n    const headers = ['Nome', 'Telefone', 'Email', 'Status', 'Tags', 'Última Interação', 'Criado em'];\n    const csvRows = [headers];\n    \n    filteredContacts.forEach(contact => {\n      csvRows.push([\n        contact.name,\n        contact.phone,\n        contact.email || '',\n        contact.status,\n        contact.tags.join('; '),\n        contact.last_interaction ? formatDate(contact.last_interaction) : 'N/A',\n        formatDate(contact.created_at)\n      ]);\n    });\n    \n    const csvContent = csvRows.map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `contatos_${new Date().toISOString().split('T')[0]}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Imprimir relatório\n  const printReport = () => {\n    window.print();\n  };\n\n  // Obter cor do status\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'blocked': return 'bg-red-100 text-red-800';\n      case 'inactive': return 'bg-gray-100 text-gray-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Obter ícone do status\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'active': return <CheckCircle className=\"h-3 w-3 mr-1\" />;\n      case 'blocked': return <XCircle className=\"h-3 w-3 mr-1\" />;\n      case 'inactive': return <XCircle className=\"h-3 w-3 mr-1\" />;\n      default: return null;\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Users className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Relatório de Contatos</h2>\n            <p className=\"text-sm text-gray-600\">\n              {filteredContacts.length} contatos encontrados\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setShowExportOptions(!showExportOptions)}\n            className=\"px-3 py-2 bg-white border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 flex items-center space-x-2\"\n          >\n            <Download className=\"h-4 w-4\" />\n            <span>Exportar</span>\n          </button>\n          \n          <button\n            onClick={loadContacts}\n            disabled={isLoading}\n            className=\"p-2 text-gray-600 hover:text-gray-900 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            title=\"Atualizar\"\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-4 w-4\" />\n            )}\n          </button>\n          \n          {showExportOptions && (\n            <div className=\"absolute right-0 mt-32 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n              <div className=\"py-1\">\n                <button\n                  onClick={exportToCSV}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <FileSpreadsheet className=\"h-4 w-4 mr-2\" />\n                  Exportar CSV\n                </button>\n                <button\n                  onClick={printReport}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <Printer className=\"h-4 w-4 mr-2\" />\n                  Imprimir\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, telefone ou email...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Status */}\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"active\">Ativos</option>\n            <option value=\"blocked\">Bloqueados</option>\n            <option value=\"inactive\">Inativos</option>\n          </select>\n\n          {/* Filtro de Tag */}\n          <select\n            value={filterTag}\n            onChange={(e) => setFilterTag(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todas as Tags</option>\n            {availableTags.map(tag => (\n              <option key={tag} value={tag}>{tag}</option>\n            ))}\n          </select>\n        </div>\n      </div>\n\n      {/* Tabela de Contatos */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('name')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Nome</span>\n                      {sortBy === 'name' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Contato\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Tags\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('last_interaction')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Última Interação</span>\n                      {sortBy === 'last_interaction' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('created_at')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Criado em</span>\n                      {sortBy === 'created_at' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredContacts.map((contact) => (\n                  <tr key={contact.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">{contact.name}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex flex-col space-y-1\">\n                        <div className=\"flex items-center space-x-1 text-sm text-gray-500\">\n                          <Phone className=\"h-4 w-4 text-gray-400\" />\n                          <span>{contact.phone}</span>\n                        </div>\n                        {contact.email && (\n                          <div className=\"flex items-center space-x-1 text-sm text-gray-500\">\n                            <Mail className=\"h-4 w-4 text-gray-400\" />\n                            <span>{contact.email}</span>\n                          </div>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(contact.status)}`}>\n                        {getStatusIcon(contact.status)}\n                        {contact.status === 'active' ? 'Ativo' : \n                         contact.status === 'blocked' ? 'Bloqueado' : 'Inativo'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex flex-wrap gap-1\">\n                        {contact.tags.map(tag => (\n                          <span \n                            key={tag} \n                            className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs bg-blue-100 text-blue-800\"\n                          >\n                            <Tag className=\"h-3 w-3 mr-1\" />\n                            {tag}\n                          </span>\n                        ))}\n                        {contact.tags.length === 0 && (\n                          <span className=\"text-xs text-gray-500\">Sem tags</span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {contact.last_interaction ? (\n                        <div className=\"flex flex-col\">\n                          <div className=\"flex items-center space-x-1 text-sm text-gray-900\">\n                            <Calendar className=\"h-4 w-4 text-gray-400\" />\n                            <span>{formatDate(contact.last_interaction)}</span>\n                          </div>\n                          <div className=\"flex items-center space-x-1 text-xs text-gray-500\">\n                            <Clock className=\"h-3 w-3 text-gray-400\" />\n                            <span>{formatTime(contact.last_interaction)}</span>\n                          </div>\n                        </div>\n                      ) : (\n                        <span className=\"text-sm text-gray-500\">Nunca</span>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1 text-sm text-gray-500\">\n                        <Calendar className=\"h-4 w-4 text-gray-400\" />\n                        <span>{formatDate(contact.created_at)}</span>\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredContacts.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Users className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum contato encontrado</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterStatus !== 'all' || filterTag !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Comece adicionando contatos ao sistema'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Resumo */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-gray-900\">{contacts.length}</div>\n          <div className=\"text-sm text-gray-500\">Total de Contatos</div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {contacts.filter(c => c.status === 'active').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Contatos Ativos</div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {contacts.filter(c => c.status === 'blocked').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Contatos Bloqueados</div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {availableTags.length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Tags Utilizadas</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsReport;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Send, \n  Search, \n  Filter, \n  Download, \n  RefreshCw, \n  Calendar,\n  Clock,\n  CheckCircle,\n  XCircle,\n  ArrowUpDown,\n  FileSpreadsheet,\n  Printer,\n  Loader2,\n  Users,\n  MessageCircle,\n  TrendingUp,\n  BarChart3,\n  Eye,\n  Target,\n  AlertTriangle,\n  Play,\n  Pause\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface Campaign {\n  id: string;\n  name: string;\n  description: string;\n  status: 'draft' | 'scheduled' | 'running' | 'paused' | 'completed' | 'cancelled';\n  type: 'promotional' | 'welcome' | 'retargeting' | 'survey' | 'product_launch';\n  channel: 'whatsapp' | 'email' | 'sms';\n  createdAt: string;\n  scheduledAt?: string;\n  startedAt?: string;\n  completedAt?: string;\n  createdBy: string;\n  template: {\n    subject: string;\n    content: string;\n  };\n  targetAudience: {\n    total: number;\n    segments: string[];\n  };\n  stats: {\n    sent: number;\n    delivered: number;\n    read: number;\n    clicked: number;\n    converted: number;\n    revenue: number;\n  };\n}\n\nconst CampaignsReport: React.FC = () => {\n  const { user } = useAuthStore();\n  const [campaigns, setCampaigns] = useState<Campaign[]>([]);\n  const [filteredCampaigns, setFilteredCampaigns] = useState<Campaign[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [filterType, setFilterType] = useState('all');\n  const [sortBy, setSortBy] = useState<'name' | 'createdAt' | 'status'>('createdAt');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [showExportOptions, setShowExportOptions] = useState(false);\n\n  // Carregar campanhas ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadCampaigns();\n    }\n  }, [user?.companyId]);\n\n  // Filtrar campanhas quando os filtros mudarem\n  useEffect(() => {\n    filterCampaigns();\n  }, [campaigns, searchTerm, filterStatus, filterType, sortBy, sortOrder]);\n\n  // Carregar campanhas da API\n  const loadCampaigns = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de campanhas desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getCampaigns(user.companyId);\n      \n      if (response.success && response.data) {\n        setCampaigns(response.data);\n      }\n    } catch (err) {\n      console.error('Erro ao carregar campanhas:', err);\n      setError('Não foi possível carregar as campanhas. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Filtrar e ordenar campanhas\n  const filterCampaigns = () => {\n    let filtered = [...campaigns];\n    \n    // Aplicar busca\n    if (searchTerm) {\n      filtered = filtered.filter(campaign => \n        campaign.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        campaign.description.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    \n    // Aplicar filtro de status\n    if (filterStatus !== 'all') {\n      filtered = filtered.filter(campaign => campaign.status === filterStatus);\n    }\n    \n    // Aplicar filtro de tipo\n    if (filterType !== 'all') {\n      filtered = filtered.filter(campaign => campaign.type === filterType);\n    }\n    \n    // Ordenar\n    filtered.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'name':\n          comparison = a.name.localeCompare(b.name);\n          break;\n        case 'createdAt':\n          comparison = new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n          break;\n        case 'status':\n          comparison = a.status.localeCompare(b.status);\n          break;\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n    \n    setFilteredCampaigns(filtered);\n  };\n\n  // Alternar ordem de classificação\n  const toggleSort = (field: 'name' | 'createdAt' | 'status') => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  // Formatar data\n  const formatDate = (dateString?: string) => {\n    if (!dateString) return 'N/A';\n    return new Date(dateString).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n\n  // Formatar hora\n  const formatTime = (dateString?: string) => {\n    if (!dateString) return '';\n    return new Date(dateString).toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Exportar para CSV\n  const exportToCSV = () => {\n    const headers = ['Nome', 'Descrição', 'Status', 'Tipo', 'Canal', 'Criado em', 'Agendado para', 'Enviados', 'Entregues', 'Lidos', 'Cliques', 'Conversões', 'Receita'];\n    const csvRows = [headers];\n    \n    filteredCampaigns.forEach(campaign => {\n      csvRows.push([\n        campaign.name,\n        campaign.description,\n        campaign.status,\n        campaign.type,\n        campaign.channel,\n        formatDate(campaign.createdAt),\n        campaign.scheduledAt ? formatDate(campaign.scheduledAt) : 'N/A',\n        campaign.stats.sent.toString(),\n        campaign.stats.delivered.toString(),\n        campaign.stats.read.toString(),\n        campaign.stats.clicked.toString(),\n        campaign.stats.converted.toString(),\n        `R$ ${campaign.stats.revenue.toLocaleString()}`\n      ]);\n    });\n    \n    const csvContent = csvRows.map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `campanhas_${new Date().toISOString().split('T')[0]}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Imprimir relatório\n  const printReport = () => {\n    window.print();\n  };\n\n  // Obter cor do status\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'running': return 'bg-green-100 text-green-800';\n      case 'paused': return 'bg-yellow-100 text-yellow-800';\n      case 'completed': return 'bg-blue-100 text-blue-800';\n      case 'scheduled': return 'bg-purple-100 text-purple-800';\n      case 'cancelled': return 'bg-red-100 text-red-800';\n      case 'draft': return 'bg-gray-100 text-gray-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Obter ícone do status\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'running': return <Play className=\"h-3 w-3 mr-1\" />;\n      case 'paused': return <Pause className=\"h-3 w-3 mr-1\" />;\n      case 'completed': return <CheckCircle className=\"h-3 w-3 mr-1\" />;\n      case 'scheduled': return <Calendar className=\"h-3 w-3 mr-1\" />;\n      case 'cancelled': return <XCircle className=\"h-3 w-3 mr-1\" />;\n      case 'draft': return <Eye className=\"h-3 w-3 mr-1\" />;\n      default: return null;\n    }\n  };\n\n  // Obter cor do tipo\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'promotional': return 'bg-orange-100 text-orange-800';\n      case 'welcome': return 'bg-green-100 text-green-800';\n      case 'retargeting': return 'bg-blue-100 text-blue-800';\n      case 'survey': return 'bg-purple-100 text-purple-800';\n      case 'product_launch': return 'bg-pink-100 text-pink-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Calcular taxa de abertura\n  const calculateOpenRate = (read: number, delivered: number) => {\n    if (delivered === 0) return 0;\n    return ((read / delivered) * 100).toFixed(1);\n  };\n\n  // Calcular taxa de clique\n  const calculateClickRate = (clicked: number, read: number) => {\n    if (read === 0) return 0;\n    return ((clicked / read) * 100).toFixed(1);\n  };\n\n  // Calcular taxa de conversão\n  const calculateConversionRate = (converted: number, clicked: number) => {\n    if (clicked === 0) return 0;\n    return ((converted / clicked) * 100).toFixed(1);\n  };\n\n  // Calcular totais\n  const calculateTotals = () => {\n    return filteredCampaigns.reduce((acc, campaign) => ({\n      sent: acc.sent + campaign.stats.sent,\n      delivered: acc.delivered + campaign.stats.delivered,\n      read: acc.read + campaign.stats.read,\n      clicked: acc.clicked + campaign.stats.clicked,\n      converted: acc.converted + campaign.stats.converted,\n      revenue: acc.revenue + campaign.stats.revenue\n    }), { sent: 0, delivered: 0, read: 0, clicked: 0, converted: 0, revenue: 0 });\n  };\n\n  const totals = calculateTotals();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Send className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Relatório de Campanhas</h2>\n            <p className=\"text-sm text-gray-600\">\n              {filteredCampaigns.length} campanhas encontradas\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setShowExportOptions(!showExportOptions)}\n            className=\"px-3 py-2 bg-white border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 flex items-center space-x-2\"\n          >\n            <Download className=\"h-4 w-4\" />\n            <span>Exportar</span>\n          </button>\n          \n          <button\n            onClick={loadCampaigns}\n            disabled={isLoading}\n            className=\"p-2 text-gray-600 hover:text-gray-900 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            title=\"Atualizar\"\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-4 w-4\" />\n            )}\n          </button>\n          \n          {showExportOptions && (\n            <div className=\"absolute right-0 mt-32 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n              <div className=\"py-1\">\n                <button\n                  onClick={exportToCSV}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <FileSpreadsheet className=\"h-4 w-4 mr-2\" />\n                  Exportar CSV\n                </button>\n                <button\n                  onClick={printReport}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <Printer className=\"h-4 w-4 mr-2\" />\n                  Imprimir\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Estatísticas Gerais */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Enviadas</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{totals.sent.toLocaleString()}</p>\n            </div>\n            <Send className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Entregues</p>\n              <p className=\"text-2xl font-bold text-green-600\">{totals.delivered.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {totals.sent > 0 ? ((totals.delivered / totals.sent) * 100).toFixed(1) : 0}% taxa entrega\n              </p>\n            </div>\n            <CheckCircle className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Lidas</p>\n              <p className=\"text-2xl font-bold text-purple-600\">{totals.read.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {calculateOpenRate(totals.read, totals.delivered)}% taxa abertura\n              </p>\n            </div>\n            <Eye className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Cliques</p>\n              <p className=\"text-2xl font-bold text-orange-600\">{totals.clicked.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {calculateClickRate(totals.clicked, totals.read)}% taxa clique\n              </p>\n            </div>\n            <Target className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Conversões</p>\n              <p className=\"text-2xl font-bold text-red-600\">{totals.converted.toLocaleString()}</p>\n              <p className=\"text-xs text-gray-500\">\n                {calculateConversionRate(totals.converted, totals.clicked)}% conversão\n              </p>\n            </div>\n            <TrendingUp className=\"h-8 w-8 text-red-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Receita</p>\n              <p className=\"text-2xl font-bold text-green-600\">\n                R$ {(totals.revenue / 1000).toFixed(0)}K\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                R$ {(totals.revenue / totals.converted || 0).toFixed(0)} por conversão\n              </p>\n            </div>\n            <BarChart3 className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar campanhas...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Status */}\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"running\">Em Execução</option>\n            <option value=\"paused\">Pausada</option>\n            <option value=\"completed\">Concluída</option>\n            <option value=\"scheduled\">Agendada</option>\n            <option value=\"draft\">Rascunho</option>\n            <option value=\"cancelled\">Cancelada</option>\n          </select>\n\n          {/* Filtro de Tipo */}\n          <select\n            value={filterType}\n            onChange={(e) => setFilterType(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Tipos</option>\n            <option value=\"promotional\">Promocional</option>\n            <option value=\"welcome\">Boas-vindas</option>\n            <option value=\"retargeting\">Retargeting</option>\n            <option value=\"survey\">Pesquisa</option>\n            <option value=\"product_launch\">Lançamento</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Tabela de Campanhas */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('name')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Campanha</span>\n                      {sortBy === 'name' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('status')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Status</span>\n                      {sortBy === 'status' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Tipo\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Audiência\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Performance\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Receita\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('createdAt')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Criada em</span>\n                      {sortBy === 'createdAt' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredCampaigns.map((campaign) => (\n                  <tr key={campaign.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">{campaign.name}</div>\n                      <div className=\"text-sm text-gray-500\">{campaign.description}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(campaign.status)}`}>\n                        {getStatusIcon(campaign.status)}\n                        {campaign.status === 'running' ? 'Em Execução' : \n                         campaign.status === 'paused' ? 'Pausada' : \n                         campaign.status === 'completed' ? 'Concluída' : \n                         campaign.status === 'scheduled' ? 'Agendada' : \n                         campaign.status === 'cancelled' ? 'Cancelada' : 'Rascunho'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getTypeColor(campaign.type)}`}>\n                        {campaign.type === 'promotional' ? 'Promocional' : \n                         campaign.type === 'welcome' ? 'Boas-vindas' : \n                         campaign.type === 'retargeting' ? 'Retargeting' : \n                         campaign.type === 'survey' ? 'Pesquisa' : 'Lançamento'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1\">\n                        <Users className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-900\">{campaign.targetAudience.total}</span>\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {campaign.targetAudience.segments.join(', ')}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Send className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-600\">\n                            {campaign.stats.sent.toLocaleString()} enviadas\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Eye className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-600\">\n                            {calculateOpenRate(campaign.stats.read, campaign.stats.delivered)}% abertura\n                          </span>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <Target className=\"h-3 w-3 text-gray-400\" />\n                          <span className=\"text-xs text-gray-600\">\n                            {calculateConversionRate(campaign.stats.converted, campaign.stats.clicked)}% conversão\n                          </span>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        R$ {campaign.stats.revenue.toLocaleString()}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {campaign.stats.converted} conversões\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1\">\n                        <Calendar className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-500\">\n                          {formatDate(campaign.createdAt)}\n                        </span>\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        por {campaign.createdBy}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredCampaigns.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Send className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma campanha encontrada</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterStatus !== 'all' || filterType !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Comece criando sua primeira campanha'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Resumo por Status */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Campanhas por Status</h3>\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-green-500\"></span>\n                <span className=\"text-sm text-gray-600\">Em Execução</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.status === 'running').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-yellow-500\"></span>\n                <span className=\"text-sm text-gray-600\">Pausadas</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.status === 'paused').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n                <span className=\"text-sm text-gray-600\">Concluídas</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.status === 'completed').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-purple-500\"></span>\n                <span className=\"text-sm text-gray-600\">Agendadas</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.status === 'scheduled').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-gray-500\"></span>\n                <span className=\"text-sm text-gray-600\">Rascunhos</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.status === 'draft').length}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Campanhas por Tipo</h3>\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n                <span className=\"text-sm text-gray-600\">Promocional</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.type === 'promotional').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-green-500\"></span>\n                <span className=\"text-sm text-gray-600\">Boas-vindas</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.type === 'welcome').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n                <span className=\"text-sm text-gray-600\">Retargeting</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.type === 'retargeting').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-purple-500\"></span>\n                <span className=\"text-sm text-gray-600\">Pesquisa</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.type === 'survey').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-pink-500\"></span>\n                <span className=\"text-sm text-gray-600\">Lançamento</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {campaigns.filter(c => c.type === 'product_launch').length}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <h3 className=\"text-sm font-semibold text-gray-900 mb-3\">Métricas de Performance</h3>\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Taxa de Entrega</span>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {totals.sent > 0 ? ((totals.delivered / totals.sent) * 100).toFixed(1) : 0}%\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Taxa de Abertura</span>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {calculateOpenRate(totals.read, totals.delivered)}%\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Taxa de Clique</span>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {calculateClickRate(totals.clicked, totals.read)}%\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Taxa de Conversão</span>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {calculateConversionRate(totals.converted, totals.clicked)}%\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-sm text-gray-600\">Receita por Envio</span>\n              <span className=\"text-sm font-medium text-gray-900\">\n                R$ {totals.sent > 0 ? (totals.revenue / totals.sent).toFixed(2) : '0.00'}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CampaignsReport;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Tag, \n  Search, \n  Filter, \n  Download, \n  RefreshCw, \n  ArrowUpDown,\n  FileSpreadsheet,\n  Printer,\n  Loader2,\n  BarChart3,\n  Hash,\n  Calendar,\n  Activity,\n  Users,\n  Clock,\n  Palette\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface TagTemplate {\n  id: string;\n  name: string;\n  color: string;\n  category: 'status' | 'priority' | 'department' | 'custom' | 'ai-generated';\n  description?: string;\n  isDefault: boolean;\n  usageCount: number;\n  createdAt: Date;\n  createdBy: string;\n  lastUsed?: Date;\n  aiSuggested?: boolean;\n  keywords?: string[];\n}\n\nconst TagsReport: React.FC = () => {\n  const { user } = useAuthStore();\n  const [tags, setTags] = useState<TagTemplate[]>([]);\n  const [filteredTags, setFilteredTags] = useState<TagTemplate[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterCategory, setFilterCategory] = useState('all');\n  const [sortBy, setSortBy] = useState<'name' | 'usage' | 'created' | 'category'>('usage');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [showExportOptions, setShowExportOptions] = useState(false);\n\n  // Carregar tags ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadTags();\n    }\n  }, [user?.companyId]);\n\n  // Filtrar tags quando os filtros mudarem\n  useEffect(() => {\n    filterTags();\n  }, [tags, searchTerm, filterCategory, sortBy, sortOrder]);\n\n  // Carregar tags da API\n  const loadTags = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de tags para relatório desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      const response = await api.getTags(user.companyId);\n      \n      if (response.success && response.data) {\n        // Converter dados da API para o formato do componente\n        const formattedTags: TagTemplate[] = response.data.map((tag: any) => ({\n          id: tag.id,\n          name: tag.name,\n          color: tag.color,\n          category: tag.category,\n          description: tag.description,\n          isDefault: tag.is_default,\n          usageCount: tag.usage_count || 0,\n          createdAt: new Date(tag.created_at),\n          createdBy: tag.created_by_name || 'Sistema',\n          lastUsed: tag.last_used ? new Date(tag.last_used) : undefined,\n          aiSuggested: tag.category === 'ai-generated',\n          keywords: tag.keywords || []\n        }));\n        \n        setTags(formattedTags);\n      }\n    } catch (err) {\n      console.error('Erro ao carregar tags:', err);\n      setError('Não foi possível carregar as tags. Tente novamente mais tarde.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Filtrar e ordenar tags\n  const filterTags = () => {\n    let filtered = tags.filter(tag => {\n      const matchesSearch = tag.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           tag.description?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           tag.keywords?.some(keyword => keyword.toLowerCase().includes(searchTerm.toLowerCase()));\n      const matchesCategory = filterCategory === 'all' || tag.category === filterCategory;\n      return matchesSearch && matchesCategory;\n    });\n\n    // Ordenar\n    filtered.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'name':\n          comparison = a.name.localeCompare(b.name);\n          break;\n        case 'usage':\n          comparison = a.usageCount - b.usageCount;\n          break;\n        case 'created':\n          comparison = a.createdAt.getTime() - b.createdAt.getTime();\n          break;\n        case 'category':\n          comparison = a.category.localeCompare(b.category);\n          break;\n        default:\n          comparison = a.usageCount - b.usageCount;\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n    setFilteredTags(filtered);\n  };\n\n  // Alternar ordem de classificação\n  const toggleSort = (field: 'name' | 'usage' | 'created' | 'category') => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  // Formatar data\n  const formatDate = (date: Date) => {\n    return date.toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n  };\n\n  // Exportar para CSV\n  const exportToCSV = () => {\n    const headers = ['Nome', 'Categoria', 'Descrição', 'Cor', 'Usos', 'Padrão', 'Criado em', 'Criado por', 'Palavras-chave'];\n    const csvRows = [headers];\n    \n    filteredTags.forEach(tag => {\n      csvRows.push([\n        tag.name,\n        tag.category,\n        tag.description || '',\n        tag.color,\n        tag.usageCount.toString(),\n        tag.isDefault ? 'Sim' : 'Não',\n        formatDate(tag.createdAt),\n        tag.createdBy,\n        tag.keywords?.join('; ') || ''\n      ]);\n    });\n    \n    const csvContent = csvRows.map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `tags_${new Date().toISOString().split('T')[0]}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Imprimir relatório\n  const printReport = () => {\n    window.print();\n  };\n\n  // Obter nome da categoria\n  const getCategoryName = (category: string) => {\n    switch (category) {\n      case 'status': return 'Status';\n      case 'priority': return 'Prioridade';\n      case 'department': return 'Departamento';\n      case 'custom': return 'Personalizada';\n      case 'ai-generated': return 'IA Gerada';\n      default: return category;\n    }\n  };\n\n  // Obter cor da categoria\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case 'status': return 'bg-green-100 text-green-800';\n      case 'priority': return 'bg-red-100 text-red-800';\n      case 'department': return 'bg-blue-100 text-blue-800';\n      case 'custom': return 'bg-purple-100 text-purple-800';\n      case 'ai-generated': return 'bg-indigo-100 text-indigo-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Calcular estatísticas\n  const calculateStats = () => {\n    const totalTags = tags.length;\n    const activelyUsed = tags.filter(tag => tag.usageCount > 0).length;\n    \n    const categoryDistribution = tags.reduce((acc, tag) => {\n      acc[tag.category] = (acc[tag.category] || 0) + 1;\n      return acc;\n    }, {} as { [key: string]: number });\n    \n    const mostUsed = [...tags]\n      .sort((a, b) => b.usageCount - a.usageCount)\n      .slice(0, 5);\n    \n    return {\n      totalTags,\n      activelyUsed,\n      categoryDistribution,\n      mostUsed\n    };\n  };\n\n  const stats = calculateStats();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Tag className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Relatório de Tags</h2>\n            <p className=\"text-sm text-gray-600\">\n              {filteredTags.length} tags encontradas\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={() => setShowExportOptions(!showExportOptions)}\n            className=\"px-3 py-2 bg-white border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 flex items-center space-x-2\"\n          >\n            <Download className=\"h-4 w-4\" />\n            <span>Exportar</span>\n          </button>\n          \n          <button\n            onClick={loadTags}\n            disabled={isLoading}\n            className=\"p-2 text-gray-600 hover:text-gray-900 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            title=\"Atualizar\"\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-4 w-4\" />\n            )}\n          </button>\n          \n          {showExportOptions && (\n            <div className=\"absolute right-0 mt-32 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n              <div className=\"py-1\">\n                <button\n                  onClick={exportToCSV}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <FileSpreadsheet className=\"h-4 w-4 mr-2\" />\n                  Exportar CSV\n                </button>\n                <button\n                  onClick={printReport}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <Printer className=\"h-4 w-4 mr-2\" />\n                  Imprimir\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Estatísticas Rápidas */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Total de Tags</p>\n              <p className=\"text-2xl font-bold text-gray-900\">{stats.totalTags}</p>\n            </div>\n            <Tag className=\"h-8 w-8 text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Em Uso</p>\n              <p className=\"text-2xl font-bold text-green-600\">{stats.activelyUsed}</p>\n              <p className=\"text-xs text-gray-500\">\n                {stats.totalTags > 0 ? ((stats.activelyUsed / stats.totalTags) * 100).toFixed(1) : 0}% do total\n              </p>\n            </div>\n            <Activity className=\"h-8 w-8 text-green-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Geradas por IA</p>\n              <p className=\"text-2xl font-bold text-purple-600\">\n                {stats.categoryDistribution['ai-generated'] || 0}\n              </p>\n            </div>\n            <BarChart3 className=\"h-8 w-8 text-purple-600\" />\n          </div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Mais Usada</p>\n              <p className=\"text-lg font-bold text-orange-600\">\n                {stats.mostUsed[0]?.usageCount || 0} usos\n              </p>\n              <p className=\"text-xs text-gray-500\">{stats.mostUsed[0]?.name || 'N/A'}</p>\n            </div>\n            <Activity className=\"h-8 w-8 text-orange-600\" />\n          </div>\n        </div>\n      </div>\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, descrição ou palavras-chave...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Categoria */}\n          <select\n            value={filterCategory}\n            onChange={(e) => setFilterCategory(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todas as Categorias</option>\n            <option value=\"status\">Status</option>\n            <option value=\"priority\">Prioridade</option>\n            <option value=\"department\">Departamento</option>\n            <option value=\"custom\">Personalizada</option>\n            <option value=\"ai-generated\">IA Gerada</option>\n          </select>\n\n          {/* Ordenação */}\n          <select\n            value={`${sortBy}-${sortOrder}`}\n            onChange={(e) => {\n              const [field, order] = e.target.value.split('-');\n              setSortBy(field as typeof sortBy);\n              setSortOrder(order as typeof sortOrder);\n            }}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"usage-desc\">Mais Usadas</option>\n            <option value=\"usage-asc\">Menos Usadas</option>\n            <option value=\"name-asc\">Nome A-Z</option>\n            <option value=\"name-desc\">Nome Z-A</option>\n            <option value=\"created-desc\">Mais Recentes</option>\n            <option value=\"created-asc\">Mais Antigas</option>\n            <option value=\"category-asc\">Categoria A-Z</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Tabela de Tags */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('name')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Tag</span>\n                      {sortBy === 'name' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('category')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Categoria</span>\n                      {sortBy === 'category' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Descrição\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cor\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('usage')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Usos</span>\n                      {sortBy === 'usage' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('created')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Criado em</span>\n                      {sortBy === 'created' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredTags.map((tag) => (\n                  <tr key={tag.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span \n                          className=\"inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium\"\n                          style={{ \n                            backgroundColor: tag.color + '20', \n                            color: tag.color,\n                            border: `1px solid ${tag.color}40`\n                          }}\n                        >\n                          <Hash className=\"h-3 w-3\" />\n                          {tag.name}\n                        </span>\n                        {tag.isDefault && (\n                          <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs bg-gray-100 text-gray-800\">\n                            Padrão\n                          </span>\n                        )}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getCategoryColor(tag.category)}`}>\n                        {getCategoryName(tag.category)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4\">\n                      <div className=\"text-sm text-gray-900\">\n                        {tag.description || <span className=\"text-gray-500 italic\">Sem descrição</span>}\n                      </div>\n                      {tag.keywords && tag.keywords.length > 0 && (\n                        <div className=\"mt-1 flex flex-wrap gap-1\">\n                          {tag.keywords.map((keyword, index) => (\n                            <span key={index} className=\"inline-flex items-center px-1.5 py-0.5 rounded text-xs bg-gray-100 text-gray-700\">\n                              {keyword}\n                            </span>\n                          ))}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-2\">\n                        <div \n                          className=\"w-6 h-6 rounded-full border border-gray-200\"\n                          style={{ backgroundColor: tag.color }}\n                        ></div>\n                        <span className=\"text-sm text-gray-500 font-mono\">{tag.color}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm font-medium text-gray-900\">{tag.usageCount}</div>\n                      <div className=\"text-xs text-gray-500\">\n                        {tag.usageCount === 0 ? 'Nunca usada' : \n                         tag.usageCount === 1 ? 'Usada 1 vez' : \n                         `Usada ${tag.usageCount} vezes`}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1\">\n                        <Calendar className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-500\">\n                          {formatDate(tag.createdAt)}\n                        </span>\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        por {tag.createdBy}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredTags.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Tag className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma tag encontrada</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterCategory !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'Comece criando sua primeira tag'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Resumo por Categoria */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Categoria</h3>\n          <div className=\"space-y-3\">\n            {Object.entries(stats.categoryDistribution).map(([category, count]) => (\n              <div key={category} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-2\">\n                  <span className={`px-2 py-1 rounded-md text-xs font-medium ${getCategoryColor(category)}`}>\n                    {getCategoryName(category)}\n                  </span>\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <div className=\"w-32 bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"h-2 rounded-full bg-blue-600\"\n                      style={{ width: `${(count / stats.totalTags) * 100}%` }}\n                    ></div>\n                  </div>\n                  <span className=\"text-sm font-medium text-gray-900\">\n                    {count} ({((count / stats.totalTags) * 100).toFixed(1)}%)\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Tags Mais Usadas</h3>\n          <div className=\"space-y-3\">\n            {stats.mostUsed.map((tag, index) => (\n              <div key={tag.id} className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className={`w-6 h-6 rounded-full flex items-center justify-center text-xs font-bold text-white ${\n                    index === 0 ? 'bg-yellow-500' : index === 1 ? 'bg-gray-400' : index === 2 ? 'bg-orange-500' : 'bg-blue-500'\n                  }`}>\n                    {index + 1}\n                  </div>\n                  <span \n                    className=\"inline-flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium\"\n                    style={{ \n                      backgroundColor: tag.color + '20', \n                      color: tag.color,\n                      border: `1px solid ${tag.color}40`\n                    }}\n                  >\n                    <Hash className=\"h-2 w-2\" />\n                    {tag.name}\n                  </span>\n                </div>\n                <span className=\"text-sm font-medium text-gray-900\">{tag.usageCount} usos</span>\n              </div>\n            ))}\n            {stats.mostUsed.length === 0 && (\n              <div className=\"text-center py-4\">\n                <p className=\"text-sm text-gray-500\">Nenhuma tag com uso registrado</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TagsReport;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { \n  Users, \n  Search, \n  Filter, \n  Download, \n  RefreshCw, \n  ArrowUpDown,\n  FileSpreadsheet,\n  Printer,\n  Loader2,\n  Clock,\n  AlertTriangle,\n  CheckCircle,\n  Target,\n  Activity,\n  BarChart3,\n  Gauge,\n  UserCheck,\n  MessageCircle,\n  Calendar\n} from 'lucide-react';\nimport api from '../../lib/api';\n\ninterface QueueItem {\n  id: string;\n  customerName: string;\n  customerPhone: string;\n  customerEmail?: string;\n  customerAvatar?: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  department: string;\n  category: string;\n  source: 'whatsapp' | 'webchat' | 'telegram' | 'phone' | 'email';\n  waitTime: number;\n  estimatedWaitTime: number;\n  aiPredictedWaitTime?: number;\n  assignedAgent?: string;\n  status: 'waiting' | 'assigned' | 'in_progress' | 'escalated' | 'transferred';\n  tags: string[];\n  customerValue: 'bronze' | 'silver' | 'gold' | 'platinum';\n  lastInteraction?: Date;\n  urgencyScore: number;\n  satisfactionHistory: number;\n  conversationPreview: string;\n  createdAt: Date;\n}\n\ninterface Agent {\n  id: string;\n  name: string;\n  status: 'online' | 'busy' | 'away' | 'offline';\n  currentLoad: number;\n  maxLoad: number;\n  avgResponseTime: number;\n  satisfactionScore: number;\n  efficiency: number;\n}\n\ninterface QueueStats {\n  totalInQueue: number;\n  avgWaitTime: number;\n  criticalItems: number;\n  agentsAvailable: number;\n  throughputPerHour: number;\n  satisfactionTrend: number;\n  escalationRate: number;\n  aiAccuracy: number;\n}\n\nconst QueueReport: React.FC = () => {\n  const { user } = useAuthStore();\n  const [queueItems, setQueueItems] = useState<QueueItem[]>([]);\n  const [filteredItems, setFilteredItems] = useState<QueueItem[]>([]);\n  const [agents, setAgents] = useState<Agent[]>([]);\n  const [queueStats, setQueueStats] = useState<QueueStats>({\n    totalInQueue: 0,\n    avgWaitTime: 0,\n    criticalItems: 0,\n    agentsAvailable: 0,\n    throughputPerHour: 0,\n    satisfactionTrend: 0,\n    escalationRate: 0,\n    aiAccuracy: 0\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterPriority, setFilterPriority] = useState('all');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [sortBy, setSortBy] = useState<'urgency' | 'waitTime' | 'customerValue'>('urgency');\n  const [sortOrder, setSortOrder] = useState<'asc' | 'desc'>('desc');\n  const [showExportOptions, setShowExportOptions] = useState(false);\n  const [dateRange, setDateRange] = useState<'today' | 'yesterday' | 'week' | 'month'>('today');\n\n  // Carregar dados da fila ao iniciar\n  useEffect(() => {\n    if (user?.companyId) {\n      loadQueueData();\n      loadAgents();\n    }\n  }, [user?.companyId, dateRange]);\n\n  // Filtrar itens quando os filtros mudarem\n  useEffect(() => {\n    filterQueueItems();\n  }, [queueItems, searchTerm, filterPriority, filterStatus, sortBy, sortOrder]);\n\n  // Carregar dados da fila da API\n  const loadQueueData = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de dados da fila desabilitado em desenvolvimento');\n      setIsLoading(false);\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Aqui seria a chamada real para a API\n      // const response = await api.getQueueItems(user.companyId, dateRange);\n      \n      // Simulação de dados para demonstração\n      setTimeout(() => {\n        const mockQueueItems: QueueItem[] = [\n          {\n            id: '1',\n            customerName: 'Maria Silva',\n            customerPhone: '+55 11 99999-1234',\n            customerEmail: 'maria@email.com',\n            customerAvatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=40&h=40&fit=crop&crop=face',\n            priority: 'urgent',\n            department: 'vendas',\n            category: 'produto-premium',\n            source: 'whatsapp',\n            waitTime: 15,\n            estimatedWaitTime: 3,\n            aiPredictedWaitTime: 2,\n            status: 'waiting',\n            tags: ['vip', 'produto-premium', 'urgente', 'hot-lead'],\n            customerValue: 'platinum',\n            urgencyScore: 95,\n            satisfactionHistory: 4.8,\n            conversationPreview: 'Preciso de informações sobre o produto premium que vi no site...',\n            createdAt: new Date(Date.now() - 15 * 60 * 1000)\n          },\n          {\n            id: '2',\n            customerName: 'João Santos',\n            customerPhone: '+55 11 98888-5678',\n            priority: 'high',\n            department: 'suporte',\n            category: 'problema-tecnico',\n            source: 'webchat',\n            waitTime: 8,\n            estimatedWaitTime: 5,\n            aiPredictedWaitTime: 4,\n            assignedAgent: 'Carlos Lima',\n            status: 'assigned',\n            tags: ['problema-tecnico', 'cliente-recorrente', 'escalado'],\n            customerValue: 'gold',\n            urgencyScore: 78,\n            satisfactionHistory: 4.2,\n            conversationPreview: 'Estou com dificuldades para acessar minha conta...',\n            createdAt: new Date(Date.now() - 8 * 60 * 1000)\n          },\n          {\n            id: '3',\n            customerName: 'Ana Costa',\n            customerPhone: '+55 11 97777-9012',\n            priority: 'medium',\n            department: 'vendas',\n            category: 'informacoes-gerais',\n            source: 'whatsapp',\n            waitTime: 22,\n            estimatedWaitTime: 8,\n            aiPredictedWaitTime: 6,\n            status: 'waiting',\n            tags: ['novo-cliente', 'interessado', 'lead-qualificado'],\n            customerValue: 'bronze',\n            urgencyScore: 45,\n            satisfactionHistory: 0,\n            conversationPreview: 'Gostaria de saber mais sobre os planos disponíveis...',\n            createdAt: new Date(Date.now() - 22 * 60 * 1000)\n          }\n        ];\n        \n        setQueueItems(mockQueueItems);\n        \n        // Estatísticas da fila\n        setQueueStats({\n          totalInQueue: mockQueueItems.length,\n          avgWaitTime: Math.round(mockQueueItems.reduce((sum, item) => sum + item.waitTime, 0) / mockQueueItems.length),\n          criticalItems: mockQueueItems.filter(item => item.urgencyScore >= 80).length,\n          agentsAvailable: 3,\n          throughputPerHour: 45,\n          satisfactionTrend: 4.6,\n          escalationRate: 12,\n          aiAccuracy: 87\n        });\n        \n        setIsLoading(false);\n      }, 500);\n      \n    } catch (err) {\n      console.error('Erro ao carregar dados da fila:', err);\n      setError('Não foi possível carregar os dados da fila. Tente novamente mais tarde.');\n      setIsLoading(false);\n    }\n  };\n\n  // Carregar agentes da API\n  const loadAgents = async () => {\n    // Proteção para desenvolvimento\n    if (import.meta.env.DEV) {\n      console.log('🚫 Carregamento de agentes desabilitado em desenvolvimento');\n      return;\n    }\n\n    if (!user?.companyId) return;\n    \n    try {\n      // Aqui seria a chamada real para a API\n      // const response = await api.getAgents(user.companyId);\n      \n      // Simulação de dados para demonstração\n      setTimeout(() => {\n        setAgents([\n          {\n            id: 'agent-1',\n            name: 'Carlos Lima',\n            status: 'online',\n            currentLoad: 3,\n            maxLoad: 5,\n            avgResponseTime: 95,\n            satisfactionScore: 4.7,\n            efficiency: 92\n          },\n          {\n            id: 'agent-2',\n            name: 'Maria Santos',\n            status: 'busy',\n            currentLoad: 5,\n            maxLoad: 5,\n            avgResponseTime: 78,\n            satisfactionScore: 4.9,\n            efficiency: 96\n          },\n          {\n            id: 'agent-3',\n            name: 'Ana Costa',\n            status: 'online',\n            currentLoad: 2,\n            maxLoad: 4,\n            avgResponseTime: 112,\n            satisfactionScore: 4.5,\n            efficiency: 89\n          }\n        ]);\n      }, 500);\n      \n    } catch (err) {\n      console.error('Erro ao carregar agentes:', err);\n    }\n  };\n\n  // Filtrar e ordenar itens da fila\n  const filterQueueItems = () => {\n    let filtered = [...queueItems];\n    \n    // Aplicar busca\n    if (searchTerm) {\n      filtered = filtered.filter(item => \n        item.customerName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.customerPhone.includes(searchTerm) ||\n        (item.customerEmail && item.customerEmail.toLowerCase().includes(searchTerm.toLowerCase())) ||\n        item.conversationPreview.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()))\n      );\n    }\n    \n    // Aplicar filtro de prioridade\n    if (filterPriority !== 'all') {\n      filtered = filtered.filter(item => item.priority === filterPriority);\n    }\n    \n    // Aplicar filtro de status\n    if (filterStatus !== 'all') {\n      filtered = filtered.filter(item => item.status === filterStatus);\n    }\n    \n    // Ordenar\n    filtered.sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'urgency':\n          comparison = a.urgencyScore - b.urgencyScore;\n          break;\n        case 'waitTime':\n          comparison = a.waitTime - b.waitTime;\n          break;\n        case 'customerValue':\n          const valueOrder = { platinum: 4, gold: 3, silver: 2, bronze: 1 };\n          comparison = (valueOrder[a.customerValue] || 0) - (valueOrder[b.customerValue] || 0);\n          break;\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n    \n    setFilteredItems(filtered);\n  };\n\n  // Alternar ordem de classificação\n  const toggleSort = (field: 'urgency' | 'waitTime' | 'customerValue') => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('desc');\n    }\n  };\n\n  // Formatar tempo de espera\n  const formatWaitTime = (minutes: number) => {\n    if (minutes < 60) {\n      return `${minutes} min`;\n    } else {\n      const hours = Math.floor(minutes / 60);\n      const mins = minutes % 60;\n      return `${hours}h ${mins}min`;\n    }\n  };\n\n  // Exportar para CSV\n  const exportToCSV = () => {\n    const headers = ['Cliente', 'Telefone', 'Email', 'Prioridade', 'Departamento', 'Categoria', 'Fonte', 'Tempo de Espera', 'Status', 'Tags', 'Valor do Cliente', 'Urgência', 'Criado em'];\n    const csvRows = [headers];\n    \n    filteredItems.forEach(item => {\n      csvRows.push([\n        item.customerName,\n        item.customerPhone,\n        item.customerEmail || '',\n        item.priority,\n        item.department,\n        item.category,\n        item.source,\n        formatWaitTime(item.waitTime),\n        item.status,\n        item.tags.join('; '),\n        item.customerValue,\n        item.urgencyScore.toString(),\n        item.createdAt.toLocaleString('pt-BR')\n      ]);\n    });\n    \n    const csvContent = csvRows.map(row => row.map(cell => `\"${cell}\"`).join(',')).join('\\n');\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `fila_atendimento_${new Date().toISOString().split('T')[0]}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Imprimir relatório\n  const printReport = () => {\n    window.print();\n  };\n\n  // Obter cor da prioridade\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'urgent': return 'bg-red-100 text-red-800';\n      case 'high': return 'bg-orange-100 text-orange-800';\n      case 'medium': return 'bg-yellow-100 text-yellow-800';\n      case 'low': return 'bg-green-100 text-green-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Obter cor do status\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'waiting': return 'bg-yellow-100 text-yellow-800';\n      case 'assigned': return 'bg-blue-100 text-blue-800';\n      case 'in_progress': return 'bg-green-100 text-green-800';\n      case 'escalated': return 'bg-red-100 text-red-800';\n      case 'transferred': return 'bg-purple-100 text-purple-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Obter nome do status\n  const getStatusName = (status: string) => {\n    switch (status) {\n      case 'waiting': return 'Aguardando';\n      case 'assigned': return 'Atribuído';\n      case 'in_progress': return 'Em Progresso';\n      case 'escalated': return 'Escalado';\n      case 'transferred': return 'Transferido';\n      default: return status;\n    }\n  };\n\n  // Obter nome da prioridade\n  const getPriorityName = (priority: string) => {\n    switch (priority) {\n      case 'urgent': return 'Urgente';\n      case 'high': return 'Alta';\n      case 'medium': return 'Média';\n      case 'low': return 'Baixa';\n      default: return priority;\n    }\n  };\n\n  // Obter cor do valor do cliente\n  const getCustomerValueColor = (value: string) => {\n    switch (value) {\n      case 'platinum': return 'bg-purple-100 text-purple-800';\n      case 'gold': return 'bg-yellow-100 text-yellow-800';\n      case 'silver': return 'bg-gray-100 text-gray-800';\n      case 'bronze': return 'bg-orange-100 text-orange-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Obter cor da urgência\n  const getUrgencyColor = (score: number) => {\n    if (score >= 80) return 'text-red-600';\n    if (score >= 60) return 'text-orange-600';\n    if (score >= 40) return 'text-yellow-600';\n    return 'text-green-600';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Users className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Relatório da Fila de Atendimento</h2>\n            <p className=\"text-sm text-gray-600\">\n              {filteredItems.length} itens encontrados\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <select\n            value={dateRange}\n            onChange={(e) => setDateRange(e.target.value as typeof dateRange)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"today\">Hoje</option>\n            <option value=\"yesterday\">Ontem</option>\n            <option value=\"week\">Esta Semana</option>\n            <option value=\"month\">Este Mês</option>\n          </select>\n          \n          <button\n            onClick={() => setShowExportOptions(!showExportOptions)}\n            className=\"px-3 py-2 bg-white border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 flex items-center space-x-2\"\n          >\n            <Download className=\"h-4 w-4\" />\n            <span>Exportar</span>\n          </button>\n          \n          <button\n            onClick={loadQueueData}\n            disabled={isLoading}\n            className=\"p-2 text-gray-600 hover:text-gray-900 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n            title=\"Atualizar\"\n          >\n            {isLoading ? (\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\n            ) : (\n              <RefreshCw className=\"h-4 w-4\" />\n            )}\n          </button>\n          \n          {showExportOptions && (\n            <div className=\"absolute right-0 mt-32 w-48 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\n              <div className=\"py-1\">\n                <button\n                  onClick={exportToCSV}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <FileSpreadsheet className=\"h-4 w-4 mr-2\" />\n                  Exportar CSV\n                </button>\n                <button\n                  onClick={printReport}\n                  className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\n                >\n                  <Printer className=\"h-4 w-4 mr-2\" />\n                  Imprimir\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      {/* Métricas Rápidas */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-3\">\n        <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-blue-900\">{queueStats.totalInQueue}</div>\n          <div className=\"text-xs text-blue-700\">Na Fila</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-green-50 to-green-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-green-900\">{queueStats.avgWaitTime}min</div>\n          <div className=\"text-xs text-green-700\">Tempo Médio</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-red-50 to-red-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-red-900\">{queueStats.criticalItems}</div>\n          <div className=\"text-xs text-red-700\">Críticos</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-purple-50 to-purple-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-purple-900\">{queueStats.agentsAvailable}</div>\n          <div className=\"text-xs text-purple-700\">Agentes Livres</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-yellow-50 to-yellow-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-yellow-900\">{queueStats.throughputPerHour}</div>\n          <div className=\"text-xs text-yellow-700\">Por Hora</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-indigo-50 to-indigo-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-indigo-900\">{queueStats.satisfactionTrend}</div>\n          <div className=\"text-xs text-indigo-700\">Satisfação</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-orange-50 to-orange-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-orange-900\">{queueStats.escalationRate}%</div>\n          <div className=\"text-xs text-orange-700\">Escalação</div>\n        </div>\n        <div className=\"bg-gradient-to-r from-teal-50 to-teal-100 p-3 rounded-lg\">\n          <div className=\"text-lg font-bold text-teal-900\">{queueStats.aiAccuracy}%</div>\n          <div className=\"text-xs text-teal-700\">IA Precisão</div>\n        </div>\n      </div>\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, telefone, tags...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Prioridade */}\n          <select\n            value={filterPriority}\n            onChange={(e) => setFilterPriority(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todas as Prioridades</option>\n            <option value=\"urgent\">Urgente</option>\n            <option value=\"high\">Alta</option>\n            <option value=\"medium\">Média</option>\n            <option value=\"low\">Baixa</option>\n          </select>\n\n          {/* Filtro de Status */}\n          <select\n            value={filterStatus}\n            onChange={(e) => setFilterStatus(e.target.value)}\n            className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n          >\n            <option value=\"all\">Todos os Status</option>\n            <option value=\"waiting\">Aguardando</option>\n            <option value=\"assigned\">Atribuído</option>\n            <option value=\"in_progress\">Em Progresso</option>\n            <option value=\"escalated\">Escalado</option>\n            <option value=\"transferred\">Transferido</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Tabela da Fila */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        {isLoading ? (\n          <div className=\"flex items-center justify-center py-12\">\n            <Loader2 className=\"h-8 w-8 text-gray-400 animate-spin\" />\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Cliente\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Departamento\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Prioridade\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Status\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('waitTime')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Tempo de Espera</span>\n                      {sortBy === 'waitTime' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('urgency')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Urgência</span>\n                      {sortBy === 'urgency' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th \n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer\"\n                    onClick={() => toggleSort('customerValue')}\n                  >\n                    <div className=\"flex items-center space-x-1\">\n                      <span>Valor do Cliente</span>\n                      {sortBy === 'customerValue' && (\n                        <ArrowUpDown className=\"h-4 w-4\" />\n                      )}\n                    </div>\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Fonte\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredItems.map((item) => (\n                  <tr key={item.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"flex-shrink-0 h-10 w-10 rounded-full bg-gray-200 flex items-center justify-center\">\n                          {item.customerAvatar ? (\n                            <img\n                              src={item.customerAvatar}\n                              alt={item.customerName}\n                              className=\"h-10 w-10 rounded-full\"\n                            />\n                          ) : (\n                            <Users className=\"h-5 w-5 text-gray-500\" />\n                          )}\n                        </div>\n                        <div>\n                          <div className=\"text-sm font-medium text-gray-900\">{item.customerName}</div>\n                          <div className=\"text-sm text-gray-500\">{item.customerPhone}</div>\n                        </div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{item.department}</div>\n                      <div className=\"text-sm text-gray-500\">{item.category}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getPriorityColor(item.priority)}`}>\n                        {getPriorityName(item.priority)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(item.status)}`}>\n                        {getStatusName(item.status)}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Clock className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-900\">{formatWaitTime(item.waitTime)}</span>\n                      </div>\n                      {item.aiPredictedWaitTime && (\n                        <div className=\"text-xs text-blue-600\">\n                          IA: {formatWaitTime(item.aiPredictedWaitTime)}\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className={`text-lg font-bold ${getUrgencyColor(item.urgencyScore)}`}>\n                        {item.urgencyScore}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {item.urgencyScore >= 80 ? 'Crítica' : \n                         item.urgencyScore >= 60 ? 'Alta' : \n                         item.urgencyScore >= 40 ? 'Média' : 'Baixa'}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getCustomerValueColor(item.customerValue)}`}>\n                        {item.customerValue.toUpperCase()}\n                      </span>\n                      {item.satisfactionHistory > 0 && (\n                        <div className=\"text-xs text-gray-500 mt-1\">\n                          Satisfação: {item.satisfactionHistory.toFixed(1)}/5\n                        </div>\n                      )}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 capitalize\">{item.source}</div>\n                      <div className=\"text-xs text-gray-500\">\n                        {new Date(item.createdAt).toLocaleTimeString('pt-BR', {\n                          hour: '2-digit',\n                          minute: '2-digit'\n                        })}\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n\n        {!isLoading && filteredItems.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Users className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhum item na fila encontrado</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterPriority !== 'all' || filterStatus !== 'all'\n                ? 'Tente ajustar os filtros de busca'\n                : 'A fila de atendimento está vazia no momento'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Resumo dos Agentes */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Status dos Agentes</h3>\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Agente\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Carga\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Tempo de Resposta\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Satisfação\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Eficiência\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {agents.map((agent) => (\n                <tr key={agent.id} className=\"hover:bg-gray-50\">\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm font-medium text-gray-900\">{agent.name}</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                      agent.status === 'online' ? 'bg-green-100 text-green-800' :\n                      agent.status === 'busy' ? 'bg-yellow-100 text-yellow-800' :\n                      agent.status === 'away' ? 'bg-orange-100 text-orange-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {agent.status === 'online' ? 'Online' :\n                       agent.status === 'busy' ? 'Ocupado' :\n                       agent.status === 'away' ? 'Ausente' : 'Offline'}\n                    </span>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                        <div\n                          className={`h-2 rounded-full ${\n                            (agent.currentLoad / agent.maxLoad) > 0.8 ? 'bg-red-500' :\n                            (agent.currentLoad / agent.maxLoad) > 0.5 ? 'bg-yellow-500' :\n                            'bg-green-500'\n                          }`}\n                          style={{ width: `${(agent.currentLoad / agent.maxLoad) * 100}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"text-sm text-gray-500\">\n                        {agent.currentLoad}/{agent.maxLoad}\n                      </span>\n                    </div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{agent.avgResponseTime}s</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"text-sm text-gray-900\">{agent.satisfactionScore.toFixed(1)}/5</div>\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                        <div\n                          className={`h-2 rounded-full ${\n                            agent.efficiency > 90 ? 'bg-green-500' :\n                            agent.efficiency > 70 ? 'bg-yellow-500' :\n                            'bg-red-500'\n                          }`}\n                          style={{ width: `${agent.efficiency}%` }}\n                        ></div>\n                      </div>\n                      <span className=\"text-sm text-gray-500\">\n                        {agent.efficiency}%\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Resumo por Prioridade e Status */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Prioridade</h3>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-red-500\"></span>\n                <span className=\"text-sm text-gray-600\">Urgente</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.priority === 'urgent').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n                <span className=\"text-sm text-gray-600\">Alta</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.priority === 'high').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-yellow-500\"></span>\n                <span className=\"text-sm text-gray-600\">Média</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.priority === 'medium').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-green-500\"></span>\n                <span className=\"text-sm text-gray-600\">Baixa</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.priority === 'low').length}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Distribuição por Status</h3>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-yellow-500\"></span>\n                <span className=\"text-sm text-gray-600\">Aguardando</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.status === 'waiting').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n                <span className=\"text-sm text-gray-600\">Atribuído</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.status === 'assigned').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-green-500\"></span>\n                <span className=\"text-sm text-gray-600\">Em Progresso</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.status === 'in_progress').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-red-500\"></span>\n                <span className=\"text-sm text-gray-600\">Escalado</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.status === 'escalated').length}\n              </span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"w-3 h-3 rounded-full bg-purple-500\"></span>\n                <span className=\"text-sm text-gray-600\">Transferido</span>\n              </div>\n              <span className=\"text-sm font-medium text-gray-900\">\n                {queueItems.filter(item => item.status === 'transferred').length}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default QueueReport;","import React from 'react';\nimport { useThemeStore, themes } from '../../stores/themeStore';\nimport { Check, Palette, Eye, Sparkles, Zap } from 'lucide-react';\n\nconst ThemeSelector: React.FC = () => {\n  const { currentTheme, setTheme } = useThemeStore();\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-3\">\n        <Palette className=\"h-6 w-6 text-gray-600\" />\n        <div>\n          <h2 className=\"text-xl font-semibold text-gray-900\">Gerenciamento de Temas Globais</h2>\n          <p className=\"text-sm text-gray-600\">Configure a aparência visual de toda a plataforma</p>\n        </div>\n      </div>\n\n      <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-6\">\n        <div className=\"flex items-start space-x-3\">\n          <Sparkles className=\"h-5 w-5 text-blue-600 mt-0.5\" />\n          <div>\n            <h3 className=\"text-sm font-semibold text-blue-900 mb-2\">\n              🎨 Sistema de Temas Global\n            </h3>\n            <p className=\"text-blue-800 text-sm mb-3\">\n              Os temas selecionados aqui são aplicados automaticamente em <strong>TODA a plataforma</strong>, \n              incluindo todos os painéis de clientes, interfaces de usuário e componentes do sistema.\n            </p>\n            <div className=\"flex items-center space-x-4 text-xs text-blue-700\">\n              <div className=\"flex items-center space-x-1\">\n                <Zap className=\"h-3 w-3\" />\n                <span>Aplicação em tempo real</span>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <Eye className=\"h-3 w-3\" />\n                <span>Visualização instantânea</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {Object.values(themes).map((theme) => (\n          <div\n            key={theme.name}\n            className={`relative bg-white rounded-xl border-2 p-6 cursor-pointer transition-all duration-300 hover:shadow-xl hover:scale-105 ${\n              currentTheme.name === theme.name\n                ? 'border-primary-500 ring-4 ring-primary-200 shadow-lg'\n                : 'border-gray-200 hover:border-gray-300'\n            }`}\n            onClick={() => setTheme(theme.name)}\n            style={{\n              borderColor: currentTheme.name === theme.name ? theme.colors.primary[500] : undefined\n            }}\n          >\n            {currentTheme.name === theme.name && (\n              <div \n                className=\"absolute -top-2 -right-2 w-8 h-8 rounded-full flex items-center justify-center shadow-lg\"\n                style={{ backgroundColor: theme.colors.primary[500] }}\n              >\n                <Check className=\"h-4 w-4 text-white\" />\n              </div>\n            )}\n\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">{theme.displayName}</h3>\n                {currentTheme.name === theme.name && (\n                  <span className=\"text-xs bg-green-100 text-green-800 px-2 py-1 rounded-full font-medium\">\n                    ATIVO\n                  </span>\n                )}\n              </div>\n              \n              {/* Color Palette Preview */}\n              <div className=\"space-y-3\">\n                <p className=\"text-sm text-gray-600 font-medium\">Paleta de Cores:</p>\n                <div className=\"grid grid-cols-5 gap-1\">\n                  {[100, 300, 500, 700, 900].map((shade) => (\n                    <div\n                      key={shade}\n                      className=\"aspect-square rounded-lg shadow-sm border border-gray-200\"\n                      style={{ backgroundColor: theme.colors.primary[shade as keyof typeof theme.colors.primary] }}\n                      title={`${theme.name}-${shade}: ${theme.colors.primary[shade as keyof typeof theme.colors.primary]}`}\n                    />\n                  ))}\n                </div>\n              </div>\n\n              {/* Preview Components */}\n              <div className=\"space-y-3\">\n                <p className=\"text-sm text-gray-600 font-medium\">Prévia dos Componentes:</p>\n                \n                <div \n                  className=\"px-4 py-2 rounded-lg text-white text-sm font-medium text-center transition-all hover:shadow-md\"\n                  style={{ backgroundColor: theme.colors.primary[600] }}\n                >\n                  Botão Primário\n                </div>\n                \n                <div \n                  className=\"px-4 py-2 rounded-lg border text-sm font-medium text-center transition-all hover:shadow-sm\"\n                  style={{ \n                    borderColor: theme.colors.primary[300],\n                    color: theme.colors.primary[700],\n                    backgroundColor: theme.colors.primary[50]\n                  }}\n                >\n                  Botão Secundário\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div \n                      className=\"w-3 h-3 rounded-full\"\n                      style={{ backgroundColor: theme.colors.primary[500] }}\n                    />\n                    <span className=\"text-sm text-gray-600\">Status Ativo</span>\n                  </div>\n                  <div \n                    className=\"text-xs px-2 py-1 rounded-full\"\n                    style={{ \n                      backgroundColor: theme.colors.primary[100],\n                      color: theme.colors.primary[800]\n                    }}\n                  >\n                    Badge\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Current Theme Details */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\n          Tema Atual: {currentTheme.displayName}\n        </h3>\n        <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n          {Object.entries(currentTheme.colors.primary).map(([shade, color]) => (\n            <div key={shade} className=\"text-center\">\n              <div \n                className=\"w-16 h-16 rounded-lg mx-auto mb-2 shadow-md border border-gray-200\"\n                style={{ backgroundColor: color }}\n              />\n              <p className=\"text-sm font-medium text-gray-900\">{shade}</p>\n              <p className=\"text-xs text-gray-500 font-mono\">{color}</p>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"text-sm font-semibold text-gray-900 mb-2\">Aplicação Global</h4>\n          <p className=\"text-sm text-gray-600\">\n            Este tema está sendo aplicado em tempo real em todos os componentes da plataforma, \n            incluindo painéis de clientes, interfaces administrativas e todos os elementos visuais do sistema.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeSelector;","import React, { useState } from 'react';\nimport { useThemeStore } from '../../stores/themeStore';\nimport { \n  Settings, \n  Save, \n  RotateCcw, \n  Shield, \n  Users, \n  MessageCircle, \n  Bell, \n  DollarSign,\n  Zap,\n  Activity,\n  Database,\n  Globe,\n  Server,\n  Lock,\n  FileText,\n  Clock,\n  Upload,\n  Mail,\n  Smartphone,\n  AlertTriangle\n} from 'lucide-react';\n\nconst GlobalSettings: React.FC = () => {\n  const { globalSettings, updateGlobalSettings } = useThemeStore();\n  const [settings, setSettings] = useState(globalSettings);\n  const [activeTab, setActiveTab] = useState('general');\n  const [hasChanges, setHasChanges] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [saveMessage, setSaveMessage] = useState<{type: 'success' | 'error', text: string} | null>(null);\n\n  const handleChange = (section: string, key: string, value: any) => {\n    setSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    setHasChanges(true);\n  };\n\n  const handleSave = () => {\n    setIsSaving(true);\n    \n    // Simular delay de salvamento\n    setTimeout(() => {\n      try {\n        updateGlobalSettings(settings);\n        setSaveMessage({ type: 'success', text: 'Configurações salvas com sucesso!' });\n        setHasChanges(false);\n        setIsSaving(false);\n        \n        // Limpar mensagem após 3 segundos\n        setTimeout(() => {\n          setSaveMessage(null);\n        }, 3000);\n      } catch (error) {\n        setSaveMessage({ type: 'error', text: 'Erro ao salvar configurações.' });\n        setIsSaving(false);\n      }\n    }, 800);\n  };\n\n  const handleReset = () => {\n    setSettings(globalSettings);\n    setHasChanges(false);\n  };\n\n  const tabs = [\n    { id: 'general', name: 'Geral', icon: <Settings className=\"h-4 w-4\" /> },\n    { id: 'security', name: 'Segurança', icon: <Shield className=\"h-4 w-4\" /> },\n    { id: 'limits', name: 'Limites', icon: <Users className=\"h-4 w-4\" /> },\n    { id: 'integrations', name: 'Integrações', icon: <Globe className=\"h-4 w-4\" /> },\n    { id: 'notifications', name: 'Notificações', icon: <Bell className=\"h-4 w-4\" /> },\n    { id: 'billing', name: 'Faturamento', icon: <DollarSign className=\"h-4 w-4\" /> },\n    { id: 'automation', name: 'Automação', icon: <Zap className=\"h-4 w-4\" /> },\n    { id: 'monitoring', name: 'Monitoramento', icon: <Activity className=\"h-4 w-4\" /> },\n    { id: 'backup', name: 'Backup', icon: <Database className=\"h-4 w-4\" /> },\n    { id: 'api', name: 'API', icon: <Server className=\"h-4 w-4\" /> },\n    { id: 'system', name: 'Sistema', icon: <Server className=\"h-4 w-4\" /> }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Settings className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Configurações Globais</h2>\n            <p className=\"text-sm text-gray-600\">Gerencie as configurações globais da plataforma</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {hasChanges && (\n            <>\n              <button\n                onClick={handleReset}\n                className=\"px-3 py-1.5 text-sm border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\n                disabled={isSaving}\n              >\n                <div className=\"flex items-center space-x-1\">\n                  <RotateCcw className=\"h-4 w-4\" />\n                  <span>Cancelar</span>\n                </div>\n              </button>\n              \n              <button\n                onClick={handleSave}\n                className=\"px-3 py-1.5 text-sm bg-primary-600 text-white rounded-md hover:bg-primary-700 disabled:opacity-50\"\n                disabled={isSaving}\n                style={{ backgroundColor: 'var(--color-primary)' }}\n              >\n                <div className=\"flex items-center space-x-1\">\n                  {isSaving ? (\n                    <>\n                      <svg className=\"animate-spin h-4 w-4 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                      </svg>\n                      <span>Salvando...</span>\n                    </>\n                  ) : (\n                    <>\n                      <Save className=\"h-4 w-4\" />\n                      <span>Salvar Alterações</span>\n                    </>\n                  )}\n                </div>\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n\n      {saveMessage && (\n        <div className={`p-4 rounded-md ${saveMessage.type === 'success' ? 'bg-green-50 text-green-800' : 'bg-red-50 text-red-800'}`}>\n          {saveMessage.text}\n        </div>\n      )}\n\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"border-b border-gray-200 bg-gray-50\">\n          <div className=\"flex overflow-x-auto\">\n            {tabs.map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`px-4 py-3 text-sm font-medium whitespace-nowrap ${\n                  activeTab === tab.id\n                    ? 'border-b-2 border-primary-500 text-primary-600'\n                    : 'text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n                style={{\n                  borderBottomColor: activeTab === tab.id ? 'var(--color-primary)' : undefined,\n                  color: activeTab === tab.id ? 'var(--color-primary)' : undefined\n                }}\n              >\n                <div className=\"flex items-center space-x-2\">\n                  {tab.icon}\n                  <span>{tab.name}</span>\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"p-6\">\n          {activeTab === 'general' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Configurações Gerais</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Nome da Plataforma\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={settings.platformName}\n                    onChange={(e) => handleChange('general', 'platformName', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Nome da Empresa\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={settings.companyName}\n                    onChange={(e) => handleChange('general', 'companyName', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email de Suporte\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={settings.supportEmail}\n                    onChange={(e) => handleChange('general', 'supportEmail', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Telefone de Suporte\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={settings.supportPhone}\n                    onChange={(e) => handleChange('general', 'supportPhone', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Fuso Horário Padrão\n                  </label>\n                  <select\n                    value={settings.defaultTimezone}\n                    onChange={(e) => handleChange('general', 'defaultTimezone', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"America/Sao_Paulo\">America/Sao_Paulo</option>\n                    <option value=\"America/New_York\">America/New_York</option>\n                    <option value=\"Europe/London\">Europe/London</option>\n                    <option value=\"Europe/Paris\">Europe/Paris</option>\n                    <option value=\"Asia/Tokyo\">Asia/Tokyo</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Idioma Padrão\n                  </label>\n                  <select\n                    value={settings.defaultLanguage}\n                    onChange={(e) => handleChange('general', 'defaultLanguage', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"pt-BR\">Português (Brasil)</option>\n                    <option value=\"en-US\">English (US)</option>\n                    <option value=\"es-ES\">Español</option>\n                    <option value=\"fr-FR\">Français</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Moeda Padrão\n                  </label>\n                  <select\n                    value={settings.defaultCurrency}\n                    onChange={(e) => handleChange('general', 'defaultCurrency', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"BRL\">Real (BRL)</option>\n                    <option value=\"USD\">US Dollar (USD)</option>\n                    <option value=\"EUR\">Euro (EUR)</option>\n                    <option value=\"GBP\">British Pound (GBP)</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"flex items-center space-x-2 mt-4\">\n                <input\n                  type=\"checkbox\"\n                  id=\"maintenanceMode\"\n                  checked={settings.maintenanceMode}\n                  onChange={(e) => handleChange('general', 'maintenanceMode', e.target.checked)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"maintenanceMode\" className=\"text-sm font-medium text-gray-700\">\n                  Modo de Manutenção\n                </label>\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"allowNewRegistrations\"\n                  checked={settings.allowNewRegistrations}\n                  onChange={(e) => handleChange('general', 'allowNewRegistrations', e.target.checked)}\n                  className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"allowNewRegistrations\" className=\"text-sm font-medium text-gray-700\">\n                  Permitir Novos Registros\n                </label>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'security' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Configurações de Segurança</h3>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Timeout de Sessão (minutos)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={settings.sessionTimeout}\n                    onChange={(e) => handleChange('security', 'sessionTimeout', parseInt(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Máximo de Tentativas de Login\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={settings.maxLoginAttempts}\n                    onChange={(e) => handleChange('security', 'maxLoginAttempts', parseInt(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Duração do Bloqueio (minutos)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={settings.lockoutDuration}\n                    onChange={(e) => handleChange('security', 'lockoutDuration', parseInt(e.target.value))}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Força da Senha\n                  </label>\n                  <select\n                    value={settings.passwordStrength}\n                    onChange={(e) => handleChange('security', 'passwordStrength', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n                  >\n                    <option value=\"low\">Baixa (mínimo 6 caracteres)</option>\n                    <option value=\"medium\">Média (mínimo 8 caracteres, letras e números)</option>\n                    <option value=\"high\">Alta (mínimo 10 caracteres, letras, números e símbolos)</option>\n                  </select>\n                </div>\n              </div>\n              \n              <div className=\"space-y-3 mt-4\">\n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"require2FA\"\n                    checked={settings.require2FA}\n                    onChange={(e) => handleChange('security', 'require2FA', e.target.checked)}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"require2FA\" className=\"text-sm font-medium text-gray-700\">\n                    Exigir Autenticação de Dois Fatores (2FA)\n                  </label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"enableAuditLogs\"\n                    checked={settings.enableAuditLogs}\n                    onChange={(e) => handleChange('security', 'enableAuditLogs', e.target.checked)}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"enableAuditLogs\" className=\"text-sm font-medium text-gray-700\">\n                    Habilitar Logs de Auditoria\n                  </label>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"enableEncryption\"\n                    checked={settings.enableEncryption}\n                    onChange={(e) => handleChange('security', 'enableEncryption', e.target.checked)}\n                    className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                  />\n                  <label htmlFor=\"enableEncryption\" className=\"text-sm font-medium text-gray-700\">\n                    Habilitar Criptografia de Dados Sensíveis\n                  </label>\n                </div>\n              </div>\n              \n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-4 mt-4\">\n                <div className=\"flex items-start space-x-3\">\n                  <AlertTriangle className=\"h-5 w-5 text-yellow-500 mt-0.5\" />\n                  <div>\n                    <h4 className=\"text-sm font-medium text-yellow-800\">Atenção</h4>\n                    <p className=\"text-sm text-yellow-700 mt-1\">\n                      Alterações nas configurações de segurança podem afetar todos os usuários da plataforma.\n                      Certifique-se de comunicar mudanças importantes aos administradores das empresas.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Outros tabs seriam implementados de forma similar */}\n          {activeTab !== 'general' && activeTab !== 'security' && (\n            <div className=\"text-center py-12\">\n              <Settings className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Configurações de {tabs.find(t => t.id === activeTab)?.name}</h3>\n              <p className=\"text-gray-500 max-w-md mx-auto\">\n                Esta seção de configurações será implementada na próxima atualização.\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GlobalSettings;","import React from 'react';\nimport { \n  Building2, \n  Search, \n  Filter, \n  Plus, \n  MoreVertical, \n  Edit, \n  Trash2, \n  Eye,\n  Users,\n  MessageCircle,\n  Calendar,\n  CheckCircle,\n  XCircle,\n  AlertTriangle,\n  Crown,\n  Star,\n  Zap\n} from 'lucide-react';\n\nconst CompanyManagement: React.FC = () => {\n  const [searchTerm, setSearchTerm] = React.useState('');\n  const [filterStatus, setFilterStatus] = React.useState('all');\n  const [showAddModal, setShowAddModal] = React.useState(false);\n  const [sortBy, setSortBy] = React.useState('name');\n  const [sortOrder, setSortOrder] = React.useState('asc');\n\n  // Dados mockados das empresas\n  const companies = [\n    {\n      id: 1,\n      name: 'TechCorp Solutions',\n      email: 'contato@techcorp.com',\n      plan: 'Enterprise',\n      status: 'active',\n      users: 25,\n      messagesThisMonth: 15420,\n      messageLimit: 50000,\n      createdAt: '2024-01-15',\n      lastActivity: '2 min atrás',\n      whatsappStatus: 'connected',\n      domain: 'techcorp.gybachat.com'\n    },\n    {\n      id: 2,\n      name: 'StartupXYZ',\n      email: 'admin@startupxyz.com',\n      plan: 'Profissional',\n      status: 'active',\n      users: 8,\n      messagesThisMonth: 3250,\n      messageLimit: 10000,\n      createdAt: '2024-02-20',\n      lastActivity: '15 min atrás',\n      whatsappStatus: 'disconnected',\n      domain: 'startupxyz.gybachat.com'\n    },\n    {\n      id: 3,\n      name: 'InovaCorp',\n      email: 'suporte@inovacorp.com',\n      plan: 'Básico',\n      status: 'trial',\n      users: 3,\n      messagesThisMonth: 890,\n      messageLimit: 2000,\n      createdAt: '2024-06-01',\n      lastActivity: '1 hora atrás',\n      whatsappStatus: 'connected',\n      domain: 'inovacorp.gybachat.com'\n    },\n    {\n      id: 4,\n      name: 'MegaEmpresa Ltd',\n      email: 'ti@megaempresa.com',\n      plan: 'Enterprise',\n      status: 'suspended',\n      users: 45,\n      messagesThisMonth: 0,\n      messageLimit: 100000,\n      createdAt: '2023-11-10',\n      lastActivity: '3 dias atrás',\n      whatsappStatus: 'disconnected',\n      domain: 'megaempresa.gybachat.com'\n    },\n    {\n      id: 5,\n      name: 'SmallBiz Co',\n      email: 'owner@smallbiz.com',\n      plan: 'Básico',\n      status: 'active',\n      users: 2,\n      messagesThisMonth: 1650,\n      messageLimit: 2000,\n      createdAt: '2024-03-12',\n      lastActivity: '30 min atrás',\n      whatsappStatus: 'warning',\n      domain: 'smallbiz.gybachat.com'\n    },\n    {\n      id: 6,\n      name: 'Consultoria ABC',\n      email: 'contato@consultoriaabc.com',\n      plan: 'Profissional',\n      status: 'active',\n      users: 12,\n      messagesThisMonth: 7890,\n      messageLimit: 10000,\n      createdAt: '2023-12-05',\n      lastActivity: '5 min atrás',\n      whatsappStatus: 'connected',\n      domain: 'abc.gybachat.com'\n    },\n    {\n      id: 7,\n      name: 'Loja Virtual Express',\n      email: 'atendimento@lojavirtual.com',\n      plan: 'Básico',\n      status: 'expired',\n      users: 4,\n      messagesThisMonth: 0,\n      messageLimit: 2000,\n      createdAt: '2023-10-18',\n      lastActivity: '15 dias atrás',\n      whatsappStatus: 'disconnected',\n      domain: 'lojavirtual.gybachat.com'\n    }\n  ];\n\n  const getStatusBadge = (status: string) => {\n    const styles = {\n      active: 'bg-green-100 text-green-800',\n      trial: 'bg-blue-100 text-blue-800',\n      suspended: 'bg-red-100 text-red-800',\n      expired: 'bg-gray-100 text-gray-800'\n    };\n\n    const labels = {\n      active: 'Ativo',\n      trial: 'Trial',\n      suspended: 'Suspenso',\n      expired: 'Expirado'\n    };\n\n    const icons = {\n      active: <CheckCircle className=\"h-3 w-3 mr-1\" />,\n      trial: <Star className=\"h-3 w-3 mr-1\" />,\n      suspended: <XCircle className=\"h-3 w-3 mr-1\" />,\n      expired: <AlertTriangle className=\"h-3 w-3 mr-1\" />\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${styles[status as keyof typeof styles]}`}>\n        {icons[status as keyof typeof icons]}\n        {labels[status as keyof typeof labels]}\n      </span>\n    );\n  };\n\n  const getPlanBadge = (plan: string) => {\n    const styles = {\n      'Básico': 'bg-gray-100 text-gray-800',\n      'Profissional': 'bg-blue-100 text-blue-800',\n      'Enterprise': 'bg-purple-100 text-purple-800'\n    };\n\n    const icons = {\n      'Básico': <Zap className=\"h-3 w-3 mr-1\" />,\n      'Profissional': <Star className=\"h-3 w-3 mr-1\" />,\n      'Enterprise': <Crown className=\"h-3 w-3 mr-1\" />\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${styles[plan as keyof typeof styles]}`}>\n        {icons[plan as keyof typeof icons]}\n        {plan}\n      </span>\n    );\n  };\n\n  const getWhatsAppStatus = (status: string) => {\n    switch (status) {\n      case 'connected':\n        return <CheckCircle className=\"h-4 w-4 text-green-500\" title=\"Conectado\" />;\n      case 'disconnected':\n        return <XCircle className=\"h-4 w-4 text-red-500\" title=\"Desconectado\" />;\n      case 'warning':\n        return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" title=\"Atenção\" />;\n      default:\n        return <XCircle className=\"h-4 w-4 text-gray-400\" title=\"Desconhecido\" />;\n    }\n  };\n\n  const getUsagePercentage = (used: number, limit: number) => {\n    return Math.round((used / limit) * 100);\n  };\n\n  const getUsageColor = (percentage: number) => {\n    if (percentage >= 90) return 'bg-red-500';\n    if (percentage >= 70) return 'bg-yellow-500';\n    return 'bg-green-500';\n  };\n\n  // Ordenar e filtrar empresas\n  const sortedAndFilteredCompanies = companies\n    .filter(company => {\n      const matchesSearch = company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           company.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           company.domain.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesFilter = filterStatus === 'all' || company.status === filterStatus;\n      return matchesSearch && matchesFilter;\n    })\n    .sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'name':\n          comparison = a.name.localeCompare(b.name);\n          break;\n        case 'plan':\n          comparison = a.plan.localeCompare(b.plan);\n          break;\n        case 'users':\n          comparison = a.users - b.users;\n          break;\n        case 'messages':\n          comparison = a.messagesThisMonth - b.messagesThisMonth;\n          break;\n        case 'created':\n          comparison = new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n          break;\n        default:\n          comparison = a.name.localeCompare(b.name);\n      }\n      \n      return sortOrder === 'asc' ? comparison : -comparison;\n    });\n\n  const handleSort = (field: string) => {\n    if (sortBy === field) {\n      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortBy(field);\n      setSortOrder('asc');\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-3\">\n          <Building2 className=\"h-6 w-6 text-gray-600\" />\n          <div>\n            <h2 className=\"text-xl font-semibold text-gray-900\">Gestão de Contas</h2>\n            <p className=\"text-sm text-gray-600\">Gerencie todas as empresas clientes da plataforma</p>\n          </div>\n        </div>\n        <button\n          onClick={() => setShowAddModal(true)}\n          className=\"flex items-center space-x-2 px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 transition-colors\"\n          style={{ backgroundColor: 'var(--color-primary)', \n                  borderColor: 'var(--color-primary)', \n                  '--tw-ring-color': 'var(--color-primary)' } as React.CSSProperties}\n        >\n          <Plus className=\"h-4 w-4\" />\n          <span>Nova Conta</span>\n        </button>\n      </div>\n\n      {/* Filtros */}\n      <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n        <div className=\"flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4\">\n          {/* Busca */}\n          <div className=\"flex-1 relative\">\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Buscar por nome, email ou domínio...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            />\n          </div>\n\n          {/* Filtro de Status */}\n          <div className=\"relative\">\n            <Filter className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n            <select\n              value={filterStatus}\n              onChange={(e) => setFilterStatus(e.target.value)}\n              className=\"pl-10 pr-8 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500\"\n            >\n              <option value=\"all\">Todos os Status</option>\n              <option value=\"active\">Ativo</option>\n              <option value=\"trial\">Trial</option>\n              <option value=\"suspended\">Suspenso</option>\n              <option value=\"expired\">Expirado</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Tabela de Empresas */}\n      <div className=\"bg-white rounded-lg border border-gray-200 overflow-hidden\">\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th \n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\"\n                  onClick={() => handleSort('name')}\n                >\n                  <div className=\"flex items-center space-x-1\">\n                    <span>Empresa</span>\n                    {sortBy === 'name' && (\n                      <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </div>\n                </th>\n                <th \n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\"\n                  onClick={() => handleSort('plan')}\n                >\n                  <div className=\"flex items-center space-x-1\">\n                    <span>Plano</span>\n                    {sortBy === 'plan' && (\n                      <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </div>\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th \n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\"\n                  onClick={() => handleSort('users')}\n                >\n                  <div className=\"flex items-center space-x-1\">\n                    <span>Usuários</span>\n                    {sortBy === 'users' && (\n                      <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </div>\n                </th>\n                <th \n                  className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\"\n                  onClick={() => handleSort('messages')}\n                >\n                  <div className=\"flex items-center space-x-1\">\n                    <span>Mensagens</span>\n                    {sortBy === 'messages' && (\n                      <span>{sortOrder === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </div>\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  WhatsApp\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Domínio\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Última Atividade\n                </th>\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Ações\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {sortedAndFilteredCompanies.map((company) => {\n                const usagePercentage = getUsagePercentage(company.messagesThisMonth, company.messageLimit);\n                \n                return (\n                  <tr key={company.id} className=\"hover:bg-gray-50\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-900\">{company.name}</div>\n                        <div className=\"text-sm text-gray-500\">{company.email}</div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getPlanBadge(company.plan)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getStatusBadge(company.status)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1\">\n                        <Users className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-900\">{company.users}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"space-y-1\">\n                        <div className=\"flex items-center space-x-1\">\n                          <MessageCircle className=\"h-4 w-4 text-gray-400\" />\n                          <span className=\"text-sm text-gray-900\">\n                            {company.messagesThisMonth.toLocaleString()} / {company.messageLimit.toLocaleString()}\n                          </span>\n                        </div>\n                        <div className=\"w-full bg-gray-200 rounded-full h-1.5\">\n                          <div\n                            className={`h-1.5 rounded-full ${getUsageColor(usagePercentage)}`}\n                            style={{ width: `${Math.min(usagePercentage, 100)}%` }}\n                          />\n                        </div>\n                        <div className=\"text-xs text-gray-500\">{usagePercentage}% utilizado</div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      {getWhatsAppStatus(company.whatsappStatus)}\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900 font-mono\">\n                        {company.domain}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center space-x-1\">\n                        <Calendar className=\"h-4 w-4 text-gray-400\" />\n                        <span className=\"text-sm text-gray-500\">{company.lastActivity}</span>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                      <div className=\"flex items-center justify-end space-x-2\">\n                        <button \n                          className=\"text-blue-600 hover:text-blue-900 transition-colors\" \n                          title=\"Visualizar\"\n                        >\n                          <Eye className=\"h-4 w-4\" />\n                        </button>\n                        <button \n                          className=\"text-green-600 hover:text-green-900 transition-colors\" \n                          title=\"Editar\"\n                        >\n                          <Edit className=\"h-4 w-4\" />\n                        </button>\n                        <button \n                          className=\"text-red-600 hover:text-red-900 transition-colors\" \n                          title=\"Excluir\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </button>\n                        <button \n                          className=\"text-gray-400 hover:text-gray-600 transition-colors\" \n                          title=\"Mais opções\"\n                        >\n                          <MoreVertical className=\"h-4 w-4\" />\n                        </button>\n                      </div>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n\n        {sortedAndFilteredCompanies.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Building2 className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Nenhuma empresa encontrada</h3>\n            <p className=\"text-gray-500\">\n              {searchTerm || filterStatus !== 'all' \n                ? 'Tente ajustar os filtros de busca'\n                : 'Comece adicionando sua primeira empresa'\n              }\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Resumo */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-gray-900\">{companies.length}</div>\n          <div className=\"text-sm text-gray-500\">Total de Empresas</div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {companies.filter(c => c.status === 'active').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Empresas Ativas</div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {companies.filter(c => c.status === 'trial').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Em Trial</div>\n        </div>\n        <div className=\"bg-white rounded-lg border border-gray-200 p-4\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {companies.filter(c => c.status === 'suspended' || c.status === 'expired').length}\n          </div>\n          <div className=\"text-sm text-gray-500\">Suspensas/Expiradas</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CompanyManagement;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useThemeStore } from '../../stores/themeStore';\nimport { \n  LogOut, \n  User, \n  Bell, \n  HelpCircle, \n  Shield,\n  Settings,\n  ChevronDown,\n  Home,\n  Building2,\n  BarChart3,\n  Palette,\n  Search,\n  ChevronRight,\n  ChevronLeft,\n  Pin,\n  PinOff\n} from 'lucide-react';\n\ninterface MasterLayoutProps {\n  children: React.ReactNode;\n}\n\ninterface MenuItem {\n  id: string;\n  name: string;\n  icon: React.ComponentType<any>;\n  path?: string;\n  badge?: number;\n}\n\nconst MasterLayout: React.FC<MasterLayoutProps> = ({ children }) => {\n  const { user, logout } = useAuthStore();\n  const { currentTheme } = useThemeStore();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [sidebarPinned, setSidebarPinned] = useState(false);\n  const [sidebarHovered, setSidebarHovered] = useState(false);\n  const [showTooltip, setShowTooltip] = useState<{id: string, name: string, x: number, y: number} | null>(null);\n\n  // Carregar estado inicial do localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem('master-sidebar-pinned');\n    if (saved) {\n      setSidebarPinned(JSON.parse(saved));\n    }\n  }, []);\n\n  // Salvar estado do pin no localStorage quando mudar\n  useEffect(() => {\n    localStorage.setItem('master-sidebar-pinned', JSON.stringify(sidebarPinned));\n  }, [sidebarPinned]);\n\n  // Determinar se sidebar deve estar expandida\n  const sidebarExpanded = sidebarPinned || sidebarHovered;\n\n  const notifications = [\n    { id: 1, message: 'Nova empresa cadastrada: TechCorp', time: '2 min atrás', unread: true },\n    { id: 2, message: 'Sistema atualizado com sucesso', time: '5 min atrás', unread: true },\n    { id: 3, message: 'Backup automático concluído', time: '1 hora atrás', unread: false },\n  ];\n\n  const unreadCount = notifications.filter(n => n.unread).length;\n\n  const menuItems: MenuItem[] = [\n    {\n      id: 'dashboard',\n      name: 'Dashboard',\n      icon: BarChart3,\n      path: '/master/dashboard'\n    },\n    {\n      id: 'companies',\n      name: 'Gestão de Contas',\n      icon: Building2,\n      path: '/master/companies'\n    },\n    {\n      id: 'themes',\n      name: 'Temas Globais',\n      icon: Palette,\n      path: '/master/themes'\n    },\n    {\n      id: 'settings',\n      name: 'Configurações Globais',\n      icon: Settings,\n      path: '/master/settings'\n    }\n  ];\n\n  // Handle tooltip\n  const handleMouseEnter = (e: React.MouseEvent, item: MenuItem) => {\n    if (!sidebarExpanded) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      setShowTooltip({\n        id: item.id,\n        name: item.name,\n        x: rect.right + 8,\n        y: rect.top + rect.height / 2\n      });\n    }\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(null);\n  };\n\n  // Handle sidebar mouse events\n  const handleSidebarMouseEnter = () => {\n    setSidebarHovered(true);\n  };\n\n  const handleSidebarMouseLeave = () => {\n    setSidebarHovered(false);\n    setShowTooltip(null);\n  };\n\n  const renderMenuItem = (item: MenuItem) => {\n    const currentPath = window.location.pathname;\n    const isActive = item.path === currentPath;\n\n    return (\n      <div\n        key={item.id}\n        className={`group relative flex items-center justify-between mx-2 rounded-xl cursor-pointer transition-all duration-200 ${\n          isActive \n            ? 'bg-primary-100 text-primary-700 shadow-sm border border-primary-200' \n            : 'text-gray-600 hover:bg-gray-100 hover:text-gray-900 border border-transparent hover:border-gray-200'\n        } ${sidebarExpanded ? 'px-3 py-2.5' : 'p-2.5 mx-3 justify-center'}`}\n        style={{\n          backgroundColor: isActive ? currentTheme.colors.primary[50] : undefined,\n          color: isActive ? currentTheme.colors.primary[700] : undefined,\n          borderColor: isActive ? currentTheme.colors.primary[200] : undefined\n        }}\n        onClick={() => {\n          if (item.path) {\n            window.location.href = item.path;\n          }\n        }}\n        onMouseEnter={(e) => handleMouseEnter(e, item)}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\n          <item.icon className={`h-5 w-5 flex-shrink-0 transition-colors ${\n            isActive ? 'text-primary-600' : 'text-gray-400 group-hover:text-gray-600'\n          }`} \n            style={{ color: isActive ? currentTheme.colors.primary[600] : undefined }} \n          />\n          {sidebarExpanded && (\n            <span className=\"font-medium text-sm truncate\">{item.name}</span>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const handleLogout = (e: React.MouseEvent) => {\n    e.preventDefault();\n    logout();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Sidebar */}\n      <div \n        className={`${sidebarExpanded ? 'w-72' : 'w-16'} bg-white border-r border-gray-200 flex flex-col transition-all duration-300 shadow-sm relative z-30`}\n        onMouseEnter={handleSidebarMouseEnter}\n        onMouseLeave={handleSidebarMouseLeave}\n      >\n        {/* Header da Sidebar */}\n        <div className={`border-b border-gray-200 ${sidebarExpanded ? 'p-4' : 'p-3'}`}>\n          <div className={`flex items-center ${sidebarExpanded ? 'justify-between' : 'justify-center'}`}>\n            <div className=\"flex items-center space-x-3\">\n              <div \n                className=\"w-8 h-8 rounded-xl flex items-center justify-center shadow-sm\"\n                style={{ backgroundColor: currentTheme.colors.primary[600] }}\n              >\n                <Shield className=\"h-5 w-5 text-white\" />\n              </div>\n              {sidebarExpanded && (\n                <div className=\"min-w-0 flex-1\">\n                  <h1 className=\"text-lg font-bold text-gray-900 truncate\">Gybachat Master</h1>\n                  <p className=\"text-xs text-gray-500\">Painel Administrativo</p>\n                </div>\n              )}\n            </div>\n            \n            {sidebarExpanded && (\n              <button\n                onClick={() => setSidebarPinned(!sidebarPinned)}\n                className={`p-1.5 rounded-lg transition-all duration-200 ${\n                  sidebarPinned \n                    ? 'text-primary-600 bg-primary-50 hover:bg-primary-100' \n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\n                }`}\n                style={{\n                  color: sidebarPinned ? currentTheme.colors.primary[600] : undefined,\n                  backgroundColor: sidebarPinned ? currentTheme.colors.primary[50] : undefined\n                }}\n                title={sidebarPinned ? 'Desafixar menu' : 'Fixar menu'}\n              >\n                {sidebarPinned ? <Pin className=\"h-4 w-4\" /> : <PinOff className=\"h-4 w-4\" />}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Menu Items */}\n        <div className=\"flex-1 overflow-y-auto py-4\">\n          <nav className=\"space-y-1\">\n            {menuItems.map(item => renderMenuItem(item))}\n          </nav>\n        </div>\n\n        {/* User Info na Sidebar */}\n        <div className={`border-t border-gray-200 ${sidebarExpanded ? 'p-4' : 'p-3 flex justify-center'}`}>\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center flex-shrink-0\">\n              {user?.avatar ? (\n                <img\n                  src={user.avatar}\n                  alt={user.name}\n                  className=\"w-8 h-8 rounded-full\"\n                />\n              ) : (\n                <User className=\"h-4 w-4 text-gray-600\" />\n              )}\n            </div>\n            {sidebarExpanded && (\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">{user?.name}</p>\n                <p className=\"text-xs text-gray-500 truncate\">{user?.email}</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Tooltip para menu minimizado */}\n      {showTooltip && !sidebarExpanded && (\n        <div\n          className=\"fixed z-50 px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-lg pointer-events-none\"\n          style={{\n            left: showTooltip.x,\n            top: showTooltip.y,\n            transform: 'translateY(-50%)'\n          }}\n        >\n          {showTooltip.name}\n          <div \n            className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1 w-2 h-2 bg-gray-900 rotate-45\"\n          />\n        </div>\n      )}\n\n      {/* Main Content Area */}\n      <div className=\"flex-1 flex flex-col min-w-0\">\n        {/* Top Header */}\n        <header className=\"bg-white border-b border-gray-200 px-6 py-4 shadow-sm\">\n          <div className=\"flex items-center justify-between\">\n            {/* Breadcrumb */}\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              <Home className=\"h-4 w-4\" />\n              <ChevronRight className=\"h-4 w-4\" />\n              <span className=\"text-gray-900 font-medium\">Painel Master</span>\n            </div>\n\n            {/* Right side */}\n            <div className=\"flex items-center space-x-4\">\n              {/* Notifications */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowNotifications(!showNotifications)}\n                  className=\"p-2.5 text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded-xl transition-all duration-200 relative\"\n                >\n                  <Bell className=\"h-5 w-5\" />\n                  {unreadCount > 0 && (\n                    <span \n                      className=\"absolute -top-1 -right-1 h-5 w-5 text-white text-xs rounded-full flex items-center justify-center font-bold shadow-sm\"\n                      style={{ backgroundColor: currentTheme.colors.primary[500] }}\n                    >\n                      {unreadCount}\n                    </span>\n                  )}\n                </button>\n\n                {showNotifications && (\n                  <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-xl shadow-xl border border-gray-200 z-50 overflow-hidden\">\n                    <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"text-sm font-semibold text-gray-900\">Notificações</h3>\n                        {unreadCount > 0 && (\n                          <span \n                            className=\"px-2 py-1 text-xs font-medium text-white rounded-full\"\n                            style={{ backgroundColor: currentTheme.colors.primary[500] }}\n                          >\n                            {unreadCount} novas\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"max-h-64 overflow-y-auto\">\n                      {notifications.map((notification) => (\n                        <div\n                          key={notification.id}\n                          className={`p-4 border-b border-gray-100 hover:bg-gray-50 transition-colors cursor-pointer ${\n                            notification.unread ? 'bg-blue-50 border-l-4 border-l-blue-500' : ''\n                          }`}\n                        >\n                          <div className=\"flex items-start space-x-3\">\n                            <div className={`w-2 h-2 rounded-full mt-2 ${\n                              notification.unread ? 'bg-blue-500' : 'bg-gray-300'\n                            }`} />\n                            <div className=\"flex-1 min-w-0\">\n                              <p className=\"text-sm text-gray-900\">{notification.message}</p>\n                              <p className=\"text-xs text-gray-500 mt-1\">{notification.time}</p>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n                      <button \n                        className=\"text-sm font-medium hover:text-primary-700 transition-colors\"\n                        style={{ color: currentTheme.colors.primary[600] }}\n                      >\n                        Ver todas as notificações\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Help */}\n              <button className=\"p-2.5 text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded-xl transition-all duration-200\">\n                <HelpCircle className=\"h-5 w-5\" />\n              </button>\n\n              {/* User Menu */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowUserMenu(!showUserMenu)}\n                  className=\"flex items-center space-x-3 p-2 rounded-xl hover:bg-gray-100 transition-all duration-200\"\n                >\n                  <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                    {user?.avatar ? (\n                      <img\n                        src={user.avatar}\n                        alt={user.name}\n                        className=\"w-8 h-8 rounded-full\"\n                      />\n                    ) : (\n                      <User className=\"h-4 w-4 text-gray-600\" />\n                    )}\n                  </div>\n                  <div className=\"hidden md:block text-left\">\n                    <p className=\"text-sm font-medium text-gray-900\">{user?.name}</p>\n                    <p className=\"text-xs text-gray-500\">{user?.email}</p>\n                  </div>\n                  <ChevronDown className=\"h-4 w-4 text-gray-400\" />\n                </button>\n\n                {showUserMenu && (\n                  <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-xl border border-gray-200 z-50 overflow-hidden\">\n                    <div className=\"py-1\">\n                      <button className=\"flex items-center space-x-2 w-full px-4 py-3 text-sm text-gray-700 hover:bg-gray-100 transition-colors\">\n                        <User className=\"h-4 w-4\" />\n                        <span>Meu Perfil</span>\n                      </button>\n                      <button className=\"flex items-center space-x-2 w-full px-4 py-3 text-sm text-gray-700 hover:bg-gray-100 transition-colors\">\n                        <Settings className=\"h-4 w-4\" />\n                        <span>Configurações</span>\n                      </button>\n                      <hr className=\"my-1\" />\n                      <button\n                        onClick={handleLogout}\n                        className=\"flex items-center space-x-2 w-full px-4 py-3 text-sm text-red-700 hover:bg-red-50 transition-colors\"\n                      >\n                        <LogOut className=\"h-4 w-4\" />\n                        <span>Sair</span>\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Main Content */}\n        <main className=\"flex-1 overflow-auto\">\n          <div className=\"p-6\">\n            {children}\n          </div>\n        </main>\n      </div>\n\n      {/* Tooltip para menu minimizado */}\n      {showTooltip && !sidebarExpanded && (\n        <div\n          className=\"fixed z-50 px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-lg pointer-events-none\"\n          style={{\n            left: showTooltip.x,\n            top: showTooltip.y,\n            transform: 'translateY(-50%)'\n          }}\n        >\n          {showTooltip.name}\n          <div \n            className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1 w-2 h-2 bg-gray-900 rotate-45\"\n          />\n        </div>\n      )}\n\n      {/* Click outside to close menus */}\n      {(showUserMenu || showNotifications) && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => {\n            setShowUserMenu(false);\n            setShowNotifications(false);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MasterLayout;","import React, { useState, useEffect } from 'react';\nimport { useAuthStore } from '../../stores/authStore';\nimport { useThemeStore } from '../../stores/themeStore';\nimport { \n  LogOut, \n  User, \n  Bell, \n  HelpCircle, \n  MessageCircle,\n  Settings,\n  ChevronDown,\n  Home,\n  Phone,\n  Users,\n  Send,\n  Tag,\n  BarChart3,\n  Instagram,\n  Facebook,\n  Target,\n  FileText,\n  Zap,\n  Shield,\n  Search,\n  Menu,\n  X,\n  ChevronRight,\n  ChevronLeft,\n  Pin,\n  PinOff\n} from 'lucide-react';\n\ninterface ClientLayoutProps {\n  children: React.ReactNode;\n}\n\ninterface MenuItem {\n  id: string;\n  name: string;\n  icon: React.ComponentType<any>;\n  path?: string;\n  badge?: number;\n  children?: MenuItem[];\n  permission?: string;\n}\n\nconst ClientLayout: React.FC<ClientLayoutProps> = ({ children }) => {\n  const { user, logout, hasPermission, isAdminOrSupervisor } = useAuthStore();\n  const { currentTheme } = useThemeStore();\n  const [showUserMenu, setShowUserMenu] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [sidebarPinned, setSidebarPinned] = useState(false);\n  const [sidebarHovered, setSidebarHovered] = useState(false);\n  const [expandedMenus, setExpandedMenus] = useState<string[]>(['whatsapp', 'social-media', 'reports']);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [showTooltip, setShowTooltip] = useState<{id: string, name: string, x: number, y: number} | null>(null);\n\n  // Carregar estado inicial do localStorage\n  useEffect(() => {\n    const saved = localStorage.getItem('sidebar-pinned');\n    if (saved) {\n      setSidebarPinned(JSON.parse(saved));\n    }\n  }, []);\n\n  // Salvar estado do pin no localStorage quando mudar\n  useEffect(() => {\n    localStorage.setItem('sidebar-pinned', JSON.stringify(sidebarPinned));\n  }, [sidebarPinned]);\n\n  // Determinar se sidebar deve estar expandida\n  const sidebarExpanded = sidebarPinned || sidebarHovered;\n\n  const notifications = [\n    { id: 1, message: 'Nova mensagem recebida', time: '2 min atrás', unread: true },\n    { id: 2, message: 'Agente João entrou online', time: '5 min atrás', unread: true },\n    { id: 3, message: 'Campanha finalizada com sucesso', time: '1 hora atrás', unread: false },\n  ];\n\n  const unreadCount = notifications.filter(n => n.unread).length;\n\n  // Menu items baseado nas permissões\n  const menuItems: MenuItem[] = [\n    {\n      id: 'dashboard',\n      name: 'Dashboard',\n      icon: Home,\n      path: '/client/dashboard'\n    },\n    {\n      id: 'conversations',\n      name: 'Conversas',\n      icon: MessageCircle,\n      path: '/client/conversations',\n      badge: 5 // Simulado - seria dinâmico\n    },\n    {\n      id: 'whatsapp',\n      name: 'WhatsApp',\n      icon: Phone,\n      permission: 'manage_users',\n      children: [\n        { id: 'whatsapp-connection', name: 'Conexão', icon: Phone, path: '/client/whatsapp' },\n        { id: 'whatsapp-monitoring', name: 'Monitoramento', icon: BarChart3, path: '/client/whatsapp-monitoring' }\n      ]\n    },\n    {\n      id: 'social-media',\n      name: 'Redes Sociais',\n      icon: Instagram,\n      permission: 'manage_users',\n      children: [\n        { id: 'social-integration', name: 'Integração', icon: Settings, path: '/client/social-media' },\n        { id: 'instagram', name: 'Instagram', icon: Instagram, path: '/client/instagram' },\n        { id: 'facebook', name: 'Facebook', icon: Facebook, path: '/client/facebook' }\n      ]\n    },\n    {\n      id: 'team',\n      name: 'Equipe',\n      icon: Users,\n      permission: 'manage_users',\n      children: [\n        { id: 'users', name: 'Usuários', icon: User, path: '/client/users' },\n        { id: 'queue', name: 'Fila de Atendimento', icon: Users, path: '/client/queue' }\n      ]\n    },\n    {\n      id: 'marketing',\n      name: 'Marketing',\n      icon: Target,\n      permission: 'manage_campaigns',\n      children: [\n        { id: 'campaigns', name: 'Campanhas', icon: Send, path: '/client/campaigns' },\n        { id: 'contacts', name: 'Contatos', icon: FileText, path: '/client/contacts', permission: 'manage_contacts' }\n      ]\n    },\n    {\n      id: 'tags',\n      name: 'Tags',\n      icon: Tag,\n      path: '/client/tags'\n    },\n    {\n      id: 'automations',\n      name: 'Automações',\n      icon: Zap,\n      path: '/client/automations',\n      permission: 'manage_automations'\n    },\n    {\n      id: 'reports',\n      name: 'Relatórios',\n      icon: BarChart3,\n      permission: 'view_analytics',\n      children: [\n        { id: 'whatsapp-report', name: 'WhatsApp', icon: Phone, path: '/client/whatsapp-report' },\n        { id: 'conversations-report', name: 'Conversas', icon: MessageCircle, path: '/client/conversations-report' },\n        { id: 'users-report', name: 'Usuários', icon: Users, path: '/client/users-report' },\n        { id: 'contacts-report', name: 'Contatos', icon: FileText, path: '/client/contacts-report' },\n        { id: 'campaigns-report', name: 'Campanhas', icon: Send, path: '/client/campaigns-report' },\n        { id: 'tags-report', name: 'Tags', icon: Tag, path: '/client/tags-report' },\n        { id: 'queue-report', name: 'Fila', icon: Users, path: '/client/queue-report' }\n      ]\n    },\n    {\n      id: 'settings',\n      name: 'Configurações',\n      icon: Settings,\n      path: '/client/settings',\n      permission: 'manage_settings'\n    }\n  ];\n\n  // Filtrar menu items baseado nas permissões\n  const getFilteredMenuItems = (items: MenuItem[]): MenuItem[] => {\n    return items.filter(item => {\n      if (item.permission && !hasPermission(item.permission)) {\n        return false;\n      }\n      if (item.children) {\n        item.children = getFilteredMenuItems(item.children);\n      }\n      return true;\n    });\n  };\n\n  const filteredMenuItems = getFilteredMenuItems(menuItems);\n\n  // Toggle expanded menu\n  const toggleMenu = (menuId: string) => {\n    if (!sidebarExpanded) return; // Só permite toggle quando expandida\n    setExpandedMenus(prev => \n      prev.includes(menuId) \n        ? prev.filter(id => id !== menuId)\n        : [...prev, menuId]\n    );\n  };\n\n  // Handle tooltip\n  const handleMouseEnter = (e: React.MouseEvent, item: MenuItem) => {\n    if (!sidebarExpanded) {\n      const rect = e.currentTarget.getBoundingClientRect();\n      setShowTooltip({\n        id: item.id,\n        name: item.name,\n        x: rect.right + 8,\n        y: rect.top + rect.height / 2\n      });\n    }\n  };\n\n  const handleMouseLeave = () => {\n    setShowTooltip(null);\n  };\n\n  // Handle sidebar mouse events\n  const handleSidebarMouseEnter = () => {\n    setSidebarHovered(true);\n  };\n\n  const handleSidebarMouseLeave = () => {\n    setSidebarHovered(false);\n    setShowTooltip(null); // Limpar tooltip ao sair da sidebar\n  };\n\n  // Render menu item\n  const renderMenuItem = (item: MenuItem, level = 0) => {\n    const isExpanded = expandedMenus.includes(item.id);\n    const hasChildren = item.children && item.children.length > 0;\n    const currentPath = window.location.pathname;\n    const isActive = item.path === currentPath || \n                    (item.children && item.children.some(child => child.path === currentPath));\n\n    return (\n      <div key={item.id}>\n        <div\n          className={`group relative flex items-center justify-between mx-2 rounded-xl cursor-pointer transition-all duration-200 ${\n            isActive \n              ? 'bg-primary-100 text-primary-700 shadow-sm border border-primary-200' \n              : 'text-gray-600 hover:bg-gray-100 hover:text-gray-900 border border-transparent hover:border-gray-200'\n          } ${level > 0 && sidebarExpanded ? 'ml-4' : ''} ${sidebarExpanded ? 'px-3 py-2.5' : 'p-2.5 mx-3 justify-center'}`}\n          style={{\n            backgroundColor: isActive ? currentTheme.colors.primary[50] : undefined,\n            color: isActive ? currentTheme.colors.primary[700] : undefined,\n            borderColor: isActive ? currentTheme.colors.primary[200] : undefined\n          }}\n          onClick={() => {\n            if (hasChildren && sidebarExpanded) {\n              toggleMenu(item.id);\n            } else if (item.path) {\n              window.location.href = item.path;\n            }\n          }}\n          onMouseEnter={(e) => handleMouseEnter(e, item)}\n          onMouseLeave={handleMouseLeave}\n        >\n          <div className=\"flex items-center space-x-3 flex-1 min-w-0\">\n            <div className=\"relative\">\n              <item.icon className={`h-5 w-5 flex-shrink-0 transition-colors ${\n                isActive ? 'text-primary-600' : 'text-gray-400 group-hover:text-gray-600'\n              }`} \n                style={{ color: isActive ? currentTheme.colors.primary[600] : undefined }} \n              />\n              {item.badge && item.badge > 0 && (\n                <span \n                  className={`absolute -top-2 -right-2 inline-flex items-center justify-center text-xs font-bold text-white rounded-full min-w-[18px] h-[18px] px-1 ${\n                    sidebarExpanded ? 'hidden' : 'block'\n                  }`}\n                  style={{ backgroundColor: currentTheme.colors.primary[500] }}\n                >\n                  {item.badge}\n                </span>\n              )}\n            </div>\n            \n            {sidebarExpanded && (\n              <>\n                <span className=\"font-medium text-sm truncate\">{item.name}</span>\n                {item.badge && item.badge > 0 && (\n                  <span \n                    className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold text-white rounded-full\"\n                    style={{ backgroundColor: currentTheme.colors.primary[500] }}\n                  >\n                    {item.badge}\n                  </span>\n                )}\n              </>\n            )}\n          </div>\n          \n          {sidebarExpanded && hasChildren && (\n            <ChevronRight \n              className={`h-4 w-4 text-gray-400 transition-transform duration-200 ${\n                isExpanded ? 'rotate-90' : ''\n              }`} \n            />\n          )}\n        </div>\n\n        {/* Submenu */}\n        {hasChildren && isExpanded && sidebarExpanded && (\n          <div className=\"mt-1 space-y-1 ml-2\">\n            {item.children?.map(child => renderMenuItem(child, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const handleLogout = (e: React.MouseEvent) => {\n    e.preventDefault();\n    logout();\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex\">\n      {/* Sidebar */}\n      <div \n        className={`${sidebarExpanded ? 'w-72' : 'w-16'} bg-white border-r border-gray-200 flex flex-col transition-all duration-300 shadow-sm relative z-30`}\n        onMouseEnter={handleSidebarMouseEnter}\n        onMouseLeave={handleSidebarMouseLeave}\n      >\n        {/* Header da Sidebar */}\n        <div className={`border-b border-gray-200 ${sidebarExpanded ? 'p-4' : 'p-3'}`}>\n          <div className={`flex items-center ${sidebarExpanded ? 'justify-between' : 'justify-center'}`}>\n            <div className=\"flex items-center space-x-3\">\n              <div \n                className=\"w-8 h-8 rounded-xl flex items-center justify-center shadow-sm\"\n                style={{ backgroundColor: currentTheme.colors.primary[600] }}\n              >\n                <MessageCircle className=\"h-5 w-5 text-white\" />\n              </div>\n              {sidebarExpanded && (\n                <div className=\"min-w-0 flex-1\">\n                  <h1 className=\"text-lg font-bold text-gray-900 truncate\">Gybachat</h1>\n                  <p className=\"text-xs text-gray-500 truncate\">{user?.companyName}</p>\n                </div>\n              )}\n            </div>\n            \n            {sidebarExpanded && (\n              <button\n                onClick={() => setSidebarPinned(!sidebarPinned)}\n                className={`p-1.5 rounded-lg transition-all duration-200 ${\n                  sidebarPinned \n                    ? 'text-primary-600 bg-primary-50 hover:bg-primary-100' \n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\n                }`}\n                style={{\n                  color: sidebarPinned ? currentTheme.colors.primary[600] : undefined,\n                  backgroundColor: sidebarPinned ? currentTheme.colors.primary[50] : undefined\n                }}\n                title={sidebarPinned ? 'Desafixar menu' : 'Fixar menu'}\n              >\n                {sidebarPinned ? <Pin className=\"h-4 w-4\" /> : <PinOff className=\"h-4 w-4\" />}\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Busca Global */}\n        {sidebarExpanded && (\n          <div className=\"p-4 border-b border-gray-200\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <input\n                type=\"text\"\n                placeholder=\"Buscar... (Ctrl+K)\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2.5 bg-gray-50 border border-gray-200 rounded-xl text-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 focus:bg-white transition-all duration-200\"\n                style={{\n                  '--tw-ring-color': currentTheme.colors.primary[500]\n                } as React.CSSProperties}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Menu Items */}\n        <div className=\"flex-1 overflow-y-auto py-4\">\n          <nav className=\"space-y-1\">\n            {filteredMenuItems.map(item => renderMenuItem(item))}\n          </nav>\n        </div>\n\n        {/* User Info na Sidebar */}\n        <div className={`border-t border-gray-200 ${sidebarExpanded ? 'p-4' : 'p-3 flex justify-center'}`}>\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center flex-shrink-0\">\n              {user?.avatar ? (\n                <img\n                  src={user.avatar}\n                  alt={user.name}\n                  className=\"w-8 h-8 rounded-full\"\n                />\n              ) : (\n                <User className=\"h-4 w-4 text-gray-600\" />\n              )}\n            </div>\n            {sidebarExpanded && (\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium text-gray-900 truncate\">{user?.name}</p>\n                <p className=\"text-xs text-gray-500 truncate\">\n                  {user?.role === 'admin' ? 'Administrador' : \n                   user?.role === 'supervisor' ? 'Supervisor' : 'Agente'}\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Tooltip para menu minimizado */}\n      {showTooltip && !sidebarExpanded && (\n        <div\n          className=\"fixed z-50 px-3 py-2 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-lg pointer-events-none\"\n          style={{\n            left: showTooltip.x,\n            top: showTooltip.y,\n            transform: 'translateY(-50%)'\n          }}\n        >\n          {showTooltip.name}\n          <div \n            className=\"absolute left-0 top-1/2 transform -translate-y-1/2 -translate-x-1 w-2 h-2 bg-gray-900 rotate-45\"\n          />\n        </div>\n      )}\n\n      {/* Main Content Area */}\n      <div className=\"flex-1 flex flex-col min-w-0\">\n        {/* Top Header */}\n        <header className=\"bg-white border-b border-gray-200 px-6 py-4 shadow-sm\">\n          <div className=\"flex items-center justify-between\">\n            {/* Breadcrumb */}\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n              <Home className=\"h-4 w-4\" />\n              <ChevronRight className=\"h-4 w-4\" />\n              <span className=\"text-gray-900 font-medium\">Dashboard</span>\n            </div>\n\n            {/* Right side */}\n            <div className=\"flex items-center space-x-4\">\n              {/* Global Search */}\n              <div className=\"hidden md:block relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Busca global... (Ctrl+K)\"\n                  className=\"w-64 pl-10 pr-4 py-2.5 bg-gray-50 border border-gray-200 rounded-xl text-sm focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 focus:bg-white transition-all duration-200\"\n                  style={{\n                    '--tw-ring-color': currentTheme.colors.primary[500]\n                  } as React.CSSProperties}\n                />\n              </div>\n\n              {/* Notifications */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowNotifications(!showNotifications)}\n                  className=\"p-2.5 text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded-xl transition-all duration-200 relative\"\n                >\n                  <Bell className=\"h-5 w-5\" />\n                  {unreadCount > 0 && (\n                    <span \n                      className=\"absolute -top-1 -right-1 h-5 w-5 text-white text-xs rounded-full flex items-center justify-center font-bold shadow-sm\"\n                      style={{ backgroundColor: currentTheme.colors.primary[500] }}\n                    >\n                      {unreadCount}\n                    </span>\n                  )}\n                </button>\n\n                {showNotifications && (\n                  <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-xl shadow-xl border border-gray-200 z-50 overflow-hidden\">\n                    <div className=\"p-4 border-b border-gray-200 bg-gray-50\">\n                      <div className=\"flex items-center justify-between\">\n                        <h3 className=\"text-sm font-semibold text-gray-900\">Notificações</h3>\n                        {unreadCount > 0 && (\n                          <span \n                            className=\"px-2 py-1 text-xs font-medium text-white rounded-full\"\n                            style={{ backgroundColor: currentTheme.colors.primary[500] }}\n                          >\n                            {unreadCount} novas\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"max-h-64 overflow-y-auto\">\n                      {notifications.map((notification) => (\n                        <div\n                          key={notification.id}\n                          className={`p-4 border-b border-gray-100 hover:bg-gray-50 transition-colors cursor-pointer ${\n                            notification.unread ? 'bg-blue-50 border-l-4 border-l-blue-500' : ''\n                          }`}\n                        >\n                          <div className=\"flex items-start space-x-3\">\n                            <div className={`w-2 h-2 rounded-full mt-2 ${\n                              notification.unread ? 'bg-blue-500' : 'bg-gray-300'\n                            }`} />\n                            <div className=\"flex-1 min-w-0\">\n                              <p className=\"text-sm text-gray-900\">{notification.message}</p>\n                              <p className=\"text-xs text-gray-500 mt-1\">{notification.time}</p>\n                            </div>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n                      <button \n                        className=\"text-sm font-medium hover:text-primary-700 transition-colors\"\n                        style={{ color: currentTheme.colors.primary[600] }}\n                      >\n                        Ver todas as notificações\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Help */}\n              <button className=\"p-2.5 text-gray-400 hover:text-gray-500 hover:bg-gray-100 rounded-xl transition-all duration-200\">\n                <HelpCircle className=\"h-5 w-5\" />\n              </button>\n\n              {/* User Menu */}\n              <div className=\"relative\">\n                <button\n                  onClick={() => setShowUserMenu(!showUserMenu)}\n                  className=\"flex items-center space-x-3 p-2 rounded-xl hover:bg-gray-100 transition-all duration-200\"\n                >\n                  <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center\">\n                    {user?.avatar ? (\n                      <img\n                        src={user.avatar}\n                        alt={user.name}\n                        className=\"w-8 h-8 rounded-full\"\n                      />\n                    ) : (\n                      <User className=\"h-4 w-4 text-gray-600\" />\n                    )}\n                  </div>\n                  <div className=\"hidden md:block text-left\">\n                    <p className=\"text-sm font-medium text-gray-900\">{user?.name}</p>\n                    <p className=\"text-xs text-gray-500\">{user?.email}</p>\n                  </div>\n                  <ChevronDown className=\"h-4 w-4 text-gray-400\" />\n                </button>\n\n                {showUserMenu && (\n                  <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-xl border border-gray-200 z-50 overflow-hidden\">\n                    <div className=\"py-1\">\n                      <button className=\"flex items-center space-x-2 w-full px-4 py-3 text-sm text-gray-700 hover:bg-gray-100 transition-colors\">\n                        <User className=\"h-4 w-4\" />\n                        <span>Meu Perfil</span>\n                      </button>\n                      <button className=\"flex items-center space-x-2 w-full px-4 py-3 text-sm text-gray-700 hover:bg-gray-100 transition-colors\">\n                        <Settings className=\"h-4 w-4\" />\n                        <span>Configurações</span>\n                      </button>\n                      <hr className=\"my-1\" />\n                      <button\n                        onClick={handleLogout}\n                        className=\"flex items-center space-x-2 w-full px-4 py-3 text-sm text-red-700 hover:bg-red-50 transition-colors\"\n                      >\n                        <LogOut className=\"h-4 w-4\" />\n                        <span>Sair</span>\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </header>\n\n        {/* Main Content */}\n        <main className=\"flex-1 overflow-auto\">\n          <div className=\"p-6\">\n            {children}\n          </div>\n        </main>\n      </div>\n\n      {/* Click outside to close menus */}\n      {(showUserMenu || showNotifications) && (\n        <div\n          className=\"fixed inset-0 z-40\"\n          onClick={() => {\n            setShowUserMenu(false);\n            setShowNotifications(false);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ClientLayout;","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { useAuthStore } from './stores/authStore';\nimport { useThemeStore } from './stores/themeStore';\nimport { prefetchLikelyRoutes } from './lib/preloadRoutes';\nimport { isOffline } from './lib/serviceWorker';\nimport { initializeSocket } from './lib/socket';\n\n// Master Panel Components\nimport MasterLogin from './components/master/MasterLogin';\nimport MasterDashboard from './components/master/MasterDashboard';\n\n// Client Panel Components\nimport ClientLogin from './components/client/ClientLogin';\nimport ClientDashboard from './components/client/ClientDashboard';\nimport WhatsAppConnection from './components/client/WhatsAppConnection';\nimport WhatsAppMonitoring from './components/client/WhatsAppMonitoring';\nimport ConversationsModule from './components/client/ConversationsModule';\nimport TagsManagement from './components/client/TagsManagement';\nimport UserManagement from './components/client/UserManagement';\nimport CampaignManagement from './components/client/CampaignManagement';\nimport QueueManagement from './components/client/QueueManagement';\nimport SocialMediaIntegration from './components/client/SocialMediaIntegration';\nimport SocialMediaConnection from './components/client/SocialMediaConnection';\nimport SocialMediaMonitoring from './components/client/SocialMediaMonitoring';\n\n// Relatórios\nimport WhatsAppReport from './components/client/WhatsAppReport';\nimport ConversationsReport from './components/client/ConversationsReport';\nimport UsersReport from './components/client/UsersReport';\nimport ContactsReport from './components/client/ContactsReport';\nimport CampaignsReport from './components/client/CampaignsReport';\nimport TagsReport from './components/client/TagsReport';\nimport QueueReport from './components/client/QueueReport';\n\n// Master Panel Components\nimport ThemeSelector from './components/master/ThemeSelector';\nimport GlobalSettings from './components/master/GlobalSettings';\nimport CompanyManagement from './components/master/CompanyManagement';\n\n// Layout Components\nimport MasterLayout from './components/layouts/MasterLayout';\nimport ClientLayout from './components/layouts/ClientLayout';\n\n// Placeholder para módulos em desenvolvimento\nconst ModulePlaceholder: React.FC<{\n  title: string;\n  description: string;\n  icon: React.ReactNode;\n  features: string[];\n  color: string;\n}> = ({ title, description, icon, features, color }) => (\n  <div className=\"text-center py-12\">\n    <div className=\"mx-auto mb-4\">{icon}</div>\n    <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{title}</h3>\n    <p className=\"text-gray-600 mb-6\">{description}</p>\n    <div className={`${color} rounded-lg p-6 max-w-2xl mx-auto`}>\n      <p className=\"text-sm font-semibold mb-4\">\n        🚧 <strong>Em desenvolvimento:</strong>\n      </p>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 text-sm text-left\">\n        {features.map((feature, index) => (\n          <div key={index} className=\"flex items-center space-x-2\">\n            <div className=\"h-4 w-4 text-green-600\">✓</div>\n            <span>{feature}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nfunction App() {\n  const { user, userType } = useAuthStore();\n  const { currentTheme } = useThemeStore();\n  const [offlineMode, setOfflineMode] = React.useState(false);\n  const [currentRoute, setCurrentRoute] = React.useState('');\n\n  // Inicializar socket quando o usuário fizer login\n  useEffect(() => {\n    if (user && user.token) {\n      initializeSocket();\n    }\n  }, [user]);\n\n  // Aplicar tema ao documento root\n  useEffect(() => {\n    const root = document.documentElement;\n    const theme = currentTheme;\n    \n    // Remover classes de tema existentes\n    root.classList.remove('theme-blue', 'theme-green', 'theme-purple');\n    \n    // Adicionar classe do tema atual\n    root.classList.add(`theme-${theme.name}`);\n    \n    // Definir propriedades CSS personalizadas\n    Object.entries(theme.colors.primary).forEach(([shade, color]) => {\n      root.style.setProperty(`--primary-${shade}`, color);\n    });\n    \n    // Definir variáveis adicionais para uso comum\n    root.style.setProperty('--color-primary', theme.colors.primary[600]);\n    root.style.setProperty('--color-primary-hover', theme.colors.primary[700]);\n    root.style.setProperty('--color-primary-light', theme.colors.primary[100]);\n    root.style.setProperty('--color-primary-dark', theme.colors.primary[800]);\n  }, [currentTheme]);\n\n  // Monitorar status de conexão\n  useEffect(() => {\n    const handleOnline = () => setOfflineMode(false);\n    const handleOffline = () => setOfflineMode(true);\n    \n    // Verificar status inicial\n    setOfflineMode(isOffline());\n    \n    // Adicionar event listeners\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    \n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  // Prefetch de rotas prováveis\n  useEffect(() => {\n    if (currentRoute) {\n      prefetchLikelyRoutes(currentRoute);\n    }\n  }, [currentRoute]);\n\n  // Componente de alerta offline\n  const OfflineAlert = () => (\n    <div className=\"fixed bottom-4 left-4 right-4 md:left-auto md:right-4 md:w-80 bg-yellow-50 border border-yellow-200 rounded-lg p-4 shadow-lg z-50\">\n      <div className=\"flex items-start space-x-3\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-yellow-500 mt-0.5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n        </svg>\n        <div>\n          <h3 className=\"text-sm font-medium text-yellow-800\">Modo Offline</h3>\n          <p className=\"mt-1 text-xs text-yellow-700\">\n            Você está offline. Algumas funcionalidades podem estar limitadas.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Router>\n      <div className=\"min-h-screen bg-gray-50\">\n        {offlineMode && <OfflineAlert />}\n        \n        <Routes>\n          {/* Master Panel Routes */}\n          <Route path=\"/master/login\" element={\n            user && userType === 'master' ? <Navigate to=\"/master\" /> : <MasterLogin />\n          } />\n          \n          <Route path=\"/master/*\" element={\n            user && userType === 'master' ? (\n              <MasterLayout>\n                <Routes>\n                  <Route path=\"/\" element={<MasterDashboard />} />\n                  <Route path=\"/dashboard\" element={<MasterDashboard />} />\n                  <Route path=\"/companies\" element={<CompanyManagement />} />\n                  <Route path=\"/themes\" element={<ThemeSelector />} />\n                  <Route path=\"/settings\" element={<GlobalSettings />} />\n                </Routes>\n              </MasterLayout>\n            ) : (\n              <Navigate to=\"/master/login\" />\n            )\n          } />\n\n          {/* Client Panel Routes */}\n          <Route path=\"/client/login\" element={\n            user && userType === 'client' ? <Navigate to=\"/client\" /> : <ClientLogin />\n          } />\n          \n          <Route path=\"/client/*\" element={\n            user && userType === 'client' ? (\n              <ClientLayout>\n                <Routes>\n                  <Route path=\"/\" element={<ClientDashboard />} />\n                  <Route path=\"/dashboard\" element={<ClientDashboard />} />\n                  <Route path=\"/whatsapp\" element={<WhatsAppConnection companyId={user?.companyId || 'company-1'} />} />\n                  <Route path=\"/whatsapp-monitoring\" element={<WhatsAppMonitoring />} />\n                  <Route path=\"/conversations\" element={<ConversationsModule />} />\n                  <Route path=\"/tags\" element={<TagsManagement />} />\n                  <Route path=\"/users\" element={<UserManagement />} />\n                  <Route path=\"/campaigns\" element={<CampaignManagement />} />\n                  <Route path=\"/queue\" element={<QueueManagement />} />\n                  <Route path=\"/social-media\" element={<SocialMediaIntegration />} />\n                  <Route path=\"/instagram\" element={<SocialMediaConnection companyId={user?.companyId || 'company-1'} platform=\"instagram\" />} />\n                  <Route path=\"/facebook\" element={<SocialMediaConnection companyId={user?.companyId || 'company-1'} platform=\"facebook\" />} />\n                  <Route path=\"/instagram-monitoring\" element={<SocialMediaMonitoring platform=\"instagram\" />} />\n                  <Route path=\"/facebook-monitoring\" element={<SocialMediaMonitoring platform=\"facebook\" />} />\n                  \n                  {/* Módulos em desenvolvimento */}\n                  <Route path=\"/contacts\" element={\n                    <ModulePlaceholder\n                      title=\"Gerenciamento de Contatos\"\n                      description=\"Upload de planilhas e gerenciamento de listas\"\n                      icon={<div className=\"h-16 w-16 text-gray-400 mx-auto\">📊</div>}\n                      features={[\n                        'Upload CSV/Excel',\n                        'Validação de números',\n                        'Segmentação avançada',\n                        'Tags personalizadas',\n                        'Histórico de interações',\n                        'Blacklist automática',\n                        'Sincronização CRM',\n                        'Backup automático'\n                      ]}\n                      color=\"bg-indigo-50\"\n                    />\n                  } />\n                  <Route path=\"/automations\" element={\n                    <ModulePlaceholder\n                      title=\"Automações Inteligentes\"\n                      description=\"Fluxos automatizados e chatbots avançados\"\n                      icon={<div className=\"h-16 w-16 text-gray-400 mx-auto\">⚡</div>}\n                      features={[\n                        'Triggers personalizados',\n                        'Integração com CRM',\n                        'IA conversacional',\n                        'Workflows visuais',\n                        'Condições complexas',\n                        'Machine Learning',\n                        'API integrations',\n                        'Analytics preditivos'\n                      ]}\n                      color=\"bg-orange-50\"\n                    />\n                  } />\n                  <Route path=\"/settings\" element={\n                    <ModulePlaceholder\n                      title=\"Configurações da Empresa\"\n                      description=\"Personalize sua experiência na plataforma\"\n                      icon={<div className=\"h-16 w-16 text-gray-400 mx-auto\">⚙️</div>}\n                      features={[\n                        'Dados da empresa',\n                        'Configurações de notificação',\n                        'Integrações externas',\n                        'Backup e segurança',\n                        'Personalização visual',\n                        'Webhooks',\n                        'API keys',\n                        'Logs de auditoria'\n                      ]}\n                      color=\"bg-gray-50\"\n                    />\n                  } />\n                  \n                  {/* Rotas de Relatórios */}\n                  <Route path=\"/whatsapp-report\" element={<WhatsAppReport />} />\n                  <Route path=\"/conversations-report\" element={<ConversationsReport />} />\n                  <Route path=\"/users-report\" element={<UsersReport />} />\n                  <Route path=\"/contacts-report\" element={<ContactsReport />} />\n                  <Route path=\"/campaigns-report\" element={<CampaignsReport />} />\n                  <Route path=\"/tags-report\" element={<TagsReport />} />\n                  <Route path=\"/queue-report\" element={<QueueReport />} />\n                </Routes>\n              </ClientLayout>\n            ) : (\n              <Navigate to=\"/client/login\" />\n            )\n          } />\n\n          {/* Default Routes */}\n          <Route path=\"/\" element={<Navigate to=\"/client/login\" />} />\n          <Route path=\"*\" element={<Navigate to=\"/client/login\" />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","/**\n * Utilitário para otimização de imagens\n * Implementa lazy loading, dimensionamento responsivo e formatos modernos\n */\n\ninterface ImageOptions {\n  width?: number;\n  height?: number;\n  quality?: number;\n  format?: 'webp' | 'jpeg' | 'png' | 'avif';\n  fit?: 'cover' | 'contain' | 'fill';\n}\n\n/**\n * Otimiza URLs de imagens para CDN\n * Funciona com imagens do Pexels, Unsplash e outros CDNs populares\n */\nexport function optimizeImage(url: string, options: ImageOptions = {}): string {\n  if (!url) return '';\n  \n  // Imagens já otimizadas ou SVGs\n  if (url.includes('data:image') || url.endsWith('.svg')) {\n    return url;\n  }\n\n  // Otimização para Unsplash\n  if (url.includes('unsplash.com')) {\n    const baseUrl = url.split('?')[0];\n    const width = options.width || 800;\n    const height = options.height;\n    const quality = options.quality || 80;\n    const format = options.format || 'webp';\n    const fit = options.fit || 'cover';\n    \n    let optimizedUrl = `${baseUrl}?fm=${format}&q=${quality}&fit=${fit}&w=${width}`;\n    if (height) optimizedUrl += `&h=${height}`;\n    \n    return optimizedUrl;\n  }\n  \n  // Otimização para Pexels\n  if (url.includes('pexels.com')) {\n    const baseUrl = url.split('?')[0];\n    const width = options.width || 800;\n    const quality = options.quality || 80;\n    \n    // Pexels usa um formato diferente de parâmetros\n    return `${baseUrl}?auto=compress&cs=tinysrgb&w=${width}&q=${quality}`;\n  }\n  \n  // Para outras imagens, retornar URL original\n  return url;\n}\n\n/**\n * Gera srcset para imagens responsivas\n */\nexport function generateSrcSet(url: string, options: ImageOptions = {}): string {\n  if (!url || url.includes('data:image') || url.endsWith('.svg')) {\n    return '';\n  }\n  \n  const widths = [320, 640, 960, 1280, 1920];\n  const format = options.format || 'webp';\n  const quality = options.quality || 80;\n  \n  return widths\n    .map(width => {\n      const optimizedUrl = optimizeImage(url, { ...options, width });\n      return `${optimizedUrl} ${width}w`;\n    })\n    .join(', ');\n}\n\n/**\n * Componente de imagem otimizada para React\n */\nexport const getImageProps = (url: string, options: ImageOptions = {}) => {\n  const optimizedSrc = optimizeImage(url, options);\n  const srcSet = generateSrcSet(url, options);\n  \n  return {\n    src: optimizedSrc,\n    srcSet: srcSet || undefined,\n    loading: 'lazy',\n    decoding: 'async',\n    width: options.width,\n    height: options.height,\n    style: {\n      objectFit: options.fit || 'cover',\n    },\n  };\n};\n\n/**\n * Pré-carrega imagens críticas\n */\nexport function preloadCriticalImages(urls: string[]): void {\n  if (typeof document === 'undefined') return;\n  \n  urls.forEach(url => {\n    const link = document.createElement('link');\n    link.rel = 'preload';\n    link.as = 'image';\n    link.href = optimizeImage(url, { width: 800, format: 'webp' });\n    document.head.appendChild(link);\n  });\n}\n\nexport default {\n  optimizeImage,\n  generateSrcSet,\n  getImageProps,\n  preloadCriticalImages\n};","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\nimport './App.css';\nimport { registerServiceWorker } from './lib/serviceWorker.ts';\nimport { preloadCriticalImages } from './lib/imageOptimizer.ts';\n\n// Registrar Service Worker para cache offline e melhor performance\nregisterServiceWorker();\n\n// Pré-carregar imagens críticas\npreloadCriticalImages([\n  // Adicione aqui URLs de imagens críticas que devem ser pré-carregadas\n  // Exemplo: logos, backgrounds de login, etc.\n]);\n\n// Adicionar meta tags para PWA\nif (typeof document !== 'undefined') {\n  // Theme color\n  const metaThemeColor = document.createElement('meta');\n  metaThemeColor.name = 'theme-color';\n  metaThemeColor.content = '#3B82F6';\n  document.head.appendChild(metaThemeColor);\n  \n  // Apple touch icon\n  const appleTouchIcon = document.createElement('link');\n  appleTouchIcon.rel = 'apple-touch-icon';\n  appleTouchIcon.href = '/icons/apple-touch-icon.png';\n  document.head.appendChild(appleTouchIcon);\n  \n  // Manifest\n  const manifestLink = document.createElement('link');\n  manifestLink.rel = 'manifest';\n  manifestLink.href = '/manifest.json';\n  document.head.appendChild(manifestLink);\n}\n\n// Definir variável global para socket\nwindow.socket = null;\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","createRoot","hydrateRoot","createJSONStorage","getStorage","options","storage","_e","getItem","name","_a","parse","str2","JSON","str","Promise","then","setItem","newValue","stringify","removeItem","toThenable","fn","input","result","onFulfilled","_onRejected","this","_onFulfilled","catch","onRejected","persist","config","baseOptions","set","get","api","localStorage","serialize","deserialize","partialize","state","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","Set","finishHydrationListeners","args","thenableSerialize","errorInSync","thenable","serializedValue","savedSetState","setState","replace","configResult","stateFromStorage","hydrate","forEach","cb","postRehydrationCallback","onRehydrateStorage","bind","storageValue","deserializedStorageValue","migrate","migratedState","_a2","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","add","delete","onFinishHydration","oldImpl","getInitialState","_b","migrationResult","migrated","skipHydration","newImpl","constructor","baseURL","__publicField","request","endpoint","user","useAuthStore","getState","url","headers","token","Authorization","companyId","response","fetch","ok","errorData","json","Error","error","status","statusText","login","email","password","userType","method","body","register","userData","verifyToken","getWhatsAppStatus","connectWhatsApp","disconnectWhatsApp","sendWhatsAppMessage","to","message","getWhatsAppQRCode","getWhatsAppSessions","getWhatsAppStats","dateRange","queryParams","URLSearchParams","toString","getWhatsAppMonitoring","instanceName","getWhatsAppConnectionTypes","getSocialMediaStatus","platform","connectSocialMedia","authData","disconnectSocialMedia","getSocialMediaSessions","getSocialMediaStats","getConversations","filters","getConversationsReport","getConversation","conversationId","updateConversation","updateData","getMessages","limit","offset","sendMessage","messageData","getUsers","getUsersReport","createUser","updateUser","userId","deleteUser","getTags","createTag","tagData","updateTag","tagId","deleteTag","getCampaigns","createCampaign","campaignData","updateCampaign","campaignId","deleteCampaign","getAnalytics","uploadFile","file","formData","FormData","append","getCompanies","createCompany","companyData","updateCompany","deleteCompany","rolePermissions","admin","supervisor","agent","create","isLoading","async","id","role","permissions","demoUsers","companyName","success","avatar","avatar_url","company_id","department","metadata","phone","lastLogin","Date","toISOString","apiError","logout","window","socket","disconnect","location","pathname","includes","href","hasPermission","permission","isAdminOrSupervisor","themes","blue","displayName","colors","primary","green","purple","orange","red","teal","defaultGlobalSettings","platformName","supportEmail","supportPhone","defaultTimezone","defaultLanguage","defaultCurrency","maintenanceMode","allowNewRegistrations","sessionTimeout","maxLoginAttempts","lockoutDuration","passwordStrength","require2FA","enableAuditLogs","enableEncryption","maxUsersPerCompany","maxChatsPerUser","basicPlanMessageLimit","proPlanMessageLimit","enterprisePlanMessageLimit","maxFileSize","dataRetentionDays","apiRateLimit","enableWhatsApp","enableTelegram","enableInstagram","enableFacebook","enableWebChat","enableEmail","enableEmailNotifications","enableSMSNotifications","enablePushNotifications","enableSlackIntegration","enableDiscordIntegration","enableBilling","defaultPaymentMethod","invoicePrefix","taxRate","trialPeriodDays","gracePeriodDays","enableChatbots","enableAutoResponders","enableWorkflowAutomation","enableScheduledMessages","enableSystemMonitoring","enablePerformanceTracking","enableErrorTracking","enableUptime","enableAutoBackup","backupFrequency","backupRetention","logLevel","enableLogRotation","enablePublicAPI","enableWebhooks","webhookRetryAttempts","apiVersioning","enableCDN","enableCaching","cacheTimeout","enableCompression","enableSSL","useThemeStore","currentTheme","availableThemes","values","globalSettings","setTheme","themeName","theme","applyThemeGlobally","updateGlobalSettings","newSettings","root","document","documentElement","keys","classList","remove","entries","shade","color","style","setProperty","dispatchEvent","CustomEvent","detail","onRehydrate","setTimeout","routeResources","prefetchLikelyRoutes","currentRoute","route","resource","match","Image","src","link","createElement","rel","head","appendChild","prefetchRouteResources","CACHE_NAME","CACHE_STRATEGIES","serviceWorkerCode","map","r","join","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","splice","emit","Array","emitReserved","listeners","hasListeners","nextTick","resolve","setTimeoutFn","globalThisShim","self","Function","pick","attr","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","clearTimeoutFn","utf8Length","Math","ceil","randomString","now","random","TransportError","reason","description","context","super","Transport","writable","query","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","encodeURIComponent","Polling","_polling","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","value","XMLHttpRequest","err","hasCORS","empty","BaseXHR","isSSL","protocol","xd","req","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","_onLoad","_onError","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","expectedLength","isBinary","headerArray","getUint16","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","_hasPingExpired","hasExpired","msg","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","onTransportClose","onupgrade","_filterUpgrades","upgrades","filteredUpgrades","o","DEFAULT_TRANSPORTS","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","deconstruction","unshift","freeze","connect","connect_error","disconnecting","newListener","Socket","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","sameNamespace","forceNew","multiplex","socketManager","parseInt","setupEventListeners","reconnectAttempts","maxReconnectAttempts","reconnectDelay","joinConversation","leaveConversation","sendTyping","isTyping","userName","updatePresence","socketId","MasterLogin","setEmail","useState","setPassword","showPassword","setShowPassword","setError","className","children","Shield","onSubmit","preventDefault","htmlFor","required","onChange","target","autoComplete","onClick","EyeOff","Eye","disabled","Loader2","SystemStats","monthlyData","month","empresas","mensagens","receita","planDistribution","getAlertIcon","AlertTriangle","CheckCircle","Activity","TrendingUp","Building2","MessageCircle","DollarSign","Server","ResponsiveContainer","width","height","LineChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Line","stroke","strokeWidth","PieChart","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","entry","index","Cell","fill","plan","backgroundColor","usage","metric","time","alert","Clock","BarChart","formatter","toLocaleString","Bar","radius","MasterDashboard","ClientLogin","AgentDashboard","agentStats","conversations","avgResponseTime","resolutionRate","satisfaction","messagesHandled","activeTime","conversationTypes","getGoalBgColor","percentage","Timer","Target","star","Star","ThumbsUp","Trophy","goal","day","responseTime","hour","activity","Zap","AdminDashboard","companyStats","today","totalConversations","activeAgents","peakHour","conversionRate","thisWeek","newCustomers","revenue","thisMonth","channelDistribution","getStatusColor","getTrendIcon","trend","ArrowUp","ArrowDown","Minus","UserCheck","Users","Award","efficiency","AreaChart","volume","agents","Area","fillOpacity","channel","Calendar","ClientDashboard","WhatsAppConnection","connectionStatus","setConnectionStatus","qrCode","setQrCode","setIsLoading","phoneNumber","setPhoneNumber","retryCount","setRetryCount","showMonitoring","setShowMonitoring","connectionStats","setConnectionStats","availableConnectionTypes","setAvailableConnectionTypes","selectedConnectionType","setSelectedConnectionType","useEffect","loadConnectionTypes","checkConnectionStatus","handleQrCodeEvent","handleConnectedEvent","handleDisconnectedEvent","connectionType","uptime","connectedSince","reconnectCount","messagesSent","messagesReceived","customEvent","refreshQrCode","prev","formatUptime","seconds","days","hours","minutes","RefreshCw","AlertCircle","getStatusIcon","getStatusText","checked","Radio","QrCode","alt","Smartphone","Link","BarChart3","Send","WhatsAppMonitoring","sessions","setSessions","refreshInterval","setRefreshInterval","autoRefresh","setAutoRefresh","lastRefreshed","setLastRefreshed","selectedSession","setSelectedSession","showDetailedStats","setShowDetailedStats","instanceMonitoring","setInstanceMonitoring","isLoadingMonitoring","setIsLoadingMonitoring","loadSessions","setInterval","session","find","s","loadInstanceMonitoring","session_name","clearInterval","mockSessions","phone_number","last_seen","created_at","updated_at","device_info","phone_version","device_manufacturer","device_model","os_version","wa_version","battery","connection_stats","connected_since","reconnect_count","last_reconnect","message_stats","sent_today","received_today","sent_total","received_total","delivery_rate","read_rate","response_rate","health_status","issues","last_check","mockMonitoring","instance_name","level","charging","connection","strength","memory_usage","used","cpu_usage","messages","last_activity","health_score","formatDate","dateString","year","minute","getStatusBadge","XCircle","getHealthStatusBadge","getMessageTrend","stats","isHighSent","round","isHighReceived","ArrowUpRight","ArrowDownRight","selectedSessionData","RouterLink","ArrowLeft","title","toLocaleTimeString","Phone","issue","BarChart2","Signal","Wifi","Gauge","toFixed","toUpperCase","Download","ConversationsModule","selectedConversation","setSelectedConversation","setConversations","setMessages","messageInput","setMessageInput","searchTerm","setSearchTerm","selectedFilters","setSelectedFilters","showConversationInfo","setShowConversationInfo","showTagManager","setShowTagManager","editingTags","setEditingTags","newTag","setNewTag","selectedTagColor","setSelectedTagColor","realTimeMode","setRealTimeMode","tagTemplates","setTagTemplates","isLoadingConversations","setIsLoadingConversations","isLoadingMessages","setIsLoadingMessages","messagesEndRef","useRef","loadConversations","loadTags","loadMessages","scrollToBottom","interval","formattedConversations","conv","last_message_time","formattedMessages","timestamp","unread_count","tag","category","isDefault","is_default","scrollIntoView","behavior","trim","message_type","sender_name","toggleFilter","filterId","clearAllFilters","smartFilters","React","useMemo","icon","Flame","priority","condition","Crosshair","tags","Crown","assigned_agent_id","filteredConversations","filtered","customer_name","customer_phone","customer_email","last_message","sort","priorityOrder","urgent","high","medium","low","priorityDiff","getTime","currentConversation","TagComponent","onRemove","showRemove","tagName","template","getTagColor","border","Hash","stopPropagation","X","SmartFiltersComponent","Radar","Tag","MoreVertical","Search","conversation","customer_avatar_url","User","Video","Info","updatedTags","removeTagFromConversation","sender","file_url","file_name","file_size","Paperclip","rows","onKeyDown","shiftKey","Smile","defaultValue","internal_notes","onBlur","TagsManagement","filterCategory","setFilterCategory","showCreateModal","setShowCreateModal","editingTag","setEditingTag","newTagName","setNewTagName","newTagColor","setNewTagColor","newTagCategory","setNewTagCategory","newTagDescription","setNewTagDescription","selectedTags","setSelectedTags","showBulkActions","setShowBulkActions","sortBy","setSortBy","sortOrder","setSortOrder","formattedTags","usageCount","usage_count","createdAt","createdBy","created_by_name","lastUsed","last_used","aiSuggested","keywords","tagUsageStats","totalTags","activelyUsed","mostUsed","recentlyCreated","categoryDistribution","usageTrend","date","filteredAndSortedTags","matchesSearch","keyword","matchesCategory","comparison","localeCompare","clearSelection","getCategoryBadge","icons","custom","Brain","Plus","field","order","confirm","usageIndicator","label","toggleTagSelection","toLocaleDateString","Edit","duplicateTag","Copy","Trash2","Sparkles","word","Fragment","UserManagement","filterRole","setFilterRole","filterStatus","setFilterStatus","showAddModal","setShowAddModal","selectedUser","setSelectedUser","users","setUsers","loadUsers","last_login","conversationsToday","getRoleBadge","inactive","getPerformanceColor","filteredUsers","u","matchesRole","matchesStatus","userItem","sum","_","arr","CampaignManagement","filterType","setFilterType","campaigns","setCampaigns","loadCampaigns","running","Play","paused","Pause","completed","scheduled","cancelled","draft","FileText","getChannelIcon","Globe","calculateConversionRate","converted","calculateOpenRate","delivered","filteredCampaigns","campaign","matchesType","totalStats","clicked","promotional","welcome","retargeting","survey","product_launch","QueueManagement","activeTab","setActiveTab","showAdvancedFilters","setShowAdvancedFilters","queueItems","setQueueItems","setAgents","loadQueueData","loadAgents","customerName","customerPhone","customerEmail","customerAvatar","waitTime","estimatedWaitTime","aiPredictedWaitTime","customerValue","urgencyScore","satisfactionHistory","conversationPreview","lastPurchase","totalSpent","aiInsights","sentiment","complexity","suggestedAgent","estimatedDuration","customerIntent","riskScore","assignedAgent","accountType","issueType","leadSource","interest","specialties","currentLoad","maxLoad","satisfactionScore","languages","workingHours","end","timezone","skills","configuracao","vendas","consultoria","cobranca","pagamentos","financeiro","item","TrendingDown","UserPlus","ArrowRight","realTimeMetrics","totalInQueue","avgWaitTime","criticalItems","agentsAvailable","throughputPerHour","satisfactionTrend","escalationRate","aiAccuracy","filteredItems","items","valueOrder","platinum","gold","silver","bronze","Wand2","getPriorityColor","getSentimentIcon","Layers","ArrowRightLeft","SkipForward","SocialMediaConnection","accountInfo","setAccountInfo","authCode","setAuthCode","showAuthForm","setShowAuthForm","getPlatformName","username","Instagram","Facebook","profilePicture","Key","ExternalLink","SocialMediaIntegration","Settings","SocialMediaMonitoring","account_id","account_name","account_username","profile_picture_url","getPlatformIcon","WhatsAppReport","setStats","setDateRange","loadStats","totalMessages","sentMessages","receivedMessages","mediaMessages","activeHours","dailyActivity","handleDateRangeChange","filteredSessions","print","Printer","Filter","ArrowUpDown","minHeight","ConversationsReport","filterSource","setFilterSource","filterPriority","setFilterPriority","mockConversations","from","agentName","updatedAt","assigned_agent_name","message_count","resolution_time","statsData","waiting","avgResolutionTime","bySource","byPriority","byTag","byAgent","totalTime","handleSort","getPriorityBadge","getSourceIcon","formatDuration","remainingSeconds","filteredAndSortedConversations","matchesSource","matchesPriority","UsersReport","filterDepartment","setFilterDepartment","departments","mockUsers","conversationsTotal","messagesCount","byRole","byDepartment","topPerformers","byConversations","byResponseTime","bySatisfaction","agentsWithStats","filteredAndSortedUsers","matchesDepartment","Boolean","dept","ContactsReport","contacts","setContacts","filteredContacts","setFilteredContacts","filterTag","setFilterTag","availableTags","setAvailableTags","showExportOptions","setShowExportOptions","loadContacts","filterContacts","contact","getContacts","last_interaction","toggleSort","csvRows","csvContent","row","cell","blob","URL","createObjectURL","setAttribute","visibility","click","removeChild","FileSpreadsheet","Mail","CampaignsReport","setFilteredCampaigns","filterCampaigns","getTypeColor","calculateClickRate","totals","scheduledAt","targetAudience","segments","TagsReport","setTags","filteredTags","setFilteredTags","filterTags","getCategoryName","getCategoryColor","QueueReport","setFilteredItems","queueStats","setQueueStats","filterQueueItems","mockQueueItems","formatWaitTime","getStatusName","getPriorityName","getCustomerValueColor","score","ThemeSelector","Palette","borderColor","Check","GlobalSettings","settings","setSettings","hasChanges","setHasChanges","isSaving","setIsSaving","saveMessage","setSaveMessage","handleChange","section","tabs","Bell","Database","RotateCcw","text","xmlns","viewBox","Save","tab","borderBottomColor","CompanyManagement","companies","messagesThisMonth","messageLimit","lastActivity","whatsappStatus","domain","trial","suspended","expired","getPlanBadge","Profissional","Enterprise","sortedAndFilteredCompanies","company","matchesFilter","usagePercentage","MasterLayout","showUserMenu","setShowUserMenu","showNotifications","setShowNotifications","sidebarPinned","setSidebarPinned","sidebarHovered","setSidebarHovered","showTooltip","setShowTooltip","saved","sidebarExpanded","notifications","unread","unreadCount","menuItems","handleMouseLeave","renderMenuItem","currentPath","isActive","onMouseEnter","rect","currentTarget","getBoundingClientRect","x","right","y","top","handleMouseEnter","onMouseLeave","Pin","PinOff","left","Home","ChevronRight","notification","HelpCircle","ChevronDown","LogOut","ClientLayout","expandedMenus","setExpandedMenus","getFilteredMenuItems","filteredMenuItems","badge","isExpanded","hasChildren","child","menuId","ModulePlaceholder","features","feature","App","offlineMode","setOfflineMode","setCurrentRoute","initializeSocket","handleOnline","handleOffline","onLine","OfflineAlert","fillRule","clipRule","Router","Routes","Route","element","Navigate","urls","serviceWorkerUrl","serviceWorker","registration","as","endsWith","baseUrl","quality","optimizedUrl","format","fit","optimizeImage","metaThemeColor","appleTouchIcon","manifestLink","getElementById","render","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35]}